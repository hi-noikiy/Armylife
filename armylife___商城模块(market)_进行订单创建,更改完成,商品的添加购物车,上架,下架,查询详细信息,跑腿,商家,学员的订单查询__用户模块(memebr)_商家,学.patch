Index: payments/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- payments/src/main/resources/bootstrap.properties	(date 1576056269597)
+++ payments/src/main/resources/bootstrap.properties	(date 1576056269597)
@@ -0,0 +1,23 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=service+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev++######## 企业公众号开发配置中的token(自定义)+wechat.users.token=armylife+######## 应用id+#wechat.company.appId=wx9346f9d095dafc87+wechat.users.appId=wx9e015ae632859f8e+######## 密钥(同token查看地址)+#wechat.company.appSecret=61dd7f22ded29cda049813678c1577b0+wechat.users.appSecret=9dcb718a89ef427d35aa10d69affcde5+######## 静默授权微信回调url+wechat.users.callBackSlientUrl=http://www.oneoffer.cn/companyWxpay/callback+######## 商户Id(支付相关)+wechat.users.MCHID=1516702411+######## 微信下单地址+wechat.users.wxorder=https://api.mch.weixin.qq.com/pay/unifiedorder+######## 支付api密钥+wechat.users.KEY=STFpefEPYK5smME0vleQKoywvo4vTGiG+######## 支付结果回调地址+wechat.users.NOTIFYURL=http://www.oneoffer.cn/MemberWxpay/callback
\ No newline at end of file
Index: payments/src/main/resources/Mapper/PaymentsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575465038149)
+++ payments/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575465038149)
@@ -0,0 +1,148 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.payments.Mapper.PaymentsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="payments_id" jdbcType="BIGINT" property="paymentsId" />
+    <result column="order_id" jdbcType="BIGINT" property="orderId" />
+    <result column="pay_name" jdbcType="INTEGER" property="payName" />
+    <result column="receiv_name" jdbcType="INTEGER" property="receivName" />
+    <result column="pay_total" jdbcType="DECIMAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
+    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
+    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
+    <result column="pay_app" jdbcType="VARCHAR" property="payApp" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+    <result column="pay_refund" jdbcType="INTEGER" property="payRefund" />
+    <result column="refund_desc" jdbcType="VARCHAR" property="refundDesc" />
+    <result column="refund_total" jdbcType="DECIMAL" property="refundTotal" />
+    <result column="refuns_time" jdbcType="VARCHAR" property="refunsTime" />
+    <result column="refunds_bumber" jdbcType="VARCHAR" property="refundsNumber" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="paymentsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into payments (order_id, pay_name, receiv_name, 
+      pay_total, pay_desc, pay_status, 
+      pay_order, pay_number, creat_time, 
+      end_time, pay_refund, refund_desc, 
+      refund_total, refuns_time, refunds_number
+      )
+    values (#{orderId,jdbcType=BIGINT}, #{payName,jdbcType=INTEGER}, #{receivName,jdbcType=INTEGER}, 
+      #{payTotal,jdbcType=DECIMAL}, #{payDesc,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, 
+      #{payOrder,jdbcType=INTEGER}, #{payNumber,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, 
+      #{endTime,jdbcType=VARCHAR}, #{payRefund,jdbcType=INTEGER}, #{refundDesc,jdbcType=VARCHAR}, 
+      #{refundTotal,jdbcType=DECIMAL}, #{refunsTime,jdbcType=VARCHAR}, #{refundsNumber,jdbcType=VARCHAR}
+      )
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update payments
+    set order_id = #{orderId,jdbcType=BIGINT},
+      pay_name = #{payName,jdbcType=INTEGER},
+      receiv_name = #{receivName,jdbcType=INTEGER},
+      pay_total = #{payTotal,jdbcType=DECIMAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR},
+      pay_status = #{payStatus,jdbcType=VARCHAR},
+      pay_order = #{payOrder,jdbcType=INTEGER},
+      pay_number = #{payNumber,jdbcType=VARCHAR},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      end_time = #{endTime,jdbcType=VARCHAR},
+      pay_refund = #{payRefund,jdbcType=INTEGER},
+      refund_desc = #{refundDesc,jdbcType=VARCHAR},
+      refund_total = #{refundTotal,jdbcType=DECIMAL},
+      refuns_time = #{refunsTime,jdbcType=VARCHAR},
+      refunds_number = #{refundsNumber,jdbcType=VARCHAR}
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+  </select>
+  
+<!--  查询商铺收入金额-->
+  <select id="SelectPayForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName}
+  </select>
+  
+<!--  查询商铺退款金额-->
+  <select id="SelectRefundForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName} and pay_refund=#{payRefund}
+  </select>
+  
+  <update id="updatePayMentsForCallback" >
+    update payments 
+    <set>
+      <if test="payStatus!=null">
+        pay_status=#{payStatus},
+      </if>
+      <if test="payNumber!=null">
+        pay_number=#{payNumber},
+      </if>
+      <if test="endTime!=null">
+        end_time=#{endTime},
+      </if>
+      <if test="payApp!=null">
+        pay_app=#{payApp}
+      </if>
+      <if test="refundsNumber!=null">
+        refunds_number=#{refundsNumber}
+      </if>
+      <if test="refundTotal!=null">
+        refund_total=#{refundTotal}
+      </if>
+      <if test="payRefund!=null">
+        pay_refund=#{payRefund}
+      </if>
+      <if test="refundDesc!=null">
+        refund_desc=#{refundDesc}
+      </if>
+      <if test="refunsTime!=null">
+        refuns_time=#{refunsTime}
+      </if>
+    </set>
+    where payments_id=#{paymentsId}
+  </update>
+
+  <select id="selectPaments" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where order_id=#{orderId}
+  </select>
+</mapper>
\ No newline at end of file
Index: payments/src/main/resources/Mapper/AfterOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1575807747483)
+++ payments/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1575807747483)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.payments.Mapper.AfterOrderMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="after_order_id" property="afterOrderId" jdbcType="BIGINT" />
+    <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+    <result column="after_order_total" property="afterOrderTotal" jdbcType="DECIMAL" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="afterOrderId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into after_order (orders_id, product_id, creat_time, 
+      after_order_total)
+    values (#{ordersId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{creatTime,jdbcType=VARCHAR}, 
+      #{afterOrderTotal,jdbcType=DECIMAL})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update after_order
+    set orders_id = #{ordersId,jdbcType=BIGINT},
+      product_id = #{productId,jdbcType=BIGINT},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      after_order_total = #{afterOrderTotal,jdbcType=DECIMAL}
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+  </select>
+  <update id="updateafterOrderForPay" >
+    update after_order set is_pay=#{isPay} where after_order_id=#{afterOrderId}
+  </update>
+</mapper>
\ No newline at end of file
Index: payments/src/main/resources/Mapper/TransactionsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/resources/Mapper/TransactionsMapper.xml	(date 1574838486228)
+++ payments/src/main/resources/Mapper/TransactionsMapper.xml	(date 1574838486228)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.payments.Mapper.TransactionsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="tranactions_id" jdbcType="BIGINT" property="tranactionsId" />
+    <result column="pay_total" jdbcType="DECIMAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_user" jdbcType="VARCHAR" property="payUser" />
+    <result column="pay_wechatnum" jdbcType="VARCHAR" property="payWechatnum" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="tranactionsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into transactions (pay_total, pay_desc, pay_user, 
+      pay_wechatnum, creat_time, end_time
+      )
+    values (#{payTotal,jdbcType=DECIMAL}, #{payDesc,jdbcType=VARCHAR}, #{payUser,jdbcType=VARCHAR}, 
+      #{payWechatnum,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}
+      )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select tranactions_id, pay_total, pay_desc, pay_user, pay_wechatnum, creat_time, 
+    end_time
+    from transactions
+  </select>
+</mapper>
\ No newline at end of file
Index: member/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/pom.xml	(date 1576286133085)
+++ member/pom.xml	(date 1576286133085)
@@ -0,0 +1,233 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.0.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>member</artifactId>
+    <version>test</version>
+    <name>member</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/com.github.wxpay/wxpay-sdk -->
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.apache.logging.log4j</groupId>
+            <artifactId>log4j-slf4j-impl</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
+            <artifactId>mybatis-enhance-actable</artifactId>
+            <version>1.0.3</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.mybatis.spring.boot</groupId>
+            <artifactId>mybatis-spring-boot-starter</artifactId>
+            <version>2.1.1</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.mybatis.generator</groupId>
+            <artifactId>mybatis-generator-core</artifactId>
+            <version>1.3.5</version>
+        </dependency>
+
+        <!--阿里云短信发送start-->
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-java-sdk-core</artifactId>
+            <version>4.0.6</version>
+        </dependency>
+
+        <dependency>
+            <groupId>com.aliyun</groupId>
+            <artifactId>aliyun-java-sdk-dysmsapi</artifactId>
+            <version>1.1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>com.github.pagehelper</groupId>
+            <artifactId>pagehelper</artifactId>
+            <version>5.1.4</version>
+            <scope>compile</scope>
+        </dependency>
+
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>1.8</source>
+                    <target>1.8</target>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.mybatis.generator</groupId>
+                <artifactId>mybatis-generator-maven-plugin</artifactId>
+                <version>1.3.2</version>
+                <executions>
+                    <execution>
+                        <id>mybatis-generator</id>
+                        <phase>deploy</phase>
+                        <goals>
+                            <goal>generate</goal>
+                        </goals>
+                    </execution>
+                </executions>
+                <configuration>
+                    <!-- Mybatis-Generator 工具配置文件的位置 -->
+                    <configurationFile>src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>
+                    <verbose>true</verbose>
+                    <overwrite>true</overwrite>
+                </configuration>
+                <dependencies>
+                    <dependency>
+                        <groupId>mysql</groupId>
+                        <artifactId>mysql-connector-java</artifactId>
+                        <version>8.0.15</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>org.mybatis.generator</groupId>
+                        <artifactId>mybatis-generator-core</artifactId>
+                        <version>1.3.2</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <configuration>
+                    <classifier>exec</classifier>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring-milestones</id>
+            <name>Spring Milestones</name>
+            <url>https://repo.spring.io/milestone</url>
+        </repository>
+    </repositories>
+
+</project>
Index: common/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/pom.xml	(date 1576286096035)
+++ common/pom.xml	(date 1576286096035)
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.0.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>common</artifactId>
+    <version>1.0</version>
+    <name>common</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+        <groupId>mysql</groupId>
+        <artifactId>mysql-connector-java</artifactId>
+        <scope>runtime</scope>
+    </dependency>
+        <dependency>
+            <groupId>org.mybatis.generator</groupId>
+            <artifactId>mybatis-generator-core</artifactId>
+            <version>1.3.5</version>
+        </dependency>
+
+        <dependency>
+        <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
+        <artifactId>mybatis-enhance-actable</artifactId>
+        <version>1.0.3</version>
+    </dependency>
+    <dependency>
+        <groupId>org.mybatis.spring.boot</groupId>
+        <artifactId>mybatis-spring-boot-starter</artifactId>
+        <version>1.1.1</version>
+    </dependency>
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.mybatis.generator</groupId>
+                <artifactId>mybatis-generator-maven-plugin</artifactId>
+                <version>1.3.2</version>
+                <executions>
+                    <execution>
+                        <id>mybatis-generator</id>
+                        <phase>deploy</phase>
+                        <goals>
+                            <goal>generate</goal>
+                        </goals>
+                    </execution>
+                </executions>
+                <configuration>
+                    <!-- Mybatis-Generator 工具配置文件的位置 -->
+                    <configurationFile>../common/src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>
+                    <verbose>true</verbose>
+                    <overwrite>true</overwrite>
+                </configuration>
+                <dependencies>
+                    <dependency>
+                        <groupId>mysql</groupId>
+                        <artifactId>mysql-connector-java</artifactId>
+                        <version>8.0.15</version>
+                    </dependency>
+                    <dependency>
+                        <groupId>org.mybatis.generator</groupId>
+                        <artifactId>mybatis-generator-core</artifactId>
+                        <version>1.3.2</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+<!--            <plugin>-->
+<!--                <groupId>org.springframework.boot</groupId>-->
+<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
+<!--                <configuration>-->
+<!--                    <classifier>exec</classifier>-->
+<!--                </configuration>-->
+<!--            </plugin>-->
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring-milestones</id>
+            <name>Spring Milestones</name>
+            <url>https://repo.spring.io/milestone</url>
+        </repository>
+    </repositories>
+
+</project>
Index: hystrixturbine/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/pom.xml	(date 1574994289777)
+++ hystrixturbine/pom.xml	(date 1574994289777)
@@ -0,0 +1,100 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>hystrixturbine</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>hystrixturbine</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <spring-cloud.version>Hoxton.RC1</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-turbine</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring-milestones</id>
+            <name>Spring Milestones</name>
+            <url>https://repo.spring.io/milestone</url>
+        </repository>
+    </repositories>
+
+</project>
Index: payments/src/main/resources/Mapper/config/sqlMapConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
+++ payments/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+
+</configuration>
\ No newline at end of file
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- pom.xml	(date 1576286164263)
+++ pom.xml	(date 1576286164263)
@@ -0,0 +1,143 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>zuul</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>zuul</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-zuul</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+            <!--<version>2.0.0.RELEASE</version>-->
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+        <dependency>
+        <groupId>org.springframework.cloud</groupId>
+        <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+    </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>commons-fileupload</groupId>
+            <artifactId>commons-fileupload</artifactId>
+            <version>1.4</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+        <dependency>
+        <groupId>org.springframework.session</groupId>
+        <artifactId>spring-session-data-redis</artifactId>
+        <version>2.2.0.RELEASE</version>
+    </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring</id>
+            <url>https://maven.aliyun.com/repository/spring</url>
+            <releases>
+                <enabled>true</enabled>
+            </releases>
+            <snapshots>
+                <enabled>true</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+
+</project>
Index: payments/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/pom.xml	(date 1576286145181)
+++ payments/pom.xml	(date 1576286145181)
@@ -0,0 +1,196 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.amrylife</groupId>
+    <artifactId>payments</artifactId>
+    <version>1.0</version>
+    <name>payments</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>1.8</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-amqp</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-jdbc</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-websocket</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.amqp</groupId>
+            <artifactId>spring-rabbit-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+        <groupId>org.springframework.cloud</groupId>
+        <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+        <version>0.9.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.generator</groupId>
+            <artifactId>mybatis-generator-core</artifactId>
+            <version>1.3.5</version>
+        </dependency>
+        <dependency>
+            <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
+            <artifactId>mybatis-enhance-actable</artifactId>
+            <version>1.0.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.spring.boot</groupId>
+            <artifactId>mybatis-spring-boot-starter</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.github.wxpay/wxpay-sdk -->
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba.csp</groupId>
+            <artifactId>sentinel-core</artifactId>
+            <version>1.5.2</version>
+            <scope>compile</scope>
+        </dependency>
+
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.alipay.sdk</groupId>
+            <artifactId>alipay-sdk-java</artifactId>
+            <version>4.8.62.ALL</version>
+        </dependency>
+    </dependencies>
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring</id>
+            <url>https://maven.aliyun.com/repository/spring</url>
+            <releases>
+                <enabled>true</enabled>
+            </releases>
+            <snapshots>
+                <enabled>true</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+
+</project>
Index: market/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/pom.xml	(date 1576286121745)
+++ market/pom.xml	(date 1576286121745)
@@ -0,0 +1,213 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>market</artifactId>
+    <version>1.0</version>
+    <name>market</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-websocket</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-actuator</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.generator</groupId>
+            <artifactId>mybatis-generator-core</artifactId>
+            <version>1.3.5</version>
+        </dependency>
+        <!-- mybatis的分页插件 -->
+        <dependency>
+            <groupId>com.github.pagehelper</groupId>
+            <artifactId>pagehelper-spring-boot-starter</artifactId>
+            <version>1.2.5</version>
+        </dependency>
+        <dependency>
+            <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
+            <artifactId>mybatis-enhance-actable</artifactId>
+            <version>1.0.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.spring.boot</groupId>
+            <artifactId>mybatis-spring-boot-starter</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+            <scope>compile</scope>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
+        <dependency>
+            <groupId>redis.clients</groupId>
+            <artifactId>jedis</artifactId>
+            <version>3.1.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-cache</artifactId>
+            <version>2.2.1.RELEASE</version>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+            <version>3.9</version>
+        </dependency>
+        <dependency>
+            <groupId>redis.clients</groupId>
+            <artifactId>jedis</artifactId>
+            <version>2.9.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-amqp</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.activemq</groupId>
+            <artifactId>activemq-all</artifactId>
+            <version>5.15.9</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.github.wxpay/wxpay-sdk -->
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core -->
+        <dependency>
+            <groupId>com.alibaba.csp</groupId>
+            <artifactId>sentinel-core</artifactId>
+            <version>1.5.2</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+            <scope>compile</scope>
+        </dependency>
+
+    </dependencies>
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+    <repositories>
+        <repository>
+            <id>spring-milestones</id>
+            <name>Spring Milestones</name>
+            <url>https://repo.spring.io/milestone</url>
+        </repository>
+    </repositories>
+
+</project>
Index: payservice/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/pom.xml	(date 1576286153417)
+++ payservice/pom.xml	(date 1576286153417)
@@ -0,0 +1,200 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>payservice</artifactId>
+    <version>1.0</version>
+    <name>payservice</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <skipTests>true</skipTests>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-amqp</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-thymeleaf</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/com.github.wxpay/wxpay-sdk -->
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.amqp</groupId>
+            <artifactId>spring-rabbit-test</artifactId>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba.csp</groupId>
+            <artifactId>sentinel-core</artifactId>
+            <version>1.5.2</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.alipay.sdk</groupId>
+            <artifactId>alipay-sdk-java</artifactId>
+            <version>4.8.62.ALL</version>
+        </dependency>
+
+        <dependency>
+            <groupId>commons-logging</groupId>
+            <artifactId>commons-logging</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+        <dependency>
+            <groupId>org.bouncycastle</groupId>
+            <artifactId>bcprov-jdk15on</artifactId>
+            <version>1.64</version>
+        </dependency>
+        <dependency>
+            <groupId>com.alibaba</groupId>
+            <artifactId>fastjson</artifactId>
+            <version>1.2.62</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-dependencies</artifactId>
+            <version>Hoxton.RC2</version>
+            <type>pom</type>
+        </dependency>
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>com.googlecode.json-simple</groupId>
+            <artifactId>json-simple</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+
+
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring</id>
+            <url>https://maven.aliyun.com/repository/spring</url>
+            <releases>
+                <enabled>true</enabled>
+            </releases>
+            <snapshots>
+                <enabled>true</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+</project>
Index: admin/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/pom.xml	(date 1576286085893)
+++ admin/pom.xml	(date 1576286085893)
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.1.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>admin</artifactId>
+    <version>0.1</version>
+    <name>admin</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+    <repositories>
+        <repository>
+            <id>spring</id>
+            <url>https://maven.aliyun.com/repository/spring</url>
+            <releases>
+                <enabled>true</enabled>
+            </releases>
+            <snapshots>
+                <enabled>true</enabled>
+            </snapshots>
+        </repository>
+    </repositories>
+
+</project>
Index: integralmall/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/pom.xml	(date 1575853546596)
+++ integralmall/pom.xml	(date 1575853546596)
@@ -0,0 +1,201 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>2.2.2.RELEASE</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>cn.armylife</groupId>
+    <artifactId>integralmall</artifactId>
+    <version>1.0</version>
+    <name>integralmall</name>
+    <description>Demo project for Spring Boot</description>
+
+    <properties>
+        <java.version>13</java.version>
+        <spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
+    </properties>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-websocket</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-openfeign</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
+            <version>0.9.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.cloud</groupId>
+            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.junit.vintage</groupId>
+                    <artifactId>junit-vintage-engine</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.session</groupId>
+            <artifactId>spring-session-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-redis -->
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-redis</artifactId>
+            <version>2.2.0.RELEASE</version>
+        </dependency>
+
+        <dependency>
+            <groupId>mysql</groupId>
+            <artifactId>mysql-connector-java</artifactId>
+            <scope>runtime</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.generator</groupId>
+            <artifactId>mybatis-generator-core</artifactId>
+            <version>1.3.5</version>
+        </dependency>
+        <!-- mybatis的分页插件 -->
+        <dependency>
+            <groupId>com.github.pagehelper</groupId>
+            <artifactId>pagehelper-spring-boot-starter</artifactId>
+            <version>1.2.5</version>
+        </dependency>
+        <dependency>
+            <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
+            <artifactId>mybatis-enhance-actable</artifactId>
+            <version>1.0.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.mybatis.spring.boot</groupId>
+            <artifactId>mybatis-spring-boot-starter</artifactId>
+            <version>1.1.1</version>
+        </dependency>
+        <dependency>
+            <groupId>cn.armylife</groupId>
+            <artifactId>common</artifactId>
+            <version>1.0</version>
+            <scope>compile</scope>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
+        <dependency>
+            <groupId>redis.clients</groupId>
+            <artifactId>jedis</artifactId>
+            <version>3.1.0</version>
+        </dependency>
+
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-cache</artifactId>
+            <version>2.2.1.RELEASE</version>
+        </dependency>
+
+        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
+        <dependency>
+            <groupId>org.apache.commons</groupId>
+            <artifactId>commons-lang3</artifactId>
+            <version>3.9</version>
+        </dependency>
+        <dependency>
+            <groupId>redis.clients</groupId>
+            <artifactId>jedis</artifactId>
+            <version>2.9.3</version>
+        </dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-amqp</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.activemq</groupId>
+            <artifactId>activemq-all</artifactId>
+            <version>5.15.9</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.github.wxpay/wxpay-sdk -->
+        <dependency>
+            <groupId>com.github.wxpay</groupId>
+            <artifactId>wxpay-sdk</artifactId>
+            <version>0.0.3</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.alibaba.csp/sentinel-core -->
+        <dependency>
+            <groupId>com.alibaba.csp</groupId>
+            <artifactId>sentinel-core</artifactId>
+            <version>1.5.2</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>net.sf.json-lib</groupId>
+            <artifactId>json-lib</artifactId>
+            <version>2.4</version>
+            <classifier>jdk15</classifier>
+            <scope>compile</scope>
+        </dependency>
+        
+    </dependencies>
+
+    <dependencyManagement>
+        <dependencies>
+            <dependency>
+                <groupId>org.springframework.cloud</groupId>
+                <artifactId>spring-cloud-dependencies</artifactId>
+                <version>${spring-cloud.version}</version>
+                <type>pom</type>
+                <scope>import</scope>
+            </dependency>
+        </dependencies>
+    </dependencyManagement>
+
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>12</source>
+                    <target>12</target>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
Index: integralmall/src/main/java/cn/armylife/integralmall/IntegralmallApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/IntegralmallApplication.java	(date 1575857773795)
+++ integralmall/src/main/java/cn/armylife/integralmall/IntegralmallApplication.java	(date 1575857773795)
@@ -0,0 +1,62 @@
+package cn.armylife.integralmall;
+
+import com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+import org.springframework.session.web.http.CookieSerializer;
+import org.springframework.session.web.http.DefaultCookieSerializer;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+import org.springframework.web.client.RestTemplate;
+
+@SpringBootApplication
+@EnableFeignClients
+@EnableDiscoveryClient
+@EnableRedisHttpSession
+@EnableHystrix
+@EnableHystrixDashboard
+@EnableCircuitBreaker
+@EnableTransactionManagement
+@MapperScan(basePackages = "cn.armylife.integral.Mapper")
+public class IntegralmallApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(IntegralmallApplication.class, args);
+    }
+    @Bean
+    @LoadBalanced
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+    @Bean
+    public ServletRegistrationBean getServlet() {
+        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
+        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
+        registrationBean.setLoadOnStartup(1);
+        registrationBean.addUrlMappings("/hystrix.stream");
+        registrationBean.setName("HystrixMetricsStreamServlet");
+        return registrationBean;
+    }
+
+    @Bean
+    public CookieSerializer cookieSerializer() {
+        DefaultCookieSerializer defaultCookieSerializer = new DefaultCookieSerializer();
+        //cookie名字
+        defaultCookieSerializer.setCookieName("sessionId");
+        //域
+//        defaultCookieSerializer.setDomainName("xxx.com");
+        //存储路径设为根路径，同一域名下多个项目共享该cookie
+        defaultCookieSerializer.setCookiePath("/");
+        return defaultCookieSerializer;
+    }
+}
Index: payments/src/test/java/cn/armylife/payments/PaymentsApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/test/java/cn/armylife/payments/PaymentsApplicationTests.java	(date 1574843449990)
+++ payments/src/test/java/cn/armylife/payments/PaymentsApplicationTests.java	(date 1574843449990)
@@ -0,0 +1,13 @@
+package cn.armylife.payments;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class PaymentsApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: payments/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- payments/.mvn/wrapper/maven-wrapper.properties	(date 1574145477087)
+++ payments/.mvn/wrapper/maven-wrapper.properties	(date 1574145477087)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: payments/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609835)
+++ payments/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609835)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: payservice/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/mvnw	(date 1574242582137)
+++ payservice/mvnw	(date 1574242582137)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+        
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: payservice/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/mvnw.cmd	(date 1574242582139)
+++ payservice/mvnw.cmd	(date 1574242582139)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: payservice/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/.gitignore	(date 1574242582557)
+++ payservice/.gitignore	(date 1574242582557)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mvnw.cmd	(date 1572342323455)
+++ mvnw.cmd	(date 1572342323455)
@@ -0,0 +1,161 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+FOR /F "tokens=1,2 delims==" %%A IN (%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties) DO (
+	IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B 
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    echo Found %WRAPPER_JAR%
+) else (
+    echo Couldn't find %WRAPPER_JAR%, downloading it ...
+	echo Downloading from: %DOWNLOAD_URL%
+    powershell -Command "(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"
+    echo Finished downloading %WRAPPER_JAR%
+)
+@REM End of extension
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- mvnw	(date 1572342323457)
+++ mvnw	(date 1572342323457)
@@ -0,0 +1,286 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+  # TODO classpath?
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        wget "$jarUrl" -O "$wrapperJarPath"
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        curl -o "$wrapperJarPath" "$jarUrl"
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1572342323475)
+++ .gitignore	(date 1572342323475)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: src/main/java/cn/armylife/zuul/ZuulApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/ZuulApplication.java	(date 1575078139444)
+++ src/main/java/cn/armylife/zuul/ZuulApplication.java	(date 1575078139444)
@@ -0,0 +1,41 @@
+package cn.armylife.zuul;
+
+import com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.netflix.zuul.EnableZuulProxy;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+
+@SpringBootApplication
+@EnableZuulProxy
+@EnableDiscoveryClient
+@EnableRedisHttpSession
+@EnableHystrixDashboard
+@EnableHystrix
+@EnableCircuitBreaker
+@EnableFeignClients
+public class ZuulApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(ZuulApplication.class, args);
+    }
+
+    @Bean
+    public ServletRegistrationBean getServlet() {
+        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
+        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
+        registrationBean.setLoadOnStartup(1);
+        registrationBean.addUrlMappings("/hystrix.stream");
+        registrationBean.setName("HystrixMetricsStreamServlet");
+        return registrationBean;
+    }
+
+
+}
Index: src/main/java/cn/armylife/zuul/Feign/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/Feign/MemberService.java	(date 1575087048317)
+++ src/main/java/cn/armylife/zuul/Feign/MemberService.java	(date 1575087048317)
@@ -0,0 +1,13 @@
+package cn.armylife.zuul.Feign;
+
+import cn.armylife.zuul.Hystrix.MemberServiceHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "memberservice",fallback = MemberServiceHystrix.class)
+public interface MemberService {
+
+    @RequestMapping(value = "reloadSession")
+    int reloadSession(@RequestParam Integer memberId);
+}
Index: src/main/java/cn/armylife/zuul/Config/CustomSessionDefaultRedisSerializer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/Config/CustomSessionDefaultRedisSerializer.java	(date 1572513425372)
+++ src/main/java/cn/armylife/zuul/Config/CustomSessionDefaultRedisSerializer.java	(date 1572513425372)
@@ -0,0 +1,26 @@
+package cn.armylife.zuul.Config;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.data.redis.serializer.JdkSerializationRedisSerializer;
+import org.springframework.lang.Nullable;
+import org.springframework.stereotype.Component;
+
+
+@Component("springSessionDefaultRedisSerializer")
+public class CustomSessionDefaultRedisSerializer extends JdkSerializationRedisSerializer {
+    private static final Logger LOG = LoggerFactory.getLogger(CustomSessionDefaultRedisSerializer.class);
+
+    public Object deserialize(@Nullable byte[] bytes) {
+        Object deserialObj = null;
+        try
+        {
+            deserialObj =  super.deserialize(bytes);
+        }
+        catch(Exception e)
+        {
+            LOG.warn("deserialize session Object error!", e);
+        }
+        return deserialObj;
+    }
+}
Index: src/main/java/cn/armylife/zuul/Config/LoginFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/Config/LoginFilter.java	(date 1575094666401)
+++ src/main/java/cn/armylife/zuul/Config/LoginFilter.java	(date 1575094666401)
@@ -0,0 +1,73 @@
+package cn.armylife.zuul.Config;
+
+import cn.armylife.zuul.Feign.MemberService;
+import com.netflix.zuul.ZuulFilter;
+import com.netflix.zuul.context.RequestContext;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Component;
+import org.springframework.util.AntPathMatcher;
+import org.springframework.util.PathMatcher;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import java.util.logging.Logger;
+
+@Component
+public class LoginFilter  extends ZuulFilter {
+
+    private static Logger logger = Logger.getLogger("LoginFilter.class");
+    @Autowired
+    MemberService memberService;
+
+    //非拦截地址
+    private List<String> paths;
+    public LoginFilter() {
+        super();
+        paths = new ArrayList<>();
+        paths.add("/Member/loginUser");
+        paths.add("/Member/register");
+        paths.add("/Member/reloadSession");
+        paths.add("/**/swagger**/**");
+        paths.add("/**/v2/api-docs");
+        paths.add("/**/*.css");
+        paths.add("/**/*.jpg");
+        paths.add("/**/*.png");
+        paths.add("/**/*.gif");
+        paths.add("/**/*.js");
+        paths.add("/**/*.svg");
+    }
+
+
+    @Override
+    public String filterType() {
+        return "pre";
+    }
+
+    @Override
+    public int filterOrder() {
+        return 2;
+    }
+
+    @Override
+    public boolean shouldFilter() {
+        RequestContext requestContext = RequestContext.getCurrentContext();
+        HttpServletRequest request = requestContext.getRequest();
+        String uri=request.getRequestURI();
+        logger.info("uri:{}"+ uri);
+        PathMatcher matcher = new AntPathMatcher();
+        Optional<String> optional =paths.stream().filter(t->matcher.match(t,uri)).findFirst();
+        return !optional.isPresent();
+    }
+
+    @Override
+    public Object run() {
+        RequestContext ctx = RequestContext.getCurrentContext();
+        HttpServletRequest request = ctx.getRequest();
+        logger.info("send  {} request to {} "+request.getMethod()+request.getRequestURL().toString());
+
+        return null;
+
+    }
+}
\ No newline at end of file
Index: src/main/java/cn/armylife/zuul/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/Config/SessionConfig.java	(date 1572406054898)
+++ src/main/java/cn/armylife/zuul/Config/SessionConfig.java	(date 1572406054898)
@@ -0,0 +1,9 @@
+package cn.armylife.zuul.Config;
+
+import org.springframework.context.annotation.Configuration;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+
+@Configuration
+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)
+public class SessionConfig {
+}
Index: src/main/java/cn/armylife/zuul/Hystrix/MemberServiceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/cn/armylife/zuul/Hystrix/MemberServiceHystrix.java	(date 1575077511341)
+++ src/main/java/cn/armylife/zuul/Hystrix/MemberServiceHystrix.java	(date 1575077511341)
@@ -0,0 +1,13 @@
+package cn.armylife.zuul.Hystrix;
+
+import cn.armylife.zuul.Feign.MemberService;
+
+import javax.servlet.http.HttpServletRequest;
+
+public class MemberServiceHystrix implements MemberService {
+
+    @Override
+    public int reloadSession(Integer memberId) {
+        return 0;
+    }
+}
Index: src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/application.yml	(date 1575875349488)
+++ src/main/resources/application.yml	(date 1575875349488)
@@ -0,0 +1,61 @@
+server:
+  port: 9000
+zuul:
+  host:
+    connect-timeout-millis: 15000 #HTTP连接超时要比Hystrix的大
+    socket-timeout-millis: 60000
+  routes:
+    Member:
+      path: /Member/**
+      serviceId: memberservice
+      sensitiveHeaders:
+    Order:
+      path: /Market/**
+      serviceId: marketservice
+      sensitiveHeaders:
+    Pays:
+      path: /Pays/**
+      serviceId: payservice
+      sensitiveHeaders:
+    PayMents:
+      path: /PayMents/**
+      serviceId: paymentsservice
+      sensitiveHeaders:
+    IntegralMall:
+      path: /IntegralMall/**
+      serviceId: integralservice
+      sensitiveHeaders:
+
+spring:
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    username: root
+    password: root
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    hikari:
+      max-lifetime: 8
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+  application:
+    name: zuul
+  redis:
+    host: 127.0.0.1
+    port: 6379
+    timeout: 86400s
+  session:
+    store-type: redis
+    redis:
+      flush-mode: on_save
+      namespace: spring:session
+    timeout: 86400s
+management:
+  endpoints:
+    web:
+      exposure:
+        include: "*"
+base-path: /
+ribbon:
+  ReadTimeout: 60000
+  ConnectTimeout: 60000
\ No newline at end of file
Index: payservice/src/main/java/cn/armylife/payservice/Utils/ClientCustomSSL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/ClientCustomSSL.java	(date 1575475667236)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/ClientCustomSSL.java	(date 1575475667236)
@@ -0,0 +1,68 @@
+package cn.armylife.payservice.Utils;++import org.apache.http.HttpEntity;+import org.apache.http.client.methods.CloseableHttpResponse;+import org.apache.http.client.methods.HttpPost;+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;+import org.apache.http.entity.StringEntity;+import org.apache.http.impl.client.CloseableHttpClient;+import org.apache.http.impl.client.HttpClients;+import org.apache.http.ssl.SSLContexts;+import org.apache.http.util.EntityUtils;++import javax.net.ssl.SSLContext;+import java.io.File;+import java.io.FileInputStream;+import java.security.KeyStore;++public class ClientCustomSSL {+public static String doRefund(String url, String data, String mchid) throws Exception {+        System.out.println(mchid);+//指定读取证书格式为PKCS12(注意PKCS12证书 是从微信商户平台-》账户设置-》 API安全 中下载的)+KeyStore keyStore = KeyStore.getInstance("PKCS12");+String fileName = "apiclient_cert.p12"; //文件名+// 指定证书路径+String path = "/root/oneoffer/apiclient_cert.p12";+//读取本机存放的PKCS12证书文件+FileInputStream instream = new FileInputStream(new File(path));++//比如安装在D:/pkcs12/apiclient_cert.p12情况下，就可以写成如下语句+//FileInputStream instream = new FileInputStream(new File("D:/pkcs12/apiclient_cert.p12"));+try {+//指定PKCS12的密码(商户ID)++System.out.println(mchid.toCharArray());+keyStore.load(instream, mchid.toCharArray());+} finally {+instream.close();+}+SSLContext sslcontext = SSLContexts.custom().loadKeyMaterial(keyStore, mchid.toCharArray()).build();+//指定TLS版本+SSLConnectionSocketFactory sslsf = new SSLConnectionSocketFactory( sslcontext,new String[] { "TLSv1" },null, SSLConnectionSocketFactory.BROWSER_COMPATIBLE_HOSTNAME_VERIFIER);+//设置httpclient的SSLSocketFactory+CloseableHttpClient httpclient = HttpClients.custom().setSSLSocketFactory(sslsf).build();+try {+HttpPost httpost = new HttpPost(url); // 设置响应头信息+httpost.addHeader("Connection", "keep-alive");+httpost.addHeader("Accept", "*/*");+httpost.addHeader("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8");+httpost.addHeader("Host", "api.mch.weixin.qq.com");+httpost.addHeader("X-Requested-With", "XMLHttpRequest");+httpost.addHeader("Cache-Control", "max-age=0");+httpost.addHeader("User-Agent", "Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0) ");+httpost.setEntity(new StringEntity(data, "UTF-8"));+CloseableHttpResponse response = httpclient.execute(httpost);+try {+HttpEntity entity = response.getEntity();+String jsonStr = EntityUtils.toString(response.getEntity(), "UTF-8");+EntityUtils.consume(entity);+    System.out.println(jsonStr);+return jsonStr;+} finally {+response.close();+}+} finally {+httpclient.close();+}+}+}Index: payservice/src/main/java/cn/armylife/payservice/Utils/logFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/logFile.java	(date 1574492217890)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/logFile.java	(date 1574492217890)
@@ -0,0 +1,30 @@
+package cn.armylife.payservice.Utils;
+
+import cn.armylife.payservice.Config.AlipayConfig;
+
+import java.io.FileWriter;
+import java.io.IOException;
+
+public class logFile {
+	 /** 
+     * 写日志，方便测试（看网站需求，也可以改成把记录存入数据库）
+     * @param sWord 要写入日志里的文本内容
+     */
+    public static void logResult(String sWord) {
+        FileWriter writer = null;
+        try {
+            writer = new FileWriter(AlipayConfig.log_path + "alipay_log_" + System.currentTimeMillis()+".txt");
+            writer.write(sWord);
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (writer != null) {
+                try {
+                    writer.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+    }   
+}
Index: payservice/src/main/java/cn/armylife/payservice/Utils/OtherUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/OtherUtils.java	(date 1574837582291)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/OtherUtils.java	(date 1574837582291)
@@ -0,0 +1,85 @@
+package cn.armylife.payservice.Utils;++import org.apache.commons.lang.StringUtils;+import org.springframework.stereotype.Component;++import java.net.URLEncoder;+import java.util.*;++@Component+public class OtherUtils {+    /*+     * 生成32位随机字符串+     * */+    public static String getNonceStr() {+        UUID uuid = UUID.randomUUID();+        return uuid.toString().replace("-", "");+    }++    /**+     * 方法用途: 对所有传入参数按照字段名的Unicode码从小到大排序（字典序），并且生成url参数串<br>+     * 实现步骤: <br>+     *+     * @param paraMap    要排序的Map对象+     * @param urlEncode  是否需要URLENCODE+     * @param keyToLower 是否需要将Key转换为全小写+     *                   true:key转化成小写，false:不转化+     * @return+     */+    public static String formatUrlMap(Map<String, String> paraMap, boolean urlEncode, boolean keyToLower) {+        String buff = "";+        Map<String, String> tmpMap = paraMap;+        try {+            List<Map.Entry<String, String>> infoIds = new ArrayList<Map.Entry<String, String>>(tmpMap.entrySet());+            // 对所有传入参数按照字段名的 ASCII 码从小到大排序（字典序）+            Collections.sort(infoIds, new Comparator<Map.Entry<String, String>>() {+                @Override+                public int compare(Map.Entry<String, String> o1, Map.Entry<String, String> o2) {+                    return (o1.getKey()).toString().compareTo(o2.getKey());+                }+            });+            // 构造URL 键值对的格式+            StringBuilder buf = new StringBuilder();+            for (Map.Entry<String, String> item : infoIds) {+                if (StringUtils.isNotBlank(item.getKey())) {+                    String key = item.getKey();+                    String val = item.getValue();+                    if (urlEncode) {+                        val = URLEncoder.encode(val, "utf-8");+                    }+                    if (keyToLower) {+                        buf.append(key.toLowerCase() + "=" + val);+                    } else {+                        buf.append(key + "=" + val);+                    }+                    buf.append("&");+                }++            }+            buff = buf.toString();+            if (buff.isEmpty() == false) {+                buff = buff.substring(0, buff.length() - 1);+            }+        } catch (Exception e) {+            return null;+        }+        return buff;+    }++++    /**+     * 功能描述: 判断值是否为double+     */+    public static boolean isToDouble(Object o){++        try {+            Double.valueOf(o.toString());+            return true;+        }catch (Exception e){+            return false;+        }+    }+++}Index: payservice/src/main/java/cn/armylife/payservice/Utils/WXPayXmlUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/WXPayXmlUtil.java	(date 1574242899367)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/WXPayXmlUtil.java	(date 1574242899367)
@@ -0,0 +1,30 @@
+package cn.armylife.payservice.Utils;
+
+import org.w3c.dom.Document;
+
+import javax.xml.XMLConstants;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+/**
+ * 2018/7/3
+ */
+public final class WXPayXmlUtil {
+    public static DocumentBuilder newDocumentBuilder() throws ParserConfigurationException {
+        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+        documentBuilderFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+        documentBuilderFactory.setXIncludeAware(false);
+        documentBuilderFactory.setExpandEntityReferences(false);
+
+        return documentBuilderFactory.newDocumentBuilder();
+    }
+
+    public static Document newDocument() throws ParserConfigurationException {
+        return newDocumentBuilder().newDocument();
+    }
+}
Index: payservice/src/main/java/cn/armylife/payservice/Utils/WXPayUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/WXPayUtil.java	(date 1574303035708)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/WXPayUtil.java	(date 1574303035708)
@@ -0,0 +1,527 @@
+package cn.armylife.payservice.Utils;
+
+import com.alibaba.csp.sentinel.util.StringUtil;
+import com.alibaba.fastjson.JSONObject;
+import com.github.wxpay.sdk.WXPayConstants;
+import com.github.wxpay.sdk.WXPayConstants.SignType;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+import javax.servlet.http.HttpServletRequest;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import java.io.*;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLEncoder;
+import java.security.MessageDigest;
+import java.security.SecureRandom;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+
+public class WXPayUtil {
+
+    private static final String SYMBOLS = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
+    private static final Random RANDOM = new SecureRandom();
+
+    /**
+     * XML格式字符串转换为Map
+     *
+     * @param strXML XML字符串
+     * @return XML数据转换后的Map
+     * @throws Exception
+     */
+    public static Map<String, String> xmlToMap(String strXML) throws Exception {
+        try {
+            Map<String, String> data = new HashMap<String, String>();
+            DocumentBuilder documentBuilder = WXPayXmlUtil.newDocumentBuilder();
+            InputStream stream = new ByteArrayInputStream(strXML.getBytes("UTF-8"));
+            org.w3c.dom.Document doc = documentBuilder.parse(stream);
+            doc.getDocumentElement().normalize();
+            NodeList nodeList = doc.getDocumentElement().getChildNodes();
+            for (int idx = 0; idx < nodeList.getLength(); ++idx) {
+                Node node = nodeList.item(idx);
+                if (node.getNodeType() == Node.ELEMENT_NODE) {
+                    org.w3c.dom.Element element = (org.w3c.dom.Element) node;
+                    data.put(element.getNodeName(), element.getTextContent());
+                }
+            }
+            try {
+                stream.close();
+            } catch (Exception ex) {
+                // do nothing
+            }
+            return data;
+        } catch (Exception ex) {
+            WXPayUtil.getLogger().warn("Invalid XML, can not convert to map. Error message: {}. XML content: {}", ex.getMessage(), strXML);
+            throw ex;
+        }
+
+    }
+
+    /**
+     * 将Map转换为XML格式的字符串
+     *
+     * @param data Map类型数据
+     * @return XML格式的字符串
+     * @throws Exception
+     */
+    public static String mapToXml(Map<String, String> data) throws Exception {
+        org.w3c.dom.Document document = WXPayXmlUtil.newDocument();
+        org.w3c.dom.Element root = document.createElement("xml");
+        document.appendChild(root);
+        for (String key: data.keySet()) {
+            String value = data.get(key);
+            if (value == null) {
+                value = "";
+            }
+            value = value.trim();
+            org.w3c.dom.Element filed = document.createElement(key);
+            filed.appendChild(document.createTextNode(value));
+            root.appendChild(filed);
+        }
+        TransformerFactory tf = TransformerFactory.newInstance();
+        Transformer transformer = tf.newTransformer();
+        DOMSource source = new DOMSource(document);
+        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
+        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
+        StringWriter writer = new StringWriter();
+        StreamResult result = new StreamResult(writer);
+        transformer.transform(source, result);
+        String output = writer.getBuffer().toString(); //.replaceAll("\n|\r", "");
+        try {
+            writer.close();
+        }
+        catch (Exception ex) {
+        }
+        return output;
+    }
+
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key) throws Exception {
+        return generateSignedXml(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名类型
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key, SignType signType) throws Exception {
+        String sign = generateSignature(data, key, signType);
+        data.put(WXPayConstants.FIELD_SIGN, sign);
+        return mapToXml(data);
+    }
+
+
+    /**
+     * 判断签名是否正确
+     *
+     * @param xmlStr XML格式数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(String xmlStr, String key) throws Exception {
+        Map<String, String> data = xmlToMap(xmlStr);
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key).equals(sign);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。使用MD5签名。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key) throws Exception {
+        return isSignatureValid(data, key, SignType.MD5);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key, SignType signType) throws Exception {
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key, signType).equals(sign);
+    }
+
+    /**
+     * 生成签名
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key) throws Exception {
+        return generateSignature(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成签名. 注意，若含有sign_type字段，必须和signType参数保持一致。
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key, SignType signType) throws Exception {
+        Set<String> keySet = data.keySet();
+        String[] keyArray = keySet.toArray(new String[keySet.size()]);
+        Arrays.sort(keyArray);
+        StringBuilder sb = new StringBuilder();
+        for (String k : keyArray) {
+            if (k.equals(WXPayConstants.FIELD_SIGN)) {
+                continue;
+            }
+            if (data.get(k).trim().length() > 0) // 参数值为空，则不参与签名
+                sb.append(k).append("=").append(data.get(k).trim()).append("&");
+        }
+        sb.append("key=").append(key);
+        if (SignType.MD5.equals(signType)) {
+            return MD5(sb.toString()).toUpperCase();
+        }
+        else if (SignType.HMACSHA256.equals(signType)) {
+            return HMACSHA256(sb.toString(), key);
+        }
+        else {
+            throw new Exception(String.format("Invalid sign_type: %s", signType));
+        }
+    }
+
+
+    /**
+     * 获取随机字符串 Nonce Str
+     *
+     * @return String 随机字符串
+     */
+    public static String generateNonceStr() {
+        char[] nonceChars = new char[32];
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        return new String(nonceChars);
+    }
+
+
+    /**
+     * 生成 MD5
+     *
+     * @param data 待处理数据
+     * @return MD5结果
+     */
+    public static String MD5(String data) throws Exception {
+        MessageDigest md = MessageDigest.getInstance("MD5");
+        byte[] array = md.digest(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 生成 HMACSHA256
+     * @param data 待处理数据
+     * @param key 密钥
+     * @return 加密结果
+     * @throws Exception
+     */
+    public static String HMACSHA256(String data, String key) throws Exception {
+        Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
+        SecretKeySpec secret_key = new SecretKeySpec(key.getBytes("UTF-8"), "HmacSHA256");
+        sha256_HMAC.init(secret_key);
+        byte[] array = sha256_HMAC.doFinal(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 日志
+     * @return
+     */
+    public static Logger getLogger() {
+        Logger logger = LoggerFactory.getLogger("wxpay java sdk");
+        return logger;
+    }
+
+    /**
+     * 获取当前时间戳，单位秒
+     * @return
+     */
+    public static long getCurrentTimestamp() {
+        return System.currentTimeMillis()/1000;
+    }
+
+    /**
+     * 获取当前时间戳，单位毫秒
+     * @return
+     */
+    public static String getCurrentTimestampMs() {
+        return String.valueOf(System.currentTimeMillis());
+    }
+
+    public static String generateOrderId() {
+        char[] nonceChars = new char[6];  //6个随机字符
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");//设置日期格式
+        String orderId1=df.format(new Date());
+
+        String orderI2=new String(nonceChars);
+        String orderId =orderId1+orderI2;
+        return orderId;
+    }
+
+    public static String sendPost(String url, String param) {
+        PrintWriter out = null;
+        BufferedReader in = null;
+        String result = "";
+        try {
+            URL realUrl = new URL(url);
+            // 打开和URL之间的连接
+            URLConnection conn = realUrl.openConnection();
+            // 设置通用的请求属性
+            conn.setRequestProperty("accept", "*/*");
+            conn.setRequestProperty("connection", "Keep-Alive");
+            conn.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            // 发送POST请求必须设置如下两行
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            // 获取URLConnection对象对应的输出流
+            out = new PrintWriter(conn.getOutputStream());
+            // 发送请求参数
+            out.print(param);
+            // flush输出流的缓冲
+            out.flush();
+            // 定义BufferedReader输入流来读取URL的响应
+            in = new BufferedReader(
+                    new InputStreamReader(conn.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            System.out.println("发送 POST 请求出现异常！"+e);
+            e.printStackTrace();
+        }
+        //使用finally块来关闭输出流、输入流
+        finally{
+            try{
+                if(out!=null){
+                    out.close();
+                }
+                if(in!=null){
+                    in.close();
+                }
+            }
+            catch(IOException ex){
+                ex.printStackTrace();
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 返回客户端ip
+     *
+     * @param request
+     * @return
+     */
+    public static String getRemoteAddrIp(HttpServletRequest request) {
+        String ip = request.getHeader("X-Forwarded-For");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            // 多次反向代理后会有多个ip值，第一个ip才是真实ip
+            int index = ip.indexOf(",");
+            if (index != -1) {
+                return ip.substring(0, index);
+            } else {
+
+                return ip;
+            }
+        }
+        ip = request.getHeader("X-Real-IP");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            return ip;
+        }
+        return request.getRemoteAddr();
+    }
+
+
+    /**
+     * 构造签名
+     *
+     * @param params
+     * @param encode
+     * @return
+     * @throws UnsupportedEncodingException
+     */
+    public static String createSign(Map<String, String> params, boolean encode) throws UnsupportedEncodingException {
+        Set<String> keysSet = params.keySet();
+        Object[] keys = keysSet.toArray();
+        Arrays.sort(keys);
+        StringBuffer temp = new StringBuffer();
+        boolean first = true;
+        for (Object key : keys) {
+            if (key == null || StringUtil.isEmpty(params.get(key))) // 参数为空不参与签名
+                continue;
+            if (first) {
+                first = false;
+            } else {
+                temp.append("&");
+            }
+            temp.append(key).append("=");
+            Object value = params.get(key);
+            String valueStr = "";
+            if (null != value) {
+                valueStr = value.toString();
+            }
+            if (encode) {
+                temp.append(URLEncoder.encode(valueStr, "UTF-8"));
+            } else {
+                temp.append(valueStr);
+            }
+        }
+        return temp.toString();
+    }
+
+    /**
+     * 获取服务器的ip地址
+     *
+     * @param request
+     * @return
+     */
+    public static String getLocalIp(HttpServletRequest request) {
+        return request.getLocalAddr();
+    }
+
+    public static final String inputStream2String(InputStream in) throws UnsupportedEncodingException, IOException {
+        if(in == null)
+            return "";
+
+        StringBuffer out = new StringBuffer();
+        byte[] b = new byte[4096];
+        for (int n; (n = in.read(b)) != -1;) {
+            out.append(new String(b, 0, n, "UTF-8"));
+        }
+        return out.toString();
+    }
+
+    //获取token
+    public static String getAccessToken(String AppId, String secret) {
+
+        String access_token = "";
+        String grant_type = "client_credential";//获取access_token填写client_credential
+
+        //这个url链接地址和参数皆不能变
+        String url = "https://api.weixin.qq.com/cgi-bin/token?grant_type="+grant_type+"&appid="+AppId+"&secret="+secret;  //访问链接
+
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            /*System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒 */
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            access_token = demoJson.getString("access_token");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return access_token;
+    }
+
+    //获取ticket
+    public static String getTicket(String access_token) {
+        String ticket = null;
+        String url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token="+ access_token +"&type=jsapi";//这个url链接和参数不能变
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            ticket = demoJson.getString("ticket");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return ticket;
+    }
+
+    public static String getfree(String free) {
+        int index = free.indexOf(".");
+        int length = free.length();
+        Long amLong = 0L;
+        if(index == -1){
+            amLong = Long.valueOf(free+"00");
+        }else if(length - index >= 3){
+            amLong = Long.valueOf((free.substring(0, index+3)).replace(".", ""));
+        }else if(length - index == 2){
+            amLong = Long.valueOf((free.substring(0, index+2)).replace(".", "")+0);
+        }else{
+            amLong = Long.valueOf((free.substring(0, index+1)).replace(".", "")+"00");
+        }
+        return amLong.toString();
+    }
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/Utils/sha1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/sha1.java	(date 1574242899336)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/sha1.java	(date 1574242899336)
@@ -0,0 +1,31 @@
+package cn.armylife.payservice.Utils;++import java.security.MessageDigest;++public class sha1 {+++    public static String getSha1(String str){+        if(str == null || str.length()==0){+            return null;+        }+        char hexDigits[]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};++        try {+            MessageDigest mdTemp = MessageDigest.getInstance("SHA1");+            mdTemp.update(str.getBytes("UTF-8"));++            byte[] md = mdTemp.digest();+            int j = md.length;+            char buf[] = new char[j*2];+            int k = 0;+            for(int i=0;i<j;i++){+                byte byte0 = md[i];+                buf[k++] = hexDigits[byte0 >>> 4 & 0xf];+                buf[k++] = hexDigits[byte0 & 0xf];+            }+            return new String(buf);+        } catch (Exception e) {+            return null;+        }+    }}
\ No newline at end of file
Index: payservice/src/main/java/cn/armylife/payservice/Utils/HttpGet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/HttpGet.java	(date 1574242899463)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/HttpGet.java	(date 1574242899463)
@@ -0,0 +1,51 @@
+package cn.armylife.payservice.Utils;++import org.springframework.stereotype.Service;++import javax.servlet.http.HttpServlet;+import java.io.BufferedReader;+import java.io.IOException;+import java.io.InputStreamReader;+import java.net.URL;+import java.net.URLConnection;++@Service+public class HttpGet extends HttpServlet {+    //HttpGet方法+    public static String HttpGet(String URL, String GetDataStr){++        String getUrl = URL+GetDataStr;+        StringBuffer sb = new StringBuffer();+        InputStreamReader isr = null;+        BufferedReader br = null;+        try+        {+            java.net.URL url = new URL(getUrl);+            URLConnection urlConnection = url.openConnection();+            urlConnection.setAllowUserInteraction(false);+            isr = new InputStreamReader(url.openStream());+            br = new BufferedReader(isr);+            String line;+            while ((line = br.readLine()) != null)+            {+                sb.append(line);+            }+        }+        catch (IOException e)+        {+            e.printStackTrace();+        }+        finally+        {+            try {+                br.close();+                isr.close();+            } catch (IOException e) {+                e.printStackTrace();+            }+        }+        return sb.toString();+    }+++}Index: payservice/src/main/java/cn/armylife/payservice/Utils/MemberWXMyConfigUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/MemberWXMyConfigUtil.java	(date 1574242899320)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/MemberWXMyConfigUtil.java	(date 1574242899320)
@@ -0,0 +1,64 @@
+package cn.armylife.payservice.Utils;++import cn.armylife.payservice.Domain.WeChatUsers;+import com.github.wxpay.sdk.WXPayConfig;+import org.apache.commons.io.IOUtils;+import org.springframework.stereotype.Component;++import java.io.ByteArrayInputStream;+import java.io.InputStream;++@Component+public class MemberWXMyConfigUtil implements WXPayConfig {+        private byte[] certData;+        WeChatUsers weChatUsers;++//        public MemberWXMyConfigUtil() throws Exception {+//            Resource resource = new ClassPathResource("/apiclient_cert.p12");//"apiclient_cert.p12";//从微信商户平台下载的安全证书存放的目录+//          // String certPath="E:\\javaPicture\\yezz\\apiclient_cert.p12";+//            File file = resource.getFile();+//            InputStream certStream = new FileInputStream(file);+//            this.certData = new byte[(int) file.length()];+//            certStream.read(this.certData);+//            certStream.close();+//        }++        @Override+        public String getAppID() {+            return weChatUsers.getAppId();+        }++        //parnerid+        @Override+        public String getMchID() {+            return weChatUsers.getMCHID();+        }++        @Override+        public String getKey() {+            return weChatUsers.getKEY();+        }++        @Override+        public InputStream getCertStream() {+            try {+                InputStream certStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("apiclient_cert.p12");+                this.certData = IOUtils.toByteArray(certStream);+                certStream.close();+            } catch (Exception e) {+                e.printStackTrace();+            }+            ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);+            return certBis;+        }++        @Override+        public int getHttpConnectTimeoutMs() {+            return 8000;+        }++        @Override+        public int getHttpReadTimeoutMs() {+            return 10000;+        }+    }Index: payservice/src/main/java/cn/armylife/payservice/Utils/WeChatWithdrawUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Utils/WeChatWithdrawUtils.java	(date 1574840943735)
+++ payservice/src/main/java/cn/armylife/payservice/Utils/WeChatWithdrawUtils.java	(date 1574840943735)
@@ -0,0 +1,210 @@
+package cn.armylife.payservice.Utils;++import cn.armylife.payservice.Domain.WeChatUsers;+import org.apache.commons.io.IOUtils;+import org.apache.http.HttpEntity;+import org.apache.http.HttpResponse;+import org.apache.http.client.HttpClient;+import org.apache.http.client.config.RequestConfig;+import org.apache.http.client.methods.HttpPost;+import org.apache.http.config.RegistryBuilder;+import org.apache.http.conn.socket.ConnectionSocketFactory;+import org.apache.http.conn.socket.PlainConnectionSocketFactory;+import org.apache.http.conn.ssl.SSLConnectionSocketFactory;+import org.apache.http.entity.StringEntity;+import org.apache.http.impl.client.HttpClientBuilder;+import org.apache.http.impl.conn.BasicHttpClientConnectionManager;+import org.apache.http.util.EntityUtils;+import org.slf4j.Logger;+import org.slf4j.LoggerFactory;+import org.springframework.beans.factory.annotation.Autowired;+import org.springframework.stereotype.Service;++import javax.net.ssl.KeyManagerFactory;+import javax.net.ssl.SSLContext;+import java.io.ByteArrayInputStream;+import java.io.InputStream;+import java.security.KeyStore;+import java.security.SecureRandom;+import java.util.HashMap;+import java.util.Map;++@Service+public class WeChatWithdrawUtils {+    private static final Logger log = LoggerFactory.getLogger(WeChatWithdrawUtils.class.getName());+    private byte[] certData;++    /**+     * 加载证书+     */+//    public  InputStream getCertStream() {+//        ByteArrayInputStream certBis;+//        certBis = new ByteArrayInputStream(this.certData);+//        return certBis;+//    }+++    public InputStream getCertStream() {+        try {+            InputStream certStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("apiclient_cert.p12");+            this.certData = IOUtils.toByteArray(certStream);+            certStream.close();+        } catch (Exception e) {+            e.printStackTrace();+        }+        ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);+        return certBis;+    }+    /**+     *读取证书+     */+//    public WeChatWithdrawUtils() throws Exception{+////        WeChatUsers weChatUsers=new WeChatUsers();+////        String certPath = weChatUsers.SSLCERT_PATH;+////        Resource resource = new ClassPathResource("/apiclient_cert.p12");//"apiclient_cert.p12";//从微信商户平台下载的安全证书存放的目录+//        ClassPathResource cp = new ClassPathResource("apiclient_cert.p12");+//        // String certPath="E:\\javaPicture\\yezz\\apiclient_cert.p12";+//        File file = cp.getFile();+////        File file = new File(certPath);+//        InputStream certStream = new FileInputStream(file);+//        this.certData = new byte[(int) file.length()];+//        certStream.read(this.certData);+//        certStream.close();+//    }++++    @Autowired+    WeChatUsers weChatUsers;+    /**+     *+     * 提现+     * 请求，只请求一次，不做重试+     * @param connectTimeoutMs+     * @param readTimeoutMs+     * @return+     * @throws Exception+     */+    public String withdrawRequestOnce(Map<String, String> params, int connectTimeoutMs, int readTimeoutMs, boolean useCert) throws Exception {++        /**1.拼凑企业支付需要的参数**/+        Map<String, String> paraMap = new HashMap<>();+        paraMap.putAll(params);+        //微信公众号的appid+        paraMap.put("mch_appid", weChatUsers.getAppId());+        //商户号+        paraMap.put("mchid",weChatUsers.getMCHID());+        //随机字符串+        //paraMap.put("nonce_str", OtherUtils.getNonceStr());+        paraMap.get("nonce_str");+        //订单号+        //paraMap.put("partner_trade_no","qianchen"+System.currentTimeMillis());+        paraMap.get("partner_trade_no");+        //openid+        //paraMap.put("openid",params.getOrDefault("openId","oelSW0uBU233H5YM3dweIZ08kauk"));//"o5mZ40yBjIqco2NzKc19k9oIBI9o");+        paraMap.get("openid");+        // 校验用户姓名选项 NO_CHECK：不校验真实姓名  FORCE_CHECK：强校验真实姓名+        paraMap.put("check_name","NO_CHECK");+        //paraMap.put("amount",params.getOrDefault("money","0"));//"100");+        paraMap.get("amount");+        //企业付款操作说明信息。必填。+        //paraMap.put("desc",params.getOrDefault("clientId","")+"用户提现");+        paraMap.get("desc");+        //ip地址，地址可以不是真实地址+        paraMap.put("spbill_create_ip",params.getOrDefault("spbillCreateIp","127.0.01"));++        /**2.Unicode码从小到大排序**/+        String url = OtherUtils.formatUrlMap(paraMap, false, false);+        url = url + "&key=" + weChatUsers.getKEY();++        /**3.用MD5加密生成签名**/+        String sign = WXPayUtil.MD5(url).toUpperCase();+++        /**4.将map拼接成xml格式**/+        StringBuffer xml = new StringBuffer();+        xml.append("<xml>");+        for (Map.Entry<String, String> entry : paraMap.entrySet()) {+            xml.append("<" + entry.getKey() + ">");+            xml.append(entry.getValue());+            xml.append("</" + entry.getKey() + ">" + "\n");+        }+        xml.append("<sign>");+        xml.append(sign);+        xml.append("</sign>");+        xml.append("</xml>");++        log.info("xml {} ", xml.toString());++        BasicHttpClientConnectionManager connManager;+        /**5.操作证书**/+        if (useCert) {+            // 证书+            System.out.println(weChatUsers.getAppId());+            System.out.println(weChatUsers.getCallBackSlientUrl());+            System.out.println(weChatUsers.getMCHID());+            System.out.println(weChatUsers.getKEY());+            char[] password = weChatUsers.getMCHID().toCharArray();+            System.out.println(password);+            InputStream certStream =  new WeChatWithdrawUtils().getCertStream();+            KeyStore ks = KeyStore.getInstance("PKCS12");+            ks.load(certStream, password);++            // 实例化密钥库 & 初始化密钥工厂+            KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());+            kmf.init(ks, password);++            // 创建 SSLContext+            SSLContext sslContext = SSLContext.getInstance("TLS");+            sslContext.init(kmf.getKeyManagers(), null, new SecureRandom());++            SSLConnectionSocketFactory sslConnectionSocketFactory = new SSLConnectionSocketFactory(+                    sslContext,+                    new String[]{"TLSv1"},+                    null,+                    new org.apache.http.conn.ssl.DefaultHostnameVerifier());++            connManager = new BasicHttpClientConnectionManager(+                    RegistryBuilder.<ConnectionSocketFactory>create()+                            .register("http", PlainConnectionSocketFactory.getSocketFactory())+                            .register("https", sslConnectionSocketFactory)+                            .build(),+                    null,+                    null,+                    null+            );+        }+        else {+            connManager = new BasicHttpClientConnectionManager(+                    RegistryBuilder.<ConnectionSocketFactory>create()+                            .register("http", PlainConnectionSocketFactory.getSocketFactory())+                            .register("https", SSLConnectionSocketFactory.getSocketFactory())+                            .build(),+                    null,+                    null,+                    null+            );+        }++        HttpClient httpClient = HttpClientBuilder.create()+                .setConnectionManager(connManager)+                .build();++        /**发送信息到微信服务器**/+        HttpPost httpPost = new HttpPost("https://api.mch.weixin.qq.com/mmpaymkttransfers/promotion/transfers");++        /**设置超时时间**/+        RequestConfig requestConfig = RequestConfig.custom().setSocketTimeout(readTimeoutMs).setConnectTimeout(connectTimeoutMs).build();+        httpPost.setConfig(requestConfig);++        StringEntity postEntity = new StringEntity(xml.toString(), "UTF-8");+        httpPost.addHeader("Content-Type", "text/xml");+        httpPost.addHeader("User-Agent", "wxpay sdk java v1.0 " + weChatUsers.getMCHID());  // TODO: 很重要，用来检测 sdk 的使用情况，要不要加上商户信息？+        httpPost.setEntity(postEntity);++        /**发送后返回支付结果，xml格式**/+        HttpResponse httpResponse = httpClient.execute(httpPost);+        HttpEntity httpEntity = httpResponse.getEntity();+        return EntityUtils.toString(httpEntity, "UTF-8");+    }+}Index: payservice/src/main/java/cn/armylife/payservice/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Config/SessionConfig.java	(date 1574242899451)
+++ payservice/src/main/java/cn/armylife/payservice/Config/SessionConfig.java	(date 1574242899451)
@@ -0,0 +1,9 @@
+package cn.armylife.payservice.Config;++import org.springframework.context.annotation.Configuration;+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;++@Configuration+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)+public class SessionConfig {+}Index: payservice/src/main/java/cn/armylife/payservice/Config/AlipayConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Config/AlipayConfig.java	(date 1575649579273)
+++ payservice/src/main/java/cn/armylife/payservice/Config/AlipayConfig.java	(date 1575649579273)
@@ -0,0 +1,25 @@
+package cn.armylife.payservice.Config;
+
+public class AlipayConfig {
+	// 商户appid
+	public static String APPID = "2016101500690081";
+	// 私钥 pkcs8格式的
+	public static String RSA_PRIVATE_KEY = "MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBjmxX8LKYrn8luEokB1byR/e74mUiQ+VMJA35/VXctbfI0ptEZCZdydqWUaG5xmOvxIzLPH4xiQHVSb5FzJA+fIhpa4eQ7zMJffohT8vqf7Fk4Yf3vtZWyaeDCaTcN6X95R2Zb2eZNPjyUjqhzmZGX5gQECrCckzU6UkfL3XiRYZcR36ONwkF7HKwzCByXAn+s1uFCZLQSsuQjv33ydfWLJGJYItyj8Q292SIeSzPpl+LQxcl/mqA0bszTHa6+nDZGQPws45vBWQDd/Dh2v6A4eP2RmTNraqOTcAZP4CUiKpsOk1MYK/9Rl+okuU5qpaTP29IdZONcRWVAKiQWo8lAgMBAAECggEBAKvDZeYMVZEkmPSyPCkI0mGi9/clizYDJoKRJE4KQJ3iLLvsGZlxfpKQRIhM3MXthh0+wOrCPgJbYOMT0+RBCmhJPwy+PcmiW5o6zzOsinsI4jVx5qU2FyNhRGQGtOQwBf/vyHqW4EqXNaxkyF86uIwO3PS0RB3WLNRsSVWBWo12NEyXH9jOrnG4PdB5pY6c4T9/IPLpUryCOT/512mC9WpKDrd8Yr/ALZPAi9B7fj/8l4noRFgp5zzlWw1QrM9uViN7kIrKqluUB4hH/Jv70lRUeMsVY/+0bSJMvp/Tr0JyMA85cRMQ3I1s87hC9euXUowqLHjoVaeNMyuszds1U+kCgYEA9NgByAyBanAZXS/rTAlk0FlY4OcB9TaDE89hMCf31HFDfD+9e4dLVomH8Bn9Nz+FTkN284u3M31FU1Yu4hB+w+ZL6z/vs8876+67tZiyb5qR72F4wrKX0f5vtiy1m53Is+xQLloxlLJtM/3ZWm3Yfy8wzlAX6Uw7kPYwk+YoghMCgYEAymAr2JOxYSJjgBgk5igtloo10945dFJDpa4Pvgng5WUSPo+aaD62a6KmgXKUuHWgaem20w58Ewnv8IKkYYZ9KlAD2JA/ftz2Jrm8CvRBK/SNk1+y+J0u4TQ0amixy909TC3ONk797CyZ8CPwSD0OUzRtLTu1u9zIV2R0LpUkEOcCgYANmFzo9cDN3zGZWgrPqwndA8kKm+kg64j1taMo4F9DfZKIuKVV0ZpeUL6ql1bXFYDaaqaVOWHPyxnpWbS6ur2/NO9sPZ2at1wVaqkjmTn3Nnb5+siQzwfdEiqzy+G9pVI6o1mEaV+taQblRyglfEn0LfOg0ROy0ZfRIcpqu/Ht3wKBgBb5dADSQ4DTdphEJWw7g3Fjn1i+Eaey7xsP95mLZYylPLz9cHoFJJBzlpN7foayU9OyRJ8RNeSzbBnRuveXXP5Aty8OsSalzwv2afKUaBGlYa0pYBf5QCkw1AKAgC60nxDW4mIn9YuqRI+OhOiuhcHMYdiQvsDk/5lsPgRLyhxhAoGBAPB9zB08YgIWnQ+BwE3cyt0GUr/KFoaBAOlZP1lde779lx7v7fjXFLmGHfh9YkMo0+vfzYQBsK4TdOpyW+ZGvODMaz5G+xe64Dk8K2GQ12RWpIGzeRV7upqNAztPbppnSQxWCddYHYiZsx03RLkJQxShT0z4n9P/BGofidk2ybhZ";
+	// 服务器异步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
+	public static String notify_url = "http://api.xuthus83.cn:6081/PayMents/AlipayCallback";
+	// 页面跳转同步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 商户可以自定义同步跳转地址
+	public static String return_url = "http://api.xuthus83.cn:6081/hua/index.html";
+	// 请求网关地址
+	public static String URL = "https://openapi.alipaydev.com/gateway.do";
+	// 编码
+	public static String CHARSET = "UTF-8";
+	// 返回格式
+	public static String FORMAT = "json";
+	// 支付宝公钥
+	public static String ALIPAY_PUBLIC_KEY = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgProLYvUy3CvRTvKcoSw8CYyAToXtWwExKDoROX/PlfYODo/2LEDmnHcmGUrOLggI20ribN+fcXwrr/XobVrAZEKuG9L99D19mUdjCiMB+9TwtZ2chEHceeYuwxjsQ8xsXh7D9DU6xy2V/CITiEPR6Ln8RktYMr2am16pee3lzlc8ljBBbr0roEs61785t/VDsq5O1mdpUw2NcJ7uei0cmmpp4IyCVcGKp9EzRITIoMrhXP9iBYrg7PmGOBxYSLBEhw6QOjEUgK0Qwcf9GKIak6+yLKKsVnXLjKRUPWWQpSF8C6QAqLIs7cG1Yq7bFTMF3RJ961IwRPiIsaPYATckwIDAQAB";
+	// 日志记录目录
+	public static String log_path = "/log";
+	// RSA2
+	public static String SIGNTYPE = "RSA2";
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/Config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Config/RedisConfig.java	(date 1574242899346)
+++ payservice/src/main/java/cn/armylife/payservice/Config/RedisConfig.java	(date 1574242899346)
@@ -0,0 +1,40 @@
+package cn.armylife.payservice.Config;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+@Configuration
+public class RedisConfig {
+    /**
+     * redisTemplate 序列化使用的jdkSerializeable, 存储二进制字节码, 所以自定义序列化类
+     * @param redisConnectionFactory
+     * @return
+     */
+    @Bean
+    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+
+        // 使用Jackson2JsonRedisSerialize 替换默认序列化
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+
+        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
+
+        // 设置value的序列化规则和 key的序列化规则
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+}
Index: payservice/src/main/java/cn/armylife/payservice/Config/FeignRequestIntercepter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Config/FeignRequestIntercepter.java	(date 1574242899441)
+++ payservice/src/main/java/cn/armylife/payservice/Config/FeignRequestIntercepter.java	(date 1574242899441)
@@ -0,0 +1,33 @@
+package cn.armylife.payservice.Config;++import feign.RequestInterceptor;+import feign.RequestTemplate;+import org.springframework.stereotype.Component;+import org.springframework.web.context.request.RequestAttributes;+import org.springframework.web.context.request.RequestContextHolder;+import org.springframework.web.context.request.ServletRequestAttributes;++import javax.servlet.http.HttpServletRequest;+import java.util.Enumeration;+++@Component+public class FeignRequestIntercepter implements RequestInterceptor {+    @Override+    public void apply(RequestTemplate requestTemplate) {+//通过RequestContextHolder获取本地请求+        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();+        if (requestAttributes == null){+            return;+        }+//获取本地线程绑定的请求对象+        HttpServletRequest request = ((ServletRequestAttributes)requestAttributes).getRequest();+//给请求模板附加本地线程头部信息，主要是cookie信息+        Enumeration headerNames = request.getHeaderNames();+        while (headerNames.hasMoreElements()){+            String name = (String) headerNames.nextElement();+            requestTemplate.header(name,request.getHeader(name));+        }++    }+}Index: src/test/java/cn/armylife/zuul/ZuulApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/cn/armylife/zuul/ZuulApplicationTests.java	(date 1572342332896)
+++ src/test/java/cn/armylife/zuul/ZuulApplicationTests.java	(date 1572342332896)
@@ -0,0 +1,13 @@
+package cn.armylife.zuul;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class ZuulApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: .mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- .mvn/wrapper/maven-wrapper.properties	(date 1572342323450)
+++ .mvn/wrapper/maven-wrapper.properties	(date 1572342323450)
@@ -0,0 +1,1 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip
Index: .mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .mvn/wrapper/MavenWrapperDownloader.java	(date 1572342332863)
+++ .mvn/wrapper/MavenWrapperDownloader.java	(date 1572342332863)
@@ -0,0 +1,114 @@
+/*
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements.  See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership.  The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+"License"); you may not use this file except in compliance
+with the License.  You may obtain a copy of the License at
+
+  https://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied.  See the License for the
+specific language governing permissions and limitations
+under the License.
+*/
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.net.URL;
+import java.nio.channels.Channels;
+import java.nio.channels.ReadableByteChannel;
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL =
+            "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: : " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output direcrory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/Domain/WeChatUsers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Domain/WeChatUsers.java	(date 1576045488800)
+++ payservice/src/main/java/cn/armylife/payservice/Domain/WeChatUsers.java	(date 1576045488800)
@@ -0,0 +1,101 @@
+package cn.armylife.payservice.Domain;++import org.springframework.boot.context.properties.ConfigurationProperties;+import org.springframework.context.annotation.PropertySource;+import org.springframework.stereotype.Component;++/**+ *+ * @author jiony+ *+ * @Description: 微信相关常量+ */+@Component+@ConfigurationProperties(prefix = "wechat.users")+@PropertySource(value = "classpath:bootstrap.properties")+public class WeChatUsers {+    /**+     * token+     */+    private String token;+    /**+     * app id+     */+    private String appId;+    /**+     * app secret+     */+    private String appSecret;+    /**+     * 静默授权回调地址+     */+    private String callBackSlientUrl;+    /**+     * 商户id+     */+    private String MCHID;+    /**+     * 异步回调地址+     */+    private String NOTIFYURL;+    /**+     * 微信统一下单地址+     */+    private String wxorder;++    //证书路径+//    public static final String SSLCERT_PATH = "apiclient_cert.p12";+   // public static final String SSLCERT_PATH = "E:\\javaPicture\\yezz\\apiclient_cert.p12";++    /**+     * key+     */+    private String KEY;+    public String getToken() {+        return token;+    }+    public void setToken(String token) {+        this.token = token;+    }+    public String getAppId() {+        return appId;+    }+    public void setAppId(String appId) {+        this.appId = appId;+    }+    public String getAppSecret() {+        return appSecret;+    }+    public void setAppSecret(String appSecret) {+        this.appSecret = appSecret;+    }+    public String getCallBackSlientUrl() {+        return callBackSlientUrl;+    }+    public void setCallBackSlientUrl(String callBackSlientUrl) {+        this.callBackSlientUrl = callBackSlientUrl;+    }+    public String getMCHID() {+        return MCHID;+    }+    public void setMCHID(String MCHID) {+        this.MCHID = MCHID;+    }+    public String getNOTIFYURL() {+        return NOTIFYURL;+    }+    public void setNOTIFYURL(String NOTIFYURL) {+        this.NOTIFYURL = NOTIFYURL;+    }+    public String getWxorder() {+        return wxorder;+    }+    public void setWxorder(String wxorder) {+        this.wxorder = wxorder;+    }+    public String getKEY() {+        return KEY;+    }+    public void setKEY(String KEY) {+        this.KEY = KEY;+    }}
\ No newline at end of file
Index: payservice/src/main/java/cn/armylife/payservice/Domain/WXtemplate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Domain/WXtemplate.java	(date 1574242899480)
+++ payservice/src/main/java/cn/armylife/payservice/Domain/WXtemplate.java	(date 1574242899480)
@@ -0,0 +1,85 @@
+package cn.armylife.payservice.Domain;++public class WXtemplate {+    private String openid;+    private String first;+    private String key1;+    private String key2;+    private String key3;+    private String key4;+    private String remark1;+    private String template;+    private String url;++    public String getKey4() {+        return key4;+    }++    public void setKey4(String key4) {+        this.key4 = key4;+    }++    public String getOpenid() {+        return openid;+    }++    public void setOpenid(String openid) {+        this.openid = openid;+    }++    public String getFirst() {+        return first;+    }++    public void setFirst(String first) {+        this.first = first;+    }++    public String getKey1() {+        return key1;+    }++    public void setKey1(String key1) {+        this.key1 = key1;+    }++    public String getKey2() {+        return key2;+    }++    public void setKey2(String key2) {+        this.key2 = key2;+    }++    public String getKey3() {+        return key3;+    }++    public void setKey3(String key3) {+        this.key3 = key3;+    }++    public String getRemark1() {+        return remark1;+    }++    public void setRemark1(String remark1) {+        this.remark1 = remark1;+    }++    public String getTemplate() {+        return template;+    }++    public void setTemplate(String template) {+        this.template = template;+    }++    public String getUrl() {+        return url;+    }++    public void setUrl(String url) {+        this.url = url;+    }+}Index: payservice/src/main/java/cn/armylife/payservice/Domain/Alipay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Domain/Alipay.java	(date 1574761315721)
+++ payservice/src/main/java/cn/armylife/payservice/Domain/Alipay.java	(date 1574761315721)
@@ -0,0 +1,14 @@
+package cn.armylife.payservice.Domain;
+
+public class Alipay {
+
+    private String num;
+
+    public String getNum() {
+        return num;
+    }
+
+    public void setNum(String num) {
+        this.num = num;
+    }
+}
Index: payservice/src/main/java/cn/armylife/payservice/Hystrix/TranctionsServiceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Hystrix/TranctionsServiceHystrix.java	(date 1574839665400)
+++ payservice/src/main/java/cn/armylife/payservice/Hystrix/TranctionsServiceHystrix.java	(date 1574839665400)
@@ -0,0 +1,19 @@
+package cn.armylife.payservice.Hystrix;
+
+import cn.armylife.common.Domain.Transactions;
+import cn.armylife.payservice.FeignService.TranctionsService;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Component;
+
+@Component
+public class TranctionsServiceHystrix implements TranctionsService {
+
+
+
+    @Value("${server.port}")
+    int port;
+
+    public int Addtranctions(Transactions transactions){
+        return port;
+    };
+}
Index: payservice/src/main/java/cn/armylife/payservice/Controller/WechatPayController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Controller/WechatPayController.java	(date 1576051750180)
+++ payservice/src/main/java/cn/armylife/payservice/Controller/WechatPayController.java	(date 1576051750180)
@@ -0,0 +1,416 @@
+package cn.armylife.payservice.Controller;++import cn.armylife.common.Domain.Member;+import cn.armylife.common.Domain.Payments;+import cn.armylife.common.Domain.Transactions;+import cn.armylife.common.Util.NumberID;+import cn.armylife.payservice.Domain.WeChatUsers;+import cn.armylife.payservice.FeignService.TranctionsService;+import cn.armylife.payservice.Service.WechatService;+import cn.armylife.payservice.Utils.*;+import com.alibaba.fastjson.JSONObject;+import com.github.wxpay.sdk.WXPay;+import com.google.common.collect.Maps;+import org.springframework.beans.factory.annotation.Autowired;+import org.springframework.beans.factory.annotation.Value;+import org.springframework.boot.context.properties.EnableConfigurationProperties;+import org.springframework.web.bind.annotation.RequestMapping;+import org.springframework.web.bind.annotation.RequestMethod;+import org.springframework.web.bind.annotation.ResponseBody;+import org.springframework.web.bind.annotation.RestController;++import javax.servlet.http.HttpServletRequest;+import javax.servlet.http.HttpServletResponse;+import javax.servlet.http.HttpSession;+import java.io.InputStream;+import java.math.BigDecimal;+import java.text.SimpleDateFormat;+import java.util.Date;+import java.util.HashMap;+import java.util.Map;+import java.util.logging.Logger;++@RequestMapping("MemberWxpay")+@EnableConfigurationProperties(WeChatUsers.class)+@RestController+public class WechatPayController {++    @Autowired+    WechatService memberWechatPayService;++    @Autowired+    WeChatUsers weChatUsers;+    @Autowired+    MemberWXMyConfigUtil wxMyConfigUtil;++    @Autowired+    TranctionsService tranctionsService;++    Logger logger=Logger.getLogger("MemberWechatPayController.class");++    @Value("${server.port}")+    int port;+++    //生成用户订单，存入数据库，然后生成一堆信息，向微信支付系统请求prepay_id+// 得到prepay_id后，将一堆信息打包发送到前端，由前端调起支付界面+    @RequestMapping(path = {"/pay"}, method = {RequestMethod.POST, RequestMethod.GET})+    @ResponseBody+    public Map<String, String> order(String orderDesc, String Total,String orderCardID,String attach, HttpServletRequest request){+        logger.info(weChatUsers.toString());+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("users");+        String openId=member.getMemberWechat();+        String appId= weChatUsers.getAppId();+        String paternerKey= weChatUsers.getKEY();+        String mchID= weChatUsers.getMCHID();+        Map<String, String> result = new HashMap<>();+        // 将充值金额的单位由元转换为分+        int index = Total.indexOf(".");+        int length = Total.length();+        Long amLong = 0L;+        if(index == -1){+            amLong = Long.valueOf(Total+"00");+        }else if(length - index >= 3){+            amLong = Long.valueOf((Total.substring(0, index+3)).replace(".", ""));+        }else if(length - index == 2){+            amLong = Long.valueOf((Total.substring(0, index+2)).replace(".", "")+0);+        }else{+            amLong = Long.valueOf((Total.substring(0, index+1)).replace(".", "")+"00");+        }+        String orderTotal= amLong.toString();+        try {+            // ---------------生成用户订单-----------------+            String orderId=orderCardID;+            System.out.println(orderId);//"orderCardID");//生成订单编号+            // 最好设置一个订单状态标志位，在第三步“接收交易状态”时再修改标志位+            // 将用户订单存入数据库等等操作+            // --------------------------------------------++            // ---------------获取用户的IP------------------+            String ip = request.getHeader("x-forwarded-for");+            if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)){+                ip = request.getHeader("Proxy-Client-IP");+            }+            if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)){+                ip = request.getHeader("WL-Proxy-Client-IP");+            }+            if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)){+                ip = request.getRemoteAddr();+            }+            if(ip.indexOf(",")!=-1){+                String[] ips = ip.split(",");+                ip = ips[0].trim();+            }+            // -------------------------------------------+++            // ----- 统一下单参数------+            // 注意，参数的顺序不能错！！！！否则无法成功下单+            Map<String, String> paraMap = new HashMap<String, String>();+            paraMap.put("appid", appId);+            paraMap.put("body", orderDesc);+            paraMap.put("mch_id", mchID);+            paraMap.put("nonce_str", WXPayUtil.generateNonceStr());+            paraMap.put("openid", openId);+            paraMap.put("out_trade_no",orderId );//订单号+            paraMap.put("spbill_create_ip", ip);+            paraMap.put("total_fee",orderTotal);+            paraMap.put("trade_type", "JSAPI");+            paraMap.put("attach", attach);+            paraMap.put("notify_url",weChatUsers.getCallBackSlientUrl());// 此路径是微信服务器调用支付结果通知路径+            String sign = WXPayUtil.generateSignature(paraMap,paternerKey);+            paraMap.put("sign", sign);+            String xml = WXPayUtil.mapToXml(paraMap);//将所有参数(map)转xml格式++            // 统一下单接口+            String unifiedorder_url = "https://api.mch.weixin.qq.com/pay/unifiedorder";++            //发送post请求"统一下单接口"返回预支付id:prepay_id+            String xmlStr = WXPayUtil.sendPost(unifiedorder_url, xml);+            //System.out.println("xml是"+xmlStr);++            //以下内容是返回前端页面的json数据+            String prepay_id = "";//预支付id+            if (xmlStr.indexOf("SUCCESS") != -1) {+                logger.info("支付系统返回了prepay_id");+                Map<String, String> map = WXPayUtil.xmlToMap(xmlStr);+                logger.info("map"+map);+                prepay_id =map.get("prepay_id");+            }else {+                logger.info("prepay_id获取失败");+            }++            // =============至此已成功获取到prepay_id================+            logger.info("您的prepay_id的值是："+prepay_id);++            // 将“微信内H5调起支付”需要的参数打包成JSON，发给前端+            result.put("appId", appId);+            result.put("timeStamp", WXPayUtil.getCurrentTimestampMs());+            result.put("nonceStr", WXPayUtil.generateNonceStr());+            result.put("signType", "MD5");+            result.put("package", "prepay_id=" + prepay_id);+            String paySign = WXPayUtil.generateSignature(result, paternerKey);+            result.put("paySign", paySign);+            logger.info(JSONObject.toJSONString(result));+++        } catch (Exception e) {+            logger.info("错误:" + e);+        }//            resultInfo.setCode("2");+//            resultInfo.setMessage("异常：" + e.toString());+//            resultInfo.setData("000");}++        if(result!=null){+            logger.info("成功获得prepay_id，且将数据发送到前端:"+result);+        }else{+            logger.info("获取prepayId失败");+        }+        return result;+//            return JSONObject.fromObject(result).toString();+    }++    @RequestMapping("/callback")+    @ResponseBody+    public Map<String, String> payCallBack(HttpServletRequest request, HttpServletResponse response)throws Exception {+       WXPay wxPay=null;+//        Payorder payorder=new Payorder();+        InputStream inputStream = null;+        System.out.println("3");+        Map<String, String> notifyMap = new HashMap<String, String>();+        try {+            wxPay=new WXPay(wxMyConfigUtil);+            inputStream = request.getInputStream();+            String xml = WXPayUtil.inputStream2String(inputStream);+//            String xml="123";+            notifyMap = WXPayUtil.xmlToMap(xml);//将微信发的xml转map+            //System.out.println("支付系统返回支付结果"+xml);++            if (wxPay.isPayResultNotifySignatureValid(notifyMap)){+                if(notifyMap.get("return_code").equals("SUCCESS")){+                    logger.info("return_code是："+notifyMap.get("return_code"));+                    // 交易成功+                    if(notifyMap.get("result_code").equals("SUCCESS")){+                        String transaction_id=notifyMap.get("transaction_id");+                        String out_trade_no=notifyMap.get("out_trade_no");+                        String time_end=notifyMap.get("time_end");+                        String total_fee=notifyMap.get("total_fee");+                        BigDecimal total=new BigDecimal(total_fee);+                        Payments payments=new Payments();+                        payments.setPayNumber(transaction_id);+                        payments.setPaymentsId(Long.valueOf(out_trade_no));+                        payments.setPayTotal(total);+                        payments.setEndTime(time_end);+                    }+                }else{+                    // 交易失败的处理+                    notifyMap.put("0","0");+                    return notifyMap;+                }+            }else {+                logger.info("签名失败"+notifyMap);++            }++            response.getWriter().write("<xml><return_code><![CDATA[SUCCESS]]></return_code></xml>"); //告知微信支付系统已收到消息+            inputStream.close();+        } catch (Exception e) {+            // 异常的处理+        }+        return notifyMap;+    }++    /**+     * 关闭订单+     * @param orderCardID+     * @return+     * @throws Exception+     */+    @RequestMapping("closeorder")+    @ResponseBody+    public int closeorder(String orderCardID)throws Exception {+        Integer msg;+        try {+        Map<String, String> close=new HashMap<>();+        close.put("appId", weChatUsers.getAppId());+        close.put("mch_id", weChatUsers.getMCHID());+        close.put("nonceStr", WXPayUtil.generateNonceStr());+        close.put("out_trade_no",orderCardID);+        String paySign = WXPayUtil.generateSignature(close, weChatUsers.getKEY());+        close.put("paySign",paySign);+        String xml = WXPayUtil.mapToXml(close);++        String unifiedorder_url = "https://api.mch.weixin.qq.com/pay/closeorder";++        String xmlStr = WXPayUtil.sendPost(unifiedorder_url, xml);+++        //预支付id+        if (xmlStr.indexOf("SUCCESS") != -1) {+            System.out.println("成功关闭");+            msg=1;+        }else {+            System.out.println("关闭失败");+            msg=0;+        }}catch (Exception e ){+            e.printStackTrace();+            msg=null;+        }+        return msg;+    }++++    @RequestMapping("topay")+    public String topay(){+        return "Member/Wechat";+    }+    @RequestMapping("towx")+    public String towxpay(){+        return "Wechatpay";+    }+++    @Autowired+    WeChatWithdrawUtils weChatWithdrawUtils;+    @RequestMapping("WechatExtract")+    @ResponseBody+    public int WechatExtract(HttpServletRequest request,Member member,String orderfee) throws Exception {+//        HttpSession session=request.getSession();+//        Member member=(Member)session.getAttribute("users");+        String openid=member.getMemberWechat();+        BigDecimal total= new BigDecimal(orderfee);+        if (member==null){+            return 0;+        }else {+            BigDecimal reward=member.getMemberTotal();+            BigDecimal remoney= total;+            if (remoney.compareTo(reward)==0){+                return 0;+            }+        }+        Map<String, String> map = Maps.newHashMap();++        //元转换为分,微信支付已分为单位+        BigDecimal sumAmount = new BigDecimal(orderfee);+        //乘以100，转换为分+        BigDecimal transAmt = sumAmount.multiply(new BigDecimal(100));+        System.out.println(transAmt.toString());+        //订单号+        String Order = String.valueOf( NumberID.nextId(port));+        map.put("partner_trade_no",Order);+        //随机字符串+        map.put("nonce_str", OtherUtils.getNonceStr().toString());+        //openid("c从数据库中查询")+        //map.put("openid",openid.get(0).getUserlevel());+        map.put("openid", openid);+        //金额+        map.put("amount", transAmt.toString());++        ////企业付款操作说明信息+        map.put("desc", "提现");++        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");+        Date date=new Date();+        //调用支付+        String returnInfo = weChatWithdrawUtils.withdrawRequestOnce(map, 3000, 3000, true);+        Map<String, String> resultMap = WXPayUtil.xmlToMap(returnInfo);+        if (resultMap.containsKey("result_code") && "SUCCESS".equals(resultMap.getOrDefault("result_code", ""))) {+            logger.info("提现成功");+            logger.info("返回结果：" + returnInfo);+            Transactions transactions=new Transactions();+            transactions.setPayUser(member.getMemberId());+            transactions.setTranactionsId(Long.valueOf(Order));+            String creartime=sdf.format(date);+            transactions.setPayTotal(total);+            transactions.setPayDesc("提现");+            transactions.setCreatTime(creartime);+            transactions.setPayWechatnum(resultMap.getOrDefault("payment_no",""));+            int msg=tranctionsService.Addtranctions(transactions);+            if (msg==0){+                return 0;+            }+            return 1;+        } else {+            logger.info("提现失败");+            logger.info("返回结果：" + returnInfo);+            return 0;+        }+    }++    @RequestMapping(value = "/getSignature", method = RequestMethod.POST)+    @ResponseBody+    public Map WeixinController(HttpServletRequest request, HttpServletResponse response) {++        String access_token=WXPayUtil.getAccessToken(weChatUsers.getAppId(),weChatUsers.getAppSecret());+        System.out.println(access_token);+        String ticket=WXPayUtil.getTicket(access_token);+        System.out.println(ticket);+        String noncestr=WXPayUtil.generateNonceStr();+        Long timestamp=WXPayUtil.getCurrentTimestamp();+        String url=request.getParameter("url");+        System.out.println(url);+        System.out.println(ticket);+        String str = "jsapi_ticket="+ticket+"&noncestr="+noncestr+"&timestamp="+timestamp+"&url="+url;++        System.out.println(str);+//6、将字符串进行sha1加密+        String Signature = sha1.getSha1(str);+        Map msg=new HashMap();+        msg.put("appId",weChatUsers.getAppId());+        msg.put("noncestr",noncestr);+        msg.put("timestamp",timestamp);+        msg.put("Signature",Signature);+        return msg;++    }+    @RequestMapping(value = "/orderrefund", method = RequestMethod.POST)+    @ResponseBody+    public  int orderrefund(Long orderCardId, double refundfree,double totalfree,String desc) throws Exception {+        Integer msg;+        String refundfree1 = WXPayUtil.getfree(Double.toString(refundfree));+        String totalfree1 = WXPayUtil.getfree(Double.toString(totalfree));+        //生成退款订单号+        int card = (int) (1 + Math.random() * (99 - 9 + 1));+        Date now = new Date();+        SimpleDateFormat dateFormat = new SimpleDateFormat("MMddHHmmss");//可以方便地修改日期格式+        String time = dateFormat.format(now);+        String order = String.valueOf(card) + String.valueOf(time);+//        String free=request.getParameter("refundfree");+//        String total=request.getParameter("totalfree");+        String refunddesc =desc;// "您选择的自由职业者拒绝了您的工作(" + projectname + ")";+        System.out.println(refunddesc);+        Map<String, String> refund = new HashMap<>();+        refund.put("appid", weChatUsers.getAppId());+        System.out.println(weChatUsers.getAppId());+        refund.put("mch_id", weChatUsers.getMCHID());+        refund.put("nonce_str", WXPayUtil.generateNonceStr());+        refund.put("out_refund_no", order);+        refund.put("out_trade_no", String.valueOf(orderCardId));+        refund.put("refund_fee", refundfree1);+        refund.put("total_fee", totalfree1);+        refund.put("refund_desc", refunddesc);+        String paySign = WXPayUtil.generateSignature(refund, weChatUsers.getKEY());+        refund.put("sign", paySign);+//        System.out.println(refund);++        String xml = WXPayUtil.mapToXml(refund);+++        String unifiedorder_url = "https://api.mch.weixin.qq.com/secapi/pay/refund";+        String resultXml = ClientCustomSSL.doRefund(unifiedorder_url, xml, weChatUsers.getMCHID());+        Map<String,String> resultMap = WXPayUtil.xmlToMap(resultXml);+        System.out.println(resultXml);+//            String xmlStr = WXPayUtil.sendPost(unifiedorder_url, xml);+        if (resultXml.indexOf("SUCCESS") != -1) {+            String refundid=resultMap.get("refund_id");+            msg = 1;+        } else {+            System.out.println("退款失败");+//            System.out.println(resultXml);+            msg = 0;+        }++        return msg;+    }+}Index: payservice/src/main/java/cn/armylife/payservice/Controller/AlipayController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Controller/AlipayController.java	(date 1575649154349)
+++ payservice/src/main/java/cn/armylife/payservice/Controller/AlipayController.java	(date 1575649154349)
@@ -0,0 +1,302 @@
+package cn.armylife.payservice.Controller;
+
+import cn.armylife.common.Config.AlipayConfig;
+import cn.armylife.common.Util.NumberID;
+import cn.armylife.payservice.Domain.Alipay;
+import com.alipay.api.AlipayApiException;
+import com.alipay.api.AlipayClient;
+import com.alipay.api.DefaultAlipayClient;
+import com.alipay.api.domain.AlipayFundTransUniTransferModel;
+import com.alipay.api.domain.AlipayTradePagePayModel;
+import com.alipay.api.domain.AlipayTradePageRefundModel;
+import com.alipay.api.domain.Participant;
+import com.alipay.api.internal.util.AlipaySignature;
+import com.alipay.api.request.*;
+import com.alipay.api.response.*;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.logging.Logger;
+
+import static cn.armylife.payservice.Config.AlipayConfig.CHARSET;
+
+@Controller
+public class AlipayController {
+
+    @Value("${server.port}")
+    int port;
+    Logger logger=Logger.getLogger("AlipayController.class");
+
+
+    @RequestMapping("/alipayOrder")
+    @ResponseBody
+    public Alipay alipay(HttpServletRequest request, HttpServletResponse httpServletResponse,String WIDout_trade_no, String WIDsubject, String WIDtotal_amount, String WIDbody,String passback_params) throws AlipayApiException, IOException {
+        // 商户订单号，商户网站订单系统中唯一订单号，必填
+        String out_trade_no =WIDout_trade_no;//String.valueOf( NumberID.nextId(port));//  new String(request.getParameter("WIDout_trade_no"));
+        logger.info("订单号"+out_trade_no);
+        // 订单名称，必填
+        String subject = WIDsubject;//new String(request.getParameter("WIDsubject"));
+        // 付款金额，必填
+        String total_amount= WIDtotal_amount;//new String(request.getParameter("WIDtotal_amount"));
+        // 商品描述，可空
+        String body = WIDbody;// new String(request.getParameter("WIDbody"));
+        // 超时时间 可空n
+        String timeout_express="15m";
+        // 销售产品码 必填
+        String product_code="FAST_INSTANT_TRADE_PAY";//"QUICK_WAP_PAY";
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd HH:ss");
+        Calendar nowTime = Calendar.getInstance();
+        nowTime.add(Calendar.MINUTE, 90);
+        String time_expire=sdf.format(nowTime.getTime());
+        logger.info(time_expire);
+        /**********************/
+        // SDK 公共请求类，包含公共请求参数，以及封装了签名与验签，开发者无需关注签名与验签
+        //调用RSA签名方式
+        AlipayClient client = new DefaultAlipayClient(AlipayConfig.URL, AlipayConfig.APPID, AlipayConfig.RSA_PRIVATE_KEY, AlipayConfig.FORMAT, CHARSET, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.SIGNTYPE);
+//        AlipayTradeWapPayRequest alipay_request=new AlipayTradeWapPayRequest();
+        AlipayTradePagePayRequest alipay_request = new AlipayTradePagePayRequest();
+        // 封装请求支付信息
+        AlipayTradePagePayModel model=new AlipayTradePagePayModel();
+        model.setOutTradeNo(out_trade_no);
+        model.setSubject(subject);
+        model.setTotalAmount(total_amount);
+        model.setBody(body);
+        model.setTimeoutExpress(timeout_express);
+        model.setProductCode(product_code);
+        model.setPassbackParams(passback_params);
+//        model.setTimeExpire(time_expire);
+        alipay_request.setBizModel(model);
+        // 设置异步通知地址
+        alipay_request.setNotifyUrl(AlipayConfig.notify_url);
+        // 设置同步地址
+        alipay_request.setReturnUrl(AlipayConfig.return_url);
+
+        alipay_request.getApiMethodName();
+
+        AlipayTradePagePayResponse response=null;
+
+        try {
+            response=client.pageExecute(alipay_request,"get");
+        }catch (AlipayApiException e){
+            e.printStackTrace();
+        }
+        logger.info("返回数据:"+response.getBody());
+        if (response.isSuccess()) {
+            logger.info("调用成功");
+        }else {
+            logger.info("调用失败");
+        }
+        Alipay alipay=new Alipay();
+        alipay.setNum(response.getBody());
+        return alipay;
+}
+
+    @RequestMapping("/getIndex")
+    public String getIndex(){
+        logger.info("使用完成");
+        return "/index.html";
+    }
+
+    @RequestMapping("AlipayCallback")
+    @ResponseBody
+    public Map<String, String> AlipayCallback(HttpServletRequest request, HttpServletResponse response) throws IOException,AlipayApiException{
+        response.setContentType("text/html;charset=utf-8");
+        response.reset();
+        //获取支付宝POST过来反馈信息
+        response.getOutputStream();
+
+        Map<String,String> params=new HashMap<>();
+        Map requestParams =request.getParameterMap();
+        for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
+            String name = (String) iter.next();
+            String[] values = (String[]) requestParams.get(name);
+            String valueStr = "";
+            for (int i = 0; i < values.length; i++) {
+                valueStr = (i == values.length - 1) ? valueStr + values[i]
+                        : valueStr + values[i] + ",";
+            }
+            //乱码解决，这段代码在出现乱码时使用。如果mysign和sign不相等也可以使用这段代码转化
+            //valueStr = new String(valueStr.getBytes("ISO-8859-1"), "gbk");
+            params.put(name, valueStr);
+        }
+
+        //商户订单号
+        String out_trade_no = new String(request.getParameter("out_trade_no").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info("商户订单号"+out_trade_no);
+        //支付宝交易号
+
+        String trade_no = new String(request.getParameter("trade_no").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info(  "支付宝交易号"+trade_no);
+
+        //交易状态
+        String trade_status = new String(request.getParameter("trade_status").getBytes("ISO-8859-1"),"UTF-8");
+
+        boolean verify_result = AlipaySignature.rsaCheckV1(params, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.CHARSET, "RSA2");
+        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
+
+
+        if (verify_result){
+            response.getOutputStream().println("success");	//请不要修改或删除
+            response.getOutputStream().close();
+        }else {
+            response.getOutputStream().println("fail");
+            return params;
+
+        }
+        return params;
+    }
+
+
+    @RequestMapping("/Alipayrefund")
+    @ResponseBody
+    public Alipay Alipayrefund(HttpServletRequest request, HttpServletResponse httpServletResponse,String WIDout_trade_no, String WIDsubject, String WIDrefund_amount, String WIDbody) throws AlipayApiException, IOException {
+        // 商户订单号，商户网站订单系统中唯一订单号，必填
+        String out_trade_no =WIDout_trade_no;//String.valueOf( NumberID.nextId(port));//  new String(request.getParameter("WIDout_trade_no"));
+        logger.info("订单号"+out_trade_no);
+        // 退款说明，必填
+        String subject = WIDsubject;//new String(request.getParameter("WIDsubject"));
+        // 退款金额，必填
+        String refund_amount= WIDrefund_amount;//new String(request.getParameter("WIDtotal_amount"));
+        SimpleDateFormat simpleDateFormat=new SimpleDateFormat("yyyy-MM-dd HH:ss");
+        Calendar nowTime = Calendar.getInstance();
+        nowTime.add(Calendar.MINUTE, 90);
+        String time_expire=simpleDateFormat.format(nowTime.getTime());
+        /**********************/
+        // SDK 公共请求类，包含公共请求参数，以及封装了签名与验签，开发者无需关注签名与验签
+        //调用RSA签名方式
+        AlipayClient client = new DefaultAlipayClient(AlipayConfig.URL, AlipayConfig.APPID, AlipayConfig.RSA_PRIVATE_KEY, AlipayConfig.FORMAT, CHARSET, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.SIGNTYPE);
+//        AlipayTradeWapPayRequest alipay_request=new AlipayTradeWapPayRequest();
+        AlipayTradePageRefundRequest alipay_request = new AlipayTradePageRefundRequest();
+        // 封装请求支付信息
+        AlipayTradePageRefundModel model=new AlipayTradePageRefundModel();
+        model.setOutTradeNo(out_trade_no);
+        model.setRefundReason(subject);
+        model.setRefundAmount(refund_amount);
+//        model.setTimeExpire(time_expire);
+        alipay_request.setBizModel(model);
+        // 设置异步通知地址
+        alipay_request.setNotifyUrl("http://www.xuthus83.cn:6081/PayMents/AlipayRefundCallback");
+        // 设置同步地址
+        alipay_request.setReturnUrl(AlipayConfig.refund_url);
+
+        alipay_request.getApiMethodName();
+
+        AlipayTradePageRefundResponse response=null;
+
+        try {
+            response=client.pageExecute(alipay_request,"get");
+        }catch (AlipayApiException e){
+            e.printStackTrace();
+        }
+        logger.info("返回数据:"+response.getBody());
+        if (response.isSuccess()) {
+            logger.info("退款提交成功成功");
+        }else {
+            logger.info("退款提交失败失败");
+        }
+        Alipay alipay=new Alipay();
+        alipay.setNum(response.getBody());
+        return alipay;
+    }
+
+    @RequestMapping("AlipayRefundCallback")
+    @ResponseBody
+    public int AlipayRefundCallback(HttpServletRequest request, HttpServletResponse response) throws IOException,AlipayApiException{
+        return 0;
+    }
+
+    @RequestMapping("/transfer")
+    @ResponseBody
+    public int transfer(HttpServletResponse response, HttpServletRequest request, BigDecimal amount, String identity, String order_title) throws AlipayApiException,IOException {
+        String out_biz_no = String.valueOf(NumberID.nextId(port));
+        String product_code = "TRANS_ACCOUNT_NO_PWD";
+        String biz_scene = "DIRECT_TRANSFER";
+        String payer_show_name = "沙箱环境";
+        String trans_amount = String.valueOf(amount);
+        logger.info("进入提现");
+
+        // SDK 公共请求类，包含公共请求参数，以及封装了签名与验签，开发者无需关注签名与验签
+        //调用RSA签名方式
+        AlipayClient client = new DefaultAlipayClient(AlipayConfig.URL, AlipayConfig.APPID, AlipayConfig.RSA_PRIVATE_KEY, AlipayConfig.FORMAT, CHARSET, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.SIGNTYPE);
+        Participant participant = new Participant();
+        participant.setIdentity(identity);
+        participant.setIdentityType("ALIPAY_LOGON_ID");
+        participant.setName(payer_show_name);
+        AlipayFundTransUniTransferModel uniTransferModel = new AlipayFundTransUniTransferModel();
+        uniTransferModel.setOutBizNo(out_biz_no);
+        uniTransferModel.setProductCode(product_code);
+//        uniTransferModel.setBusinessParams(biz_scene);
+        uniTransferModel.setOrderTitle(order_title);
+        uniTransferModel.setTransAmount(trans_amount);
+        uniTransferModel.setPayeeInfo(participant);
+        uniTransferModel.setRemark("转账");
+        uniTransferModel.setBizScene(biz_scene);
+
+        AlipayFundTransUniTransferRequest uniTransferRequest = new AlipayFundTransUniTransferRequest();
+        uniTransferRequest.setBizModel(uniTransferModel);
+        uniTransferRequest.setNotifyUrl("http://www.xuthus83.cn:6081/PayMents/AlipayRefundCallback");
+        uniTransferRequest.setReturnUrl("http://www.xuthus83.cn:6081/PayMents/AlipayRefundCallback");
+        AlipayFundTransUniTransferResponse response1 = null;
+        try {
+            response1 = client.execute(uniTransferRequest, "get");
+        } catch (AlipayApiException e) {
+            e.printStackTrace();
+            logger.info("错误:" + e);
+        }
+        if(response1.isSuccess()){
+            return 1;
+        }else {
+            return 0;
+        }
+    }
+
+    @RequestMapping("AlipayAccessToken")
+    @ResponseBody
+    public Map<Integer,String> AliPayUserInfo(String auth_code) throws AlipayApiException{
+        AlipayClient client = new DefaultAlipayClient(AlipayConfig.URL, AlipayConfig.APPID, AlipayConfig.RSA_PRIVATE_KEY, AlipayConfig.FORMAT, CHARSET, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.SIGNTYPE);
+        AlipaySystemOauthTokenRequest tokenRequest=new AlipaySystemOauthTokenRequest();
+        tokenRequest.setCode(auth_code);
+        tokenRequest.setGrantType("authorization_code");
+
+        Map<Integer,String> msg=new HashMap<>();
+        AlipaySystemOauthTokenResponse  tokenResponse=client.execute(tokenRequest);
+            logger.info("token:"+tokenResponse);
+            logger.info("AccessToken:"+tokenResponse.getAccessToken());
+        //调用接口获取用户信息
+        AlipayUserInfoShareRequest requestUser = new AlipayUserInfoShareRequest();
+        try {
+            AlipayUserInfoShareResponse userinfoShareResponse = client.execute(requestUser, tokenResponse.getAccessToken());
+            if(userinfoShareResponse.isSuccess()){
+                System.out.print(userinfoShareResponse.getBody());
+                System.out.println("调用成功");
+                System.out.print("UserId:" + userinfoShareResponse.getUserId() + "\n");//用户支付宝ID
+                System.out.print("NickName:" + userinfoShareResponse.getNickName() + "\n");//用户支付宝昵称
+                System.out.print("UserType:" + userinfoShareResponse.getUserType() + "\n");//用户类型
+                System.out.print("UserStatus:" + userinfoShareResponse.getUserStatus() + "\n");//用户账户动态
+                System.out.print("Email:" + userinfoShareResponse.getEmail() + "\n");//用户Email地址
+                System.out.print("IsCertified:" + userinfoShareResponse.getIsCertified() + "\n");//用户是否进行身份认证
+                System.out.print("IsStudentCertified:" + userinfoShareResponse.getIsStudentCertified() + "\n");//用户是否进行学生认证
+            } else {
+                System.out.println("调用失败");
+            }
+
+        } catch (AlipayApiException e) {
+            //处理异常
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/ServiceImpl/AliPayServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/ServiceImpl/AliPayServiceImpl.java	(date 1574492170142)
+++ payservice/src/main/java/cn/armylife/payservice/ServiceImpl/AliPayServiceImpl.java	(date 1574492170142)
@@ -0,0 +1,4 @@
+package cn.armylife.payservice.ServiceImpl;
+
+public class AliPayServiceImpl {
+}
Index: payservice/src/main/java/cn/armylife/payservice/ServiceImpl/WechatServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/ServiceImpl/WechatServiceImpl.java	(date 1574242899431)
+++ payservice/src/main/java/cn/armylife/payservice/ServiceImpl/WechatServiceImpl.java	(date 1574242899431)
@@ -0,0 +1,64 @@
+package cn.armylife.payservice.ServiceImpl;
+
+import cn.armylife.payservice.Domain.WeChatUsers;
+import cn.armylife.payservice.Service.WechatService;
+import cn.armylife.payservice.Utils.HttpGet;
+import com.alibaba.fastjson.JSONObject;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Logger;
+
+@Service
+public class WechatServiceImpl implements WechatService {
+    Logger logger=Logger.getLogger("WecechatService.service");
+
+    @Autowired
+    WeChatUsers weChatUsers;
+
+    @Override
+    public String getOpenId(String code) {
+        String result=null;
+        try {
+            String URL = "https://api.weixin.qq.com/sns/oauth2/access_token?grant_type=authorization_code";
+            String getDataStr = "&appid=" + weChatUsers.getAppId() + "&secret=" + weChatUsers.getAppSecret() + "&code="+code;
+            String str = HttpGet.HttpGet(URL, getDataStr);
+            JSONObject json= JSONObject.parseObject(str);
+            String openid=(String) json.get("openid");
+//            openid=json.toString();
+            if (openid!=null){
+                result=openid;
+            }else {
+                result="获取失败";
+            }
+
+        }catch (Exception e){
+            logger.info(e+"");
+        }
+        logger.info(result);
+        return result;
+    }
+
+    @Override
+    public Map<Integer, String> getUserInfo(String code) {
+        String URL = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential";
+        String getDataStr = "&appid=" + "wx0f1cabff22920c83" + "&secret=" + "1c3a6dc03fafa955fe50dc867a4ed5a1";
+        String str = HttpGet.HttpGet(URL, getDataStr);
+        JSONObject json = JSONObject.parseObject(str);
+        String access_token=(String) json.get("access_token");
+        String openid=(String) json.get("openid");
+        String URL2 = "https://api.weixin.qq.com/cgi-bin/user/info?";
+        String getDataStr2 = "&access_token=" + access_token + "&openid=" + openid+"&lang="+"zh_CN";
+        String str2 = HttpGet.HttpGet(URL2, getDataStr2);
+        JSONObject json2 = JSONObject.parseObject(str2);
+        String user1=(String) json2.get("headimgurl");//toString();
+        String user2=user1.replaceFirst("http://","https://");
+        Map<Integer,String> msg=new HashMap<>();
+        msg.put(1,user2);
+        msg.put(2,openid);
+        msg.put(3,str2);
+        return msg;
+    }
+}
Index: payservice/src/main/java/cn/armylife/payservice/FeignService/TranctionsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/FeignService/TranctionsService.java	(date 1575463383096)
+++ payservice/src/main/java/cn/armylife/payservice/FeignService/TranctionsService.java	(date 1575463383096)
@@ -0,0 +1,16 @@
+package cn.armylife.payservice.FeignService;
+
+import cn.armylife.common.Domain.Transactions;
+import cn.armylife.payservice.Hystrix.TranctionsServiceHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "paymentsservice",fallback= TranctionsServiceHystrix.class)
+public interface TranctionsService {
+
+    @RequestMapping("Addtranctions")
+    int Addtranctions(Transactions transactions);
+
+
+}
Index: payservice/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- payservice/src/main/resources/bootstrap.properties	(date 1576056248675)
+++ payservice/src/main/resources/bootstrap.properties	(date 1576056248675)
@@ -0,0 +1,26 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=pay+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev++spring.jackson.date-format=yyyy-MM-dd HH:mm:ss+spring.jackson.time-zone=GMT+8++######## 企业公众号开发配置中的token(自定义)+wechat.users.token=armylife+######## 应用id+#wechat.company.appId=wx9346f9d095dafc87+wechat.users.appId=wx9e015ae632859f8e+######## 密钥(同token查看地址)+#wechat.company.appSecret=61dd7f22ded29cda049813678c1577b0+wechat.users.appSecret=9dcb718a89ef427d35aa10d69affcde5+######## 静默授权微信回调url+wechat.users.callBackSlientUrl=http://www.oneoffer.cn/companyWxpay/callback+######## 商户Id(支付相关)+wechat.users.MCHID=1516702411+######## 微信下单地址+wechat.users.wxorder=https://api.mch.weixin.qq.com/pay/unifiedorder+######## 支付api密钥+wechat.users.KEY=STFpefEPYK5smME0vleQKoywvo4vTGiG+######## 支付结果回调地址+wechat.users.NOTIFYURL=http://www.oneoffer.cn/MemberWxpay/callbackIndex: payservice/src/main/resources/templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/resources/templates/index.html	(date 1574676067606)
+++ payservice/src/main/resources/templates/index.html	(date 1574676067606)
@@ -0,0 +1,15 @@
+<!DOCTYPE html>
+<html xmlns:th="http://www.w3.org/1999/xhtml"
+      xmlns:th="http://www.thymeleaf.org" xmlns:layout="http://www.w3.org/1999/xhtml">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<script type="text/javascript" src="js/jquery.min.js"></script>
+<script>
+</script>
+<body>
+<span >到了</span>
+
+</body>
+</html>
\ No newline at end of file
Index: payservice/src/test/java/cn/armylife/payservice/PayserviceApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/test/java/cn/armylife/payservice/PayserviceApplicationTests.java	(date 1574242590896)
+++ payservice/src/test/java/cn/armylife/payservice/PayserviceApplicationTests.java	(date 1574242590896)
@@ -0,0 +1,13 @@
+package cn.armylife.payservice;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class PayserviceApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: member/src/main/java/cn/armylife/member/ServiceImpl/WechatServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/ServiceImpl/WechatServiceImpl.java	(date 1576055689968)
+++ member/src/main/java/cn/armylife/member/ServiceImpl/WechatServiceImpl.java	(date 1576055689968)
@@ -0,0 +1,72 @@
+package cn.armylife.member.ServiceImpl;
+
+import cn.armylife.member.Domain.WeChatUsers;
+import cn.armylife.member.Service.WechatService;
+import cn.armylife.member.Util.HttpGet;
+import net.sf.json.JSONObject;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Logger;
+
+@Service
+public class WechatServiceImpl implements WechatService {
+    Logger logger=Logger.getLogger("WecechatService.service");
+
+    @Autowired
+    WeChatUsers weChatUsers;
+
+    @Override
+    public String getOpenId(String code) {
+        logger.info("微信公众数据:"+weChatUsers.toString());
+        String result=null;
+        try {
+            String URL = "https://api.weixin.qq.com/sns/oauth2/access_token?grant_type=authorization_code";
+            String getDataStr = "&appid=" + weChatUsers.getAppId() + "&secret=" +weChatUsers.getAppSecret() + "&code="+code;
+            String str = HttpGet.HttpGet(URL, getDataStr);
+            JSONObject json= JSONObject.fromObject(str);
+            String openid=(String) json.get("openid");
+//            openid=json.toString();
+            if (!openid.equals(null)){
+                result=openid;
+            }else {
+                result="获取失败";
+            }
+
+        }catch (Exception e){
+            logger.info(e+"");
+        }
+        logger.info(result);
+        return result;
+    }
+
+    @Override
+    public Map<Integer, String> getUserInfo(String code) {
+        logger.info("微信公众数据:"+weChatUsers.toString());
+        String URL = "https://api.weixin.qq.com/sns/oauth2/access_token?";
+        String getDataStr = "appid=" + weChatUsers.getAppId() + "&secret=" + weChatUsers.getAppSecret() + "&code="+code+"&grant_type=authorization_code";
+        String str = HttpGet.HttpGet(URL, getDataStr);
+        logger.info("str"+str);
+        JSONObject json = JSONObject.fromObject(str);
+        String access_token=(String) json.get("access_token");
+        logger.info("access_token:"+access_token);
+        String openid=(String) json.get("openid");
+        logger.info("openid:"+openid);
+        String URL2 = "https://api.weixin.qq.com/sns/userinfo?";
+        String getDataStr2 = "&access_token=" + access_token + "&openid=" + openid+"&lang="+"zh_CN";
+        String str2 = HttpGet.HttpGet(URL2, getDataStr2);
+        logger.info("str2"+str2);
+        JSONObject json2 = JSONObject.fromObject(str2);
+
+        String user1=(String) json2.get("headimgurl");//toString();
+        logger.info(user1);
+        String user2=user1.replaceFirst("http://","https://");
+        Map<Integer,String> msg=new HashMap<>();
+        msg.put(1,user2);
+        msg.put(2,openid);
+        msg.put(3,str2);
+        return msg;
+    }
+}
Index: payservice/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- payservice/.mvn/wrapper/maven-wrapper.properties	(date 1574242582146)
+++ payservice/.mvn/wrapper/maven-wrapper.properties	(date 1574242582146)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: payservice/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609851)
+++ payservice/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609851)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: member/src/main/java/cn/armylife/member/Service/WechatService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Service/WechatService.java	(date 1575809067807)
+++ member/src/main/java/cn/armylife/member/Service/WechatService.java	(date 1575809067807)
@@ -0,0 +1,15 @@
+package cn.armylife.member.Service;
+
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.Map;
+
+@Service
+@Transactional
+public interface WechatService {
+
+    String getOpenId(String code);
+
+    Map<Integer,String> getUserInfo(String code);
+}
Index: integralmall/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/mvnw	(date 1575814307172)
+++ integralmall/mvnw	(date 1575814307172)
@@ -0,0 +1,322 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ]; then
+
+  if [ -f /etc/mavenrc ]; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ]; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false
+darwin=false
+mingw=false
+case "$(uname)" in
+CYGWIN*) cygwin=true ;;
+MINGW*) mingw=true ;;
+Darwin*)
+  darwin=true
+  # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+  # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+  if [ -z "$JAVA_HOME" ]; then
+    if [ -x "/usr/libexec/java_home" ]; then
+      export JAVA_HOME="$(/usr/libexec/java_home)"
+    else
+      export JAVA_HOME="/Library/Java/Home"
+    fi
+  fi
+  ;;
+esac
+
+if [ -z "$JAVA_HOME" ]; then
+  if [ -r /etc/gentoo-release ]; then
+    JAVA_HOME=$(java-config --jre-home)
+  fi
+fi
+
+if [ -z "$M2_HOME" ]; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ]; do
+    ls=$(ls -ld "$PRG")
+    link=$(expr "$ls" : '.*-> \(.*\)$')
+    if expr "$link" : '/.*' >/dev/null; then
+      PRG="$link"
+    else
+      PRG="$(dirname "$PRG")/$link"
+    fi
+  done
+
+  saveddir=$(pwd)
+
+  M2_HOME=$(dirname "$PRG")/..
+
+  # make it fully qualified
+  M2_HOME=$(cd "$M2_HOME" && pwd)
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=$(cygpath --unix "$M2_HOME")
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="$( (
+      cd "$M2_HOME"
+      pwd
+    ))"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="$( (
+      cd "$JAVA_HOME"
+      pwd
+    ))"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="$(which javac)"
+  if [ -n "$javaExecutable" ] && ! [ "$(expr \"$javaExecutable\" : '\([^ ]*\)')" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=$(which readlink)
+    if [ ! $(expr "$readLink" : '\([^ ]*\)') = "no" ]; then
+      if $darwin; then
+        javaHome="$(dirname \"$javaExecutable\")"
+        javaExecutable="$(cd \"$javaHome\" && pwd -P)/javac"
+      else
+        javaExecutable="$(readlink -f \"$javaExecutable\")"
+      fi
+      javaHome="$(dirname \"$javaExecutable\")"
+      javaHome=$(expr "$javaHome" : '\(.*\)/bin')
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ]; then
+  if [ -n "$JAVA_HOME" ]; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ]; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="$(which java)"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ]; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]; then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ]; do
+    if [ -d "$wdir"/.mvn ]; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=$(
+        cd "$wdir/.."
+        pwd
+      )
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' <"$1")"
+  fi
+}
+
+BASE_DIR=$(find_maven_basedir "$(pwd)")
+if [ -z "$BASE_DIR" ]; then
+  exit 1
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+  if [ "$MVNW_VERBOSE" = true ]; then
+    echo "Found .mvn/wrapper/maven-wrapper.jar"
+  fi
+else
+  if [ "$MVNW_VERBOSE" = true ]; then
+    echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+  fi
+  if [ -n "$MVNW_REPOURL" ]; then
+    jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+  else
+    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+  fi
+  while IFS="=" read key value; do
+    case "$key" in wrapperUrl)
+      jarUrl="$value"
+      break
+      ;;
+    esac
+  done <"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+  if [ "$MVNW_VERBOSE" = true ]; then
+    echo "Downloading from: $jarUrl"
+  fi
+  wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+  if $cygwin; then
+    wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")
+  fi
+
+  if command -v wget >/dev/null; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found wget ... using wget"
+    fi
+    if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+      wget "$jarUrl" -O "$wrapperJarPath"
+    else
+      wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+    fi
+  elif command -v curl >/dev/null; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found curl ... using curl"
+    fi
+    if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+      curl -o "$wrapperJarPath" "$jarUrl" -f
+    else
+      curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+    fi
+
+  else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Falling back to using Java to download"
+    fi
+    javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+    # For Cygwin, switch paths to Windows format before running javac
+    if $cygwin; then
+      javaClass=$(cygpath --path --windows "$javaClass")
+    fi
+    if [ -e "$javaClass" ]; then
+      if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo " - Compiling MavenWrapperDownloader.java ..."
+        fi
+        # Compiling the Java class
+        ("$JAVA_HOME/bin/javac" "$javaClass")
+      fi
+      if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+        # Running the downloader
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo " - Running MavenWrapperDownloader.java ..."
+        fi
+        ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+      fi
+    fi
+  fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=$(cygpath --path --windows "$M2_HOME")
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: integralmall/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/mvnw.cmd	(date 1575814304472)
+++ integralmall/mvnw.cmd	(date 1575814304472)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: payments/src/main/java/cn/armylife/payments/Hystrix/PaySerivceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Hystrix/PaySerivceHystrix.java	(date 1575648209628)
+++ payments/src/main/java/cn/armylife/payments/Hystrix/PaySerivceHystrix.java	(date 1575648209628)
@@ -0,0 +1,46 @@
+package cn.armylife.payments.Hystrix;
+
+import cn.armylife.common.Domain.Member;
+import cn.armylife.payments.Domain.Alipay;
+import cn.armylife.payments.FeignService.Payservice;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.stereotype.Component;
+
+import java.math.BigDecimal;
+import java.util.HashMap;
+import java.util.Map;
+
+@Component
+public class PaySerivceHystrix implements Payservice {
+    Logger logger= LoggerFactory.getLogger(PaySerivceHystrix.class);
+
+    @Override
+    public Map<String, String> order(String orderDesc, String Total,String orderCardID,String attach) {
+        Map<String, String> msg=new HashMap<>();
+        msg.put("WechatPay,","Error");
+        return msg;
+    }
+
+    @Override
+
+   public int WechatExtract(Member member,String orderfee){
+        return 0;
+    };
+    @Override
+    public int transfer(BigDecimal amount,String identity, String order_title){
+        logger.info("AliPay,Error");
+        return 0;
+    };
+
+    @Override
+    public int orderrefund(Long orderCardId, double refundfree,double totalfree,String desc){
+        logger.info("Wechat,Error");
+        return 0;
+    };
+
+    @Override
+    public Alipay alipay(String WIDout_trade_no, String WIDsubject, String WIDtotal_amount, String WIDbody,String passback_params){
+        return null;
+    };
+}
Index: integralmall/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/.gitignore	(date 1575814304535)
+++ integralmall/.gitignore	(date 1575814304535)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: payments/src/main/java/cn/armylife/payments/PaymentsApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/PaymentsApplication.java	(date 1574843450120)
+++ payments/src/main/java/cn/armylife/payments/PaymentsApplication.java	(date 1574843450120)
@@ -0,0 +1,62 @@
+package cn.armylife.payments;
+
+import com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+import org.springframework.session.web.http.CookieSerializer;
+import org.springframework.session.web.http.DefaultCookieSerializer;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+import org.springframework.web.client.RestTemplate;
+
+@SpringBootApplication
+@EnableFeignClients
+@EnableDiscoveryClient
+@EnableRedisHttpSession
+@EnableHystrix
+@EnableHystrixDashboard
+@EnableCircuitBreaker
+@EnableTransactionManagement
+public class PaymentsApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(PaymentsApplication.class, args);
+    }
+
+
+    @Bean
+    @LoadBalanced
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+    @Bean
+    public ServletRegistrationBean getServlet() {
+        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
+        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
+        registrationBean.setLoadOnStartup(1);
+        registrationBean.addUrlMappings("/hystrix.stream");
+        registrationBean.setName("HystrixMetricsStreamServlet");
+        return registrationBean;
+    }
+
+    @Bean
+    public CookieSerializer cookieSerializer() {
+        DefaultCookieSerializer defaultCookieSerializer = new DefaultCookieSerializer();
+        //cookie名字
+        defaultCookieSerializer.setCookieName("sessionId");
+        //域
+//        defaultCookieSerializer.setDomainName("xxx.com");
+        //存储路径设为根路径，同一域名下多个项目共享该cookie
+        defaultCookieSerializer.setCookiePath("/");
+        return defaultCookieSerializer;
+    }
+}
Index: common/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/mvnw	(date 1572937325258)
+++ common/mvnw	(date 1572937325258)
@@ -0,0 +1,286 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+  # TODO classpath?
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        wget "$jarUrl" -O "$wrapperJarPath"
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        curl -o "$wrapperJarPath" "$jarUrl"
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: payments/src/main/java/cn/armylife/payments/Service/TransactionsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Service/TransactionsService.java	(date 1575809119622)
+++ payments/src/main/java/cn/armylife/payments/Service/TransactionsService.java	(date 1575809119622)
@@ -0,0 +1,13 @@
+package cn.armylife.payments.Service;
+
+import cn.armylife.common.Domain.Transactions;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+@Service
+@Transactional
+public interface TransactionsService {
+
+
+    int insert(Transactions transactions);
+}
Index: common/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/mvnw.cmd	(date 1572937325257)
+++ common/mvnw.cmd	(date 1572937325257)
@@ -0,0 +1,161 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+FOR /F "tokens=1,2 delims==" %%A IN (%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties) DO (
+	IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B 
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    echo Found %WRAPPER_JAR%
+) else (
+    echo Couldn't find %WRAPPER_JAR%, downloading it ...
+	echo Downloading from: %DOWNLOAD_URL%
+    powershell -Command "(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"
+    echo Finished downloading %WRAPPER_JAR%
+)
+@REM End of extension
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: payments/src/main/java/cn/armylife/payments/Service/PayMentsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Service/PayMentsService.java	(date 1575809097593)
+++ payments/src/main/java/cn/armylife/payments/Service/PayMentsService.java	(date 1575809097593)
@@ -0,0 +1,51 @@
+package cn.armylife.payments.Service;
+
+import cn.armylife.common.Domain.AfterOrder;
+import cn.armylife.common.Domain.Payments;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+@Service
+@Transactional
+public interface PayMentsService {
+
+
+
+    /**
+     * 查询商铺收入金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectPayForShop(Long receivName);
+
+    /**
+     * 查询商铺退款金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectRefundForShop(Long receivName);
+
+    /**
+     * 支付完成,更新支付数据
+     * @param payments
+     * @return
+     */
+    int updatePayMentsForCallback(Payments payments);
+
+    /**
+     * 查询支付记录(通过订单号)
+     * @param orderId
+     * @return
+     */
+    Payments selectPaments(Long orderId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int insert(Payments record);
+
+    int updateafterOrderForPay(AfterOrder afterOrder);
+}
Index: common/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/.gitignore	(date 1572937325276)
+++ common/.gitignore	(date 1572937325276)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: admin/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/mvnw	(date 1574474077717)
+++ admin/mvnw	(date 1574474077717)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+        
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: admin/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/mvnw.cmd	(date 1574474077719)
+++ admin/mvnw.cmd	(date 1574474077719)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: admin/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/.gitignore	(date 1574474077750)
+++ admin/.gitignore	(date 1574474077750)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: payservice/src/main/java/cn/armylife/payservice/PayserviceApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/PayserviceApplication.java	(date 1575484209026)
+++ payservice/src/main/java/cn/armylife/payservice/PayserviceApplication.java	(date 1575484209026)
@@ -0,0 +1,19 @@
+package cn.armylife.payservice;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.scheduling.annotation.EnableScheduling;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+
+@SpringBootApplication
+@EnableTransactionManagement
+@EnableScheduling
+@EnableFeignClients
+public class PayserviceApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(PayserviceApplication.class, args);
+    }
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/Service/AliPayServeice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Service/AliPayServeice.java	(date 1574492677945)
+++ payservice/src/main/java/cn/armylife/payservice/Service/AliPayServeice.java	(date 1574492677945)
@@ -0,0 +1,6 @@
+package cn.armylife.payservice.Service;
+
+public class AliPayServeice  {
+
+
+}
Index: payservice/src/main/java/cn/armylife/payservice/Service/WechatService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/java/cn/armylife/payservice/Service/WechatService.java	(date 1575809559613)
+++ payservice/src/main/java/cn/armylife/payservice/Service/WechatService.java	(date 1575809559613)
@@ -0,0 +1,15 @@
+package cn.armylife.payservice.Service;
+
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.Map;
+
+@Service
+@Transactional
+public interface WechatService {
+
+    String getOpenId(String code);
+
+    Map<Integer,String> getUserInfo(String code);
+}
Index: payments/Common.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/Common.java	(date 1575549801162)
+++ payments/Common.java	(date 1575549801162)
@@ -0,0 +1,11 @@
+package cn.armylife.common;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class Common {
+    public static void main(String[] args) {
+        SpringApplication.run(Common.class, args);
+    }
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallAreaMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallAreaMapper.java	(date 1575857877928)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallAreaMapper.java	(date 1575857877928)
@@ -0,0 +1,25 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.MallArea;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface MallAreaMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_area
+     *
+     * @mbggenerated
+     */
+    int insert(MallArea record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_area
+     *
+     * @mbggenerated
+     */
+    List<MallArea> selectAll();
+}
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralRecordMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralRecordMapper.java	(date 1575857847171)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralRecordMapper.java	(date 1575857847171)
@@ -0,0 +1,25 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.IntegralRecord;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface IntegralRecordMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_record
+     *
+     * @mbggenerated
+     */
+    int insert(IntegralRecord record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_record
+     *
+     * @mbggenerated
+     */
+    List<IntegralRecord> selectAll();
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/MallAreaMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/MallAreaMapper.xml	(date 1575859932777)
+++ integralmall/src/main/resources/Mapper/MallAreaMapper.xml	(date 1575859932777)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallAreaMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallArea">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_area_id" jdbcType="BIGINT" property="mallAreaId" />
+    <result column="mall_area_name" jdbcType="VARCHAR" property="mallAreaName" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallArea">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="mallAreaId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into mall_area (mall_area_name, adding_time)
+    values (#{mallAreaName,jdbcType=VARCHAR}, #{addingTime,jdbcType=TIMESTAMP})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_area_id, mall_area_name, adding_time
+    from mall_area
+  </select>
+
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/IntegralUser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/IntegralUser.java	(date 1575858263108)
+++ common/src/main/java/cn/armylife/common/Domain/IntegralUser.java	(date 1575858263108)
@@ -0,0 +1,129 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+
+public class IntegralUser implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_user.integral_user_id
+     *
+     * @mbggenerated
+     */
+    private Long integralUserId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_user.user_id
+     *
+     * @mbggenerated
+     */
+    private Long userId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_user.integral
+     *
+     * @mbggenerated
+     */
+    private Integer integral;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table integral_user
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_user.integral_user_id
+     *
+     * @return the value of integral_user.integral_user_id
+     *
+     * @mbggenerated
+     */
+    public Long getIntegralUserId() {
+        return integralUserId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_user.integral_user_id
+     *
+     * @param integralUserId the value for integral_user.integral_user_id
+     *
+     * @mbggenerated
+     */
+    public void setIntegralUserId(Long integralUserId) {
+        this.integralUserId = integralUserId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_user.user_id
+     *
+     * @return the value of integral_user.user_id
+     *
+     * @mbggenerated
+     */
+    public Long getUserId() {
+        return userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_user.user_id
+     *
+     * @param userId the value for integral_user.user_id
+     *
+     * @mbggenerated
+     */
+    public void setUserId(Long userId) {
+        this.userId = userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_user.integral
+     *
+     * @return the value of integral_user.integral
+     *
+     * @mbggenerated
+     */
+    public Integer getIntegral() {
+        return integral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_user.integral
+     *
+     * @param integral the value for integral_user.integral
+     *
+     * @mbggenerated
+     */
+    public void setIntegral(Integer integral) {
+        this.integral = integral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_user
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", integralUserId=").append(integralUserId);
+        sb.append(", userId=").append(userId);
+        sb.append(", integral=").append(integral);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/IntegralUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/IntegralUserMapper.xml	(date 1575879800091)
+++ integralmall/src/main/resources/Mapper/IntegralUserMapper.xml	(date 1575879800091)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.IntegralUserMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.IntegralUser">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="integral_user_id" jdbcType="BIGINT" property="integralUserId" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="integral" jdbcType="INTEGER" property="integral" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.IntegralUser">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="integralUserId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into integral_user (user_id, integral)
+    values (#{userId,jdbcType=BIGINT}, #{integral,jdbcType=INTEGER})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select integral_user_id, user_id, integral
+    from integral_user
+  </select>
+
+  <update id="integralChange" >
+    update integral_user set integral=#{integral} where user_id=#{userId}
+  </update>
+  
+  <select id="findUserIntegral" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from integral_user where user_id=#{userId}
+  </select>
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Config/AlipayConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Config/AlipayConfig.java	(date 1575650288347)
+++ common/src/main/java/cn/armylife/common/Config/AlipayConfig.java	(date 1575650288347)
@@ -0,0 +1,27 @@
+package cn.armylife.common.Config;
+
+public class AlipayConfig {
+	// 商户appid
+	public static String APPID = "2016101500690081";
+	// 私钥 pkcs8格式的
+	public static String RSA_PRIVATE_KEY = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCOk98S/OmMaTvicn5YbcuP1ZzdhCbXnk8/tvJKgKq7zpH6o0v6pwl8V6jV6ybH/4kT2c0nHlJwRzJkRXSJt0L8onvpooLaXnkEOvJAxe8MLBh4z4hjyDzsUinSf7cKAcYOw4xRoR8W0fhYUBThfkC9vE1CMH289CKCkU4EdgW/XWksFBfyJu9PBhBYPc4J5gAnIzxuNoaCbJX7qyRNe2UuvP6gWmaV5tRwkaAMNellRwS7o25AGPT4oIMfR+RVni2YY5di4dDEmvNfeE02Mjiux+eYzlfBWtm1moqKOAhBj47FYvj48dO+2qSn6hLUthuqHDNPyPwHCimDNZ/JcTe7AgMBAAECggEBAIcvZ7R+PwcWBGTKQEeiGv+O/8P8+EM65FM6KHNBmiCmVT07NeA8Hr9Z8kiaRNQe0x8SRPWRR4MTzpDKVhv5ujcF7M1ye/WG2+GJ7oZB5k05Rh7OT7ikdDdyFBt1YtzHH76B5PrE9VBS19EMZTAE4GfGMc7PYXkWVd5M3ZdXPE3bWpCOZFCDWbddG8arZJ3WKI8KGGlGf/RDVESDTermKD7j2aMY34RZAL11i6H4eiJypUb+1nCvucfECotCjStn4EWTlIDoBOTLC73gJ/YU69xomrX58FaOQLqxXJMG+36Gokh1rMv9XQkF9NfbdJ2RYXTqvOPxQLjdfZlhXPCX75kCgYEA3WDao6qqqT0WQu/oUcMGD6m43+s/62sQ7tjOQYjir5/hK4TykWqTBwpF/rnEoGuOiqT/VQWt7RvGH9OmlZNxmUNdHli1/esspRsyy4AE8+yeZoVFomyXlwLUmfN7xQaITVVH1wVnHGdLblimsQqWnw2uyII3N3zbBTFryHE0200CgYEApOAi/l3wkP1fFfIac6QMivX5eAfAwDtwImJ4Wk+tKMazvr49Ca//xk2rlG/zwSNLXHKvXUj6DTdnHmtgeg25B1nRNSflwUVcjjGiTCpou+SySxWAJ4JbszbcmgjPbP62yNBj0S8iUPrgXD3JKpJi5AEcPMcojbvQgACAO0IViycCgYA+TV+65/EXqAV32SS8vfIavl01R3O5wWwGjCWf8/I4Evq/0K6jlibCuHVydr2LmDmJc14Yg3yrWkGr+1jKh7BUvcybGcQ+Lc1mufzVoLXEIDeECsXKLF2NNlK28PtIO8poWTPao76dE8T6zSA8ewpgwO0LqPn5N747++ilhJankQKBgG1T1sB3CCsMZ73EoTenQ03t1zN5aJ3PjAaw5v9zr+3G/K9xtEW1N9SF8k1mgurB/Znazl/8IRscbrtkFkA400WFkE1AHICw/rOnQ+hfgr1846EYK7eHIElRCqz1RJ4QtKGqVVYDfCzYfmeL7NXW5c4s0k2W/lQlgxctvdoNcv2nAoGACiTZfAMbGHJHztjsltergOB0O9YfpO/kHuzJ+G0Shj9kqXFld93t544sL5K8kLqHtwWjAfQ5rC1R/c+A11Yl/jopmNmJWXH7rF8zxrZOP/ELKoj3U2EQyiN9kiMi3kVq0/WWLMylHb0RB7HP3Qmwm1ZUlLQnJ+BEMXaas8+XH8g=";
+	// 服务器异步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
+	public static String notify_url = "http://api.xuthus83.cn:6081/PayMents/AlipayCallback";
+	// 页面跳转同步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 商户可以自定义同步跳转地址
+	public static String return_url = "http://api.xuthus83.cn:6081/hua/index.html";
+	// 退款页面跳转同步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 商户可以自定义同步跳转地址
+	public static String refund_url = "http://api.xuthus83.cn:6081/hua/index.html";
+	// 请求网关地址
+	public static String URL = "https://openapi.alipaydev.com/gateway.do";
+	// 编码
+	public static String CHARSET = "UTF-8";
+	// 返回格式
+	public static String FORMAT = "json";
+	// 支付宝公钥
+	public static String ALIPAY_PUBLIC_KEY = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjpPfEvzpjGk74nJ+WG3Lj9Wc3YQm155PP7bySoCqu86R+qNL+qcJfFeo1esmx/+JE9nNJx5ScEcyZEV0ibdC/KJ76aKC2l55BDryQMXvDCwYeM+IY8g87FIp0n+3CgHGDsOMUaEfFtH4WFAU4X5AvbxNQjB9vPQigpFOBHYFv11pLBQX8ibvTwYQWD3OCeYAJyM8bjaGgmyV+6skTXtlLrz+oFpmlebUcJGgDDXpZUcEu6NuQBj0+KCDH0fkVZ4tmGOXYuHQxJrzX3hNNjI4rsfnmM5XwVrZtZqKijgIQY+OxWL4+PHTvtqkp+oS1LYbqhwzT8j8BwopgzWfyXE3uwIDAQAB";
+	// 日志记录目录
+	public static String log_path = "/log";
+	// RSA2
+	public static String SIGNTYPE = "RSA2";
+
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralUserMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralUserMapper.java	(date 1575857877912)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/IntegralUserMapper.java	(date 1575857877912)
@@ -0,0 +1,39 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.IntegralUser;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface IntegralUserMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_user
+     *
+     * @mbggenerated
+     */
+    int insert(IntegralUser record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_user
+     *
+     * @mbggenerated
+     */
+    List<IntegralUser> selectAll();
+
+    /**
+     * 变更积分
+     * @param integralUser
+     * @return
+     */
+    int integralChange(IntegralUser integralUser);
+
+    /**
+     * 通过用户Id查找用户积分
+     * @param userId
+     * @return
+     */
+    IntegralUser findUserIntegral(Long userId);
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/IntegralRecordMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/IntegralRecordMapper.xml	(date 1575859856361)
+++ integralmall/src/main/resources/Mapper/IntegralRecordMapper.xml	(date 1575859856361)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.IntegralRecordMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.IntegralRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="integral_record_id" jdbcType="BIGINT" property="integralRecordId" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="record" jdbcType="VARCHAR" property="record" />
+    <result column="time" jdbcType="TIMESTAMP" property="time" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.IntegralRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="integralRecordId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into integral_record (user_id, record, `time`
+    )
+    values (#{userId,jdbcType=BIGINT}, #{record,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
+    )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select integral_record_id, user_id, record, `time`
+    from integral_record
+  </select>
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/IntegralRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/IntegralRecord.java	(date 1575858263108)
+++ common/src/main/java/cn/armylife/common/Domain/IntegralRecord.java	(date 1575858263108)
@@ -0,0 +1,163 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class IntegralRecord implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_record.integral_record_id
+     *
+     * @mbggenerated
+     */
+    private Long integralRecordId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_record.user_id
+     *
+     * @mbggenerated
+     */
+    private Long userId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_record.record
+     *
+     * @mbggenerated
+     */
+    private String record;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column integral_record.time
+     *
+     * @mbggenerated
+     */
+    private Date time;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table integral_record
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_record.integral_record_id
+     *
+     * @return the value of integral_record.integral_record_id
+     *
+     * @mbggenerated
+     */
+    public Long getIntegralRecordId() {
+        return integralRecordId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_record.integral_record_id
+     *
+     * @param integralRecordId the value for integral_record.integral_record_id
+     *
+     * @mbggenerated
+     */
+    public void setIntegralRecordId(Long integralRecordId) {
+        this.integralRecordId = integralRecordId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_record.user_id
+     *
+     * @return the value of integral_record.user_id
+     *
+     * @mbggenerated
+     */
+    public Long getUserId() {
+        return userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_record.user_id
+     *
+     * @param userId the value for integral_record.user_id
+     *
+     * @mbggenerated
+     */
+    public void setUserId(Long userId) {
+        this.userId = userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_record.record
+     *
+     * @return the value of integral_record.record
+     *
+     * @mbggenerated
+     */
+    public String getRecord() {
+        return record;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_record.record
+     *
+     * @param record the value for integral_record.record
+     *
+     * @mbggenerated
+     */
+    public void setRecord(String record) {
+        this.record = record == null ? null : record.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column integral_record.time
+     *
+     * @return the value of integral_record.time
+     *
+     * @mbggenerated
+     */
+    public Date getTime() {
+        return time;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column integral_record.time
+     *
+     * @param time the value for integral_record.time
+     *
+     * @mbggenerated
+     */
+    public void setTime(Date time) {
+        this.time = time;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table integral_record
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", integralRecordId=").append(integralRecordId);
+        sb.append(", userId=").append(userId);
+        sb.append(", record=").append(record);
+        sb.append(", time=").append(time);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsMallProductsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsMallProductsMapper.java	(date 1575882935311)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsMallProductsMapper.java	(date 1575882935311)
@@ -0,0 +1,40 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.PointsMallProducts;
+import com.github.pagehelper.Page;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface PointsMallProductsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_mall_products
+     *
+     * @mbggenerated
+     */
+    int insert(PointsMallProducts record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_mall_products
+     *
+     * @mbggenerated
+     */
+    List<PointsMallProducts> selectAll();
+
+    /**
+     * 通过积分商品Id获取积分商品信息
+     * @param pointsMallProductsId
+     * @return
+     */
+    PointsMallProducts findMallProducts(Long pointsMallProductsId);
+
+    /**
+     * 通过分区Id查看商品
+     * @param respectiveArea
+     * @return
+     */
+    Page<PointsMallProducts> findProductForArea(Long respectiveArea);
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/PointsMallProductsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/PointsMallProductsMapper.xml	(date 1575860374622)
+++ integralmall/src/main/resources/Mapper/PointsMallProductsMapper.xml	(date 1575860374622)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.PointsMallProductsMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.PointsMallProducts">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="points_mall_products_id" jdbcType="BIGINT" property="pointsMallProductsId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
+    <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
+    <result column="commodity_pictures" jdbcType="VARCHAR" property="commodityPictures" />
+    <result column="commodity_details" jdbcType="VARCHAR" property="commodityDetails" />
+    <result column="respective-area" jdbcType="BIGINT" property="respectiveArea" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.PointsMallProducts">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="pointsMallProductsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into points_mall_products (using_integral, usage_amount, original_price,
+    trade_name, commodity_pictures, commodity_details,
+    respective-area, adding_time)
+    values (#{usingIntegral,jdbcType=INTEGER}, #{usageAmount,jdbcType=DECIMAL}, #{originalPrice,jdbcType=DECIMAL},
+    #{tradeName,jdbcType=VARCHAR}, #{commodityPictures,jdbcType=VARCHAR}, #{commodityDetails,jdbcType=VARCHAR},
+    #{respectiveArea,jdbcType=BIGINT}, #{addingTime,jdbcType=TIMESTAMP})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select points_mall_products_id, using_integral, usage_amount, original_price, trade_name,
+    commodity_pictures, commodity_details, respective-area, adding_time
+    from points_mall_products
+  </select>
+  
+  <select id="findMallProducts" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_mall_products where points_mall_products_id=#{pointsMallProductsId}
+  </select>
+  
+  <select id="findProductForArea" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_mall_products where respective_area=#{respectiveArea}
+  </select>
+
+</mapper>
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/PointsExchangeRecordMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/PointsExchangeRecordMapper.xml	(date 1575881851702)
+++ integralmall/src/main/resources/Mapper/PointsExchangeRecordMapper.xml	(date 1575881851702)
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.PointsExchangeRecordMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.PointsExchangeRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="points_exchange_record_id" jdbcType="BIGINT" property="pointsExchangeRecordId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="exchange_time" jdbcType="TIMESTAMP" property="exchangeTime" />
+    <result column="items_exchanged" jdbcType="VARCHAR" property="itemsExchanged" />
+    <result column="logistics_number" jdbcType="VARCHAR" property="logisticsNumber" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="user_name" jdbcType="VARCHAR" property="userName" />
+    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
+    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
+    <result column="product_id" jdbcType="BIGINT" property="productId" />
+    <result column="product_detail_id" jdbcType="BIGINT" property="productDetailId" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.PointsExchangeRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="pointsExchangeRecordId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into points_exchange_record (points_exchange_record_id,using_integral, usage_amount, exchange_time,
+    items_exchanged, logistics_number, user_id,
+    user_name, user_phone, user_address,
+    product_id, product_detail_id)
+    values (#{pointsExchangeRecordId,jdbcType=INTEGER},#{usingIntegral,jdbcType=INTEGER}, #{usageAmount,jdbcType=DECIMAL}, #{exchangeTime,jdbcType=TIMESTAMP},
+    #{itemsExchanged,jdbcType=VARCHAR}, #{logisticsNumber,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
+    #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR},
+    #{productId,jdbcType=BIGINT}, #{productDetailId,jdbcType=BIGINT})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select points_exchange_record_id, using_integral, usage_amount, exchange_time, items_exchanged,
+    logistics_number, user_id, user_name, user_phone, user_address, product_id, product_detail_id
+    from points_exchange_record
+  </select>
+  
+  <select id="findExchangeRecord" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_exchange_record where user_id=#{userId}
+  </select>
+
+  <select id="findExchangeRecordForId" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_exchange_record where points_exchange_record_id=#{pointsExchangeRecordId}
+  </select>
+
+</mapper>
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsExchangeRecordMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsExchangeRecordMapper.java	(date 1575883605710)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/PointsExchangeRecordMapper.java	(date 1575883605710)
@@ -0,0 +1,40 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.PointsExchangeRecord;
+import com.github.pagehelper.Page;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface PointsExchangeRecordMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_exchange_record
+     *
+     * @mbggenerated
+     */
+    int insert(PointsExchangeRecord record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_exchange_record
+     *
+     * @mbggenerated
+     */
+    List<PointsExchangeRecord> selectAll();
+
+    /**
+     * 查询兑换记录
+     * @param userId
+     * @return
+     */
+    Page<PointsExchangeRecord> findExchangeRecord(Long userId);
+
+    /**
+     * 通过Id查询兑换记录
+     * @param pointsExchangeRecordId
+     * @return
+     */
+    PointsExchangeRecord findExchangeRecordForId(Long pointsExchangeRecordId);
+}
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/ServiceImpl/IntegralMallServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/ServiceImpl/IntegralMallServiceImpl.java	(date 1575972532415)
+++ integralmall/src/main/java/cn/armylife/integralmall/ServiceImpl/IntegralMallServiceImpl.java	(date 1575972532415)
@@ -0,0 +1,186 @@
+package cn.armylife.integralmall.ServiceImpl;
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.integralmall.Mapper.*;
+import cn.armylife.integralmall.Service.IntegralMallService;
+import com.github.pagehelper.Page;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.sql.Timestamp;
+import java.util.Date;
+import java.util.List;
+
+@Service
+public class IntegralMallServiceImpl implements IntegralMallService {
+
+    Logger logger= LoggerFactory.getLogger(IntegralMallServiceImpl.class);
+
+    @Autowired
+    IntegralUserMapper integralUserMapper;
+    @Autowired
+    IntegralRecordMapper integralRecordMapper;
+    @Autowired
+    PointsMallProductsMapper pointsMallProductsMapper;
+    @Autowired
+    PointsExchangeRecordMapper pointsExchangeRecordMapper;
+    @Autowired
+    MallProductsDetailMapper mallProductsDetailMapper;
+    @Autowired MallAreaMapper mallAreaMapper;
+    @Autowired PaymentsMapper paymentsMapper;
+
+    @Override
+    public int integralUserinsert(IntegralUser record){
+        return integralUserMapper.insert(record);
+    };
+
+    /**
+     * 增加积分
+     * @param integral
+     * @param userId
+     * @return
+     */
+    @Override
+    public int integralIncrease(Integer integral,Long userId){
+        IntegralUser integralUser=new IntegralUser();
+        integralUser.setUserId(userId);
+        IntegralUser user=integralUserMapper.findUserIntegral(userId);
+        Integer oldIntegral = user.getIntegral();
+        int integrals=oldIntegral+integral;
+        logger.info("更新后积分:"+integrals);
+        integralUser.setIntegral(integrals);
+        IntegralRecord integralRecord=new IntegralRecord();
+        integralRecord.setRecord("+"+integral);
+        integralRecord.setUserId(userId);
+        Date date=new Date();
+        Timestamp timestamp=new Timestamp(date.getTime());
+        integralRecord.setTime(timestamp);
+        integralRecordMapper.insert(integralRecord);
+        return integralUserMapper.integralChange(integralUser);
+    };
+
+    /**
+     * 减少积分
+     * @param integral
+     * @param userId
+     * @return
+     */
+    @Override
+    public int integralReduction(Integer integral,Long userId){
+        IntegralUser integralUser=new IntegralUser();
+        integralUser.setUserId(userId);
+        integralUser.setIntegral(integral);
+        IntegralUser user=integralUserMapper.findUserIntegral(userId);
+        Integer oldIntegral = user.getIntegral();
+        integralUser.setIntegral(oldIntegral-integral);
+        IntegralRecord integralRecord=new IntegralRecord();
+        integralRecord.setRecord("-"+integral);
+        integralRecord.setUserId(userId);
+        Date date=new Date();
+        Timestamp timestamp=new Timestamp(date.getTime());
+        integralRecord.setTime(timestamp);
+        integralRecordMapper.insert(integralRecord);
+        return integralUserMapper.integralChange(integralUser);
+    };
+
+    /**
+     * 通过用户Id查找用户积分
+     * @param userId
+     * @return
+     */
+    @Override
+    public IntegralUser findUserIntegral(Long userId){
+        return integralUserMapper.findUserIntegral(userId);
+    };
+
+    /**
+     * 通过积分商品Id获取积分商品信息
+     * @param pointsMallProductsId
+     * @return
+     */
+    @Override
+    public PointsMallProducts findMallProducts(Long pointsMallProductsId){
+        return pointsMallProductsMapper.findMallProducts(pointsMallProductsId);
+    };
+
+    /**
+     * 添加商品兑换记录
+     * @param record
+     * @return
+     */
+    public Long exchangeRecordinsert(PointsExchangeRecord record){
+        pointsExchangeRecordMapper.insert(record);
+        Long recordId=record.getPointsExchangeRecordId();
+        return recordId;
+    };
+
+    /**
+     * 通过Id查询商品规格信息
+     * @param productDetailId
+     * @return
+     */
+    @Override
+    public MallProductsDetail findProductForDetail(Long productDetailId){
+        return mallProductsDetailMapper.findProductForDetail(productDetailId);
+    };
+
+    /**
+     * 查询所有商城分类
+     * @return
+     */
+    @Override
+    public List<MallArea> mallareaselectAll(){
+        return mallAreaMapper.selectAll();
+    };
+
+    /**
+     * 通过分区Id查看商品
+     * @param respectiveArea
+     * @return
+     */
+    @Override
+    public Page<PointsMallProducts> findProductForArea(Long respectiveArea){
+        return pointsMallProductsMapper.findProductForArea(respectiveArea);
+    };
+
+    /**
+     * 查询兑换记录
+     * @param userId
+     * @return
+     */
+    @Override
+    public Page<PointsExchangeRecord> findExchangeRecord(Long userId){
+        return pointsExchangeRecordMapper.findExchangeRecord(userId);
+    };
+
+    /**
+     * 通过商品Id查询信息
+     * @param productId
+     * @return
+     */
+    @Override
+    public PointsMallProducts findProductForProductId(Long productId){
+        return mallProductsDetailMapper.findProductForProductId(productId);
+    };
+
+    /**
+     * 通过Id查询兑换记录
+     * @param pointsExchangeRecordId
+     * @return
+     */
+    @Override
+    public PointsExchangeRecord findExchangeRecordForId(Long pointsExchangeRecordId){
+        return pointsExchangeRecordMapper.findExchangeRecordForId(pointsExchangeRecordId);
+    };
+
+    /**
+     * 添加支付记录
+     * @param payments
+     * @return
+     */
+    public int paymentsinsert(Payments payments){
+        return paymentsMapper.insert(payments);
+    };
+}
Index: integralmall/src/main/resources/log4j.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- integralmall/src/main/resources/log4j.properties	(date 1575104064081)
+++ integralmall/src/main/resources/log4j.properties	(date 1575104064081)
@@ -0,0 +1,85 @@
+# Global logging configuration
+# 设置logger级别DEBUG、INFO、WRNING、ERROR和输出格式A、B、C或D
+log4j.rootLogger=info,error,CONSOLE,Debug,CONSOLE,FILE
+# MyBatis logging configuration...
+log4j.logger.cn.armylife.member.Mapper=DEBUG
+logging.level.cn.armylife.member.Mapper=debug
+# Console output...
+log4j.appender.stdout=org.apache.log4j.ConsoleAppender
+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
+log4j.appender.stdout.layout.ConversionPattern=[%p] [%d{yyyyMMdd HH\:mm\:ss}][%c]%m%n"
+#<!--日志显示级别,com.project是项目的前缀
+logging.level.cn.armylife=WARN
+#在dao包执行时，输出sql,com.project.sccl.dao就是dao包的全路径
+logging.level.cn.armylife.member.mapper=DEBUG
+#日志的输出位置
+logging.file=logs/spring-boot-logging.log
+logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
+
+log4j.logger.info=info
+log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.info.layout=org.apache.log4j.PatternLayout
+log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.info.datePattern='.'yyyy-MM-dd
+log4j.appender.info.Threshold = info
+log4j.appender.info.append=true
+log4j.appender.info.File=/home/admin/pms-api-services/logs/info/api_services_info
+#log4j.appender.info.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.error=error
+log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.error.layout=org.apache.log4j.PatternLayout
+log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.error.datePattern='.'yyyy-MM-dd
+log4j.appender.error.Threshold = error
+log4j.appender.error.append=true
+log4j.appender.error.File=/home/admin/pms-api-services/logs/error/api_services_error
+#log4j.appender.error.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.DEBUG=DEBUG
+log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
+log4j.appender.DEBUG.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.DEBUG.datePattern='.'yyyy-MM-dd
+log4j.appender.DEBUG.Threshold = DEBUG
+log4j.appender.DEBUG.append=true
+log4j.appender.DEBUG.File=/home/admin/pms-api-services/logs/debug/api_services_debug
+#log4j.appender.DEBUG.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+### Debug
+log4j.logger.com.ibatis=DEBUG
+log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
+log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
+log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
+log4j.logger.java.sql.Connection=DEBUG
+log4j.logger.java.sql.Statement=DEBUG
+log4j.logger.java.sql.PreparedStatement=DEBUG
+
+#
+log4j.rootCategory=INFO, stdout, file
+
+# root日志输出
+log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.file.file=logs/all.log
+log4j.appender.file.DatePattern='.'yyyy-MM-dd
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
+
+# com.didispace包下的日志配置
+log4j.category.cn.armylife.member.Controller=DEBUG, didifile
+
+# com.didispace下的日志输出
+log4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.didifile.file=logs/my.log
+log4j.appender.didifile.DatePattern='.'yyyy-MM-dd
+log4j.appender.didifile.layout=org.apache.log4j.PatternLayout
+log4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n
+#
+#log4j.logger.error=errorfile
+## error日志输出
+#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
+#log4j.appender.errorfile.file=logs/error.log
+#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
+#log4j.appender.errorfile.Threshold = ERROR
+#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
+#log4j.appender.errorfilee.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
\ No newline at end of file
Index: integralmall/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- integralmall/src/main/resources/bootstrap.properties	(date 1575012975921)
+++ integralmall/src/main/resources/bootstrap.properties	(date 1575012975921)
@@ -0,0 +1,4 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=service+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/MemberApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/MemberApplication.java	(date 1575809067840)
+++ member/src/main/java/cn/armylife/member/MemberApplication.java	(date 1575809067840)
@@ -0,0 +1,66 @@
+package cn.armylife.member;
+
+import com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet;
+import org.mybatis.spring.annotation.MapperScan;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+import org.springframework.session.web.http.CookieSerializer;
+import org.springframework.session.web.http.DefaultCookieSerializer;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+import org.springframework.web.client.RestTemplate;
+
+@SpringBootApplication
+@EnableFeignClients
+@EnableDiscoveryClient
+@EnableRedisHttpSession
+@EnableHystrix
+@EnableHystrixDashboard
+@EnableCircuitBreaker
+@MapperScan(basePackages = "cn.armylife.member.Mapper")
+@EnableTransactionManagement
+public class MemberApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(MemberApplication.class, args);
+    }
+
+    @Bean
+    @LoadBalanced
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+    @Bean
+    public ServletRegistrationBean getServlet() {
+        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
+        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
+        registrationBean.setLoadOnStartup(1);
+        registrationBean.addUrlMappings("/hystrix.stream");
+        registrationBean.setName("HystrixMetricsStreamServlet");
+        return registrationBean;
+    }
+
+    @Bean
+    public CookieSerializer cookieSerializer() {
+        DefaultCookieSerializer defaultCookieSerializer = new DefaultCookieSerializer();
+        //cookie名字
+        defaultCookieSerializer.setCookieName("sessionId");
+        //域
+//        defaultCookieSerializer.setDomainName("xxx.com");
+        //存储路径设为根路径，同一域名下多个项目共享该cookie
+        defaultCookieSerializer.setCookiePath("/");
+        return defaultCookieSerializer;
+    }
+
+
+
+}
Index: member/src/main/java/cn/armylife/member/FeignService/integralmall.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/FeignService/integralmall.java	(date 1575823065864)
+++ member/src/main/java/cn/armylife/member/FeignService/integralmall.java	(date 1575823065864)
@@ -0,0 +1,7 @@
+package cn.armylife.member.FeignService;
+
+import org.springframework.cloud.openfeign.FeignClient;
+
+@FeignClient(value = "integralservice")
+public interface integralmall {
+}
Index: member/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/application.yml	(date 1576054007370)
+++ member/src/main/resources/application.yml	(date 1576054007370)
@@ -0,0 +1,43 @@
+server:
+  port: 9002
+spring:
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    username: root
+    password: root
+    hikari:
+      max-lifetime: 0
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+    sentinel:
+      transport:
+        port: 8719
+        dashboard: 127.0.0.1:8718
+  session:
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    store-type: Redis
+    timeout: 3600s
+  redis:
+    timeout: 3600s
+    port: 6379
+    host: 127.0.0.1
+  application:
+    name: memberservice
+  aop:
+    auto: true
+  jackson:
+    date-format: yyyy/MM/dd HH:mm:ss
+    time-zone: GMT+8
+mybatis:
+  mapper-locations: classpath*:Mapper/*Mapper.xml
+  config-location: classpath:Mapper/config/sqlMapConfig.xml
+
+logging:
+  level:
+    cn.armylife.member.Mapper: debug
+    com.alibaba.nacos.client.naming: error
Index: common/src/main/java/cn/armylife/common/Domain/Alipay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Alipay.java	(date 1575864024218)
+++ common/src/main/java/cn/armylife/common/Domain/Alipay.java	(date 1575864024218)
@@ -0,0 +1,14 @@
+package cn.armylife.common.Domain;
+
+public class Alipay {
+
+    private String num;
+
+    public String getNum() {
+        return num;
+    }
+
+    public void setNum(String num) {
+        this.num = num;
+    }
+}
Index: payments/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/resources/application.yml	(date 1575940794068)
+++ payments/src/main/resources/application.yml	(date 1575940794068)
@@ -0,0 +1,53 @@
+server:
+  port: 9111
+spring:
+#  datasource:
+#    driver-class-name: com.mysql.cj.jdbc.Driver
+#    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+#    username: root
+#    password: root
+#    hikari:
+#      max-lifetime: 5000
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+#    sentinel:
+#      transport:
+#        port: 8719
+#        dashboard: 127.0.0.1:8718
+  session:
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    store-type: Redis
+    timeout: 3600s
+  redis:
+    timeout: 3600s
+    port: 6379
+    host: 127.0.0.1
+  application:
+    name: paymentsservice
+  aop:
+    auto: true
+  jackson:
+    date-format: yyyy/MM/dd HH:mm:ss
+    time-zone: GMT+8
+mybatis:
+  mapper-locations: classpath*:Mapper/*Mapper.xml
+  config-location: classpath:Mapper/config/sqlMapConfig.xml
+
+logging:
+  level:
+    cn.armylife.payments.Mapper: debug
+    com.alibaba.nacos.client.naming: error
+wechat:
+  users:
+    token:
+    appId: wx9e015ae632859f8e
+    appSecret: 9dcb718a89ef427d35aa10d69affcde5
+    callBackSlientUrl:
+    MCHID:
+    wxorder:
+    KEY:
+    NOTIFYURL:
\ No newline at end of file
Index: payservice/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payservice/src/main/resources/application.yml	(date 1575940794052)
+++ payservice/src/main/resources/application.yml	(date 1575940794052)
@@ -0,0 +1,60 @@
+server:
+  port: 9122
+spring:
+  resources:
+    chain:
+      strategy:
+        content:
+          enabled: true
+          paths: /**
+  thymeleaf:
+    cache: false
+    prefix:
+      classpath: /templates
+    suffix: .html
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    username: root
+    password: root
+    hikari:
+      max-lifetime: 0
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+    sentinel:
+      transport:
+        port: 8719
+        dashboard: 127.0.0.1:8718
+  session:
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    store-type: Redis
+    timeout: 3600s
+  redis:
+    timeout: 3600s
+    port: 6379
+    host: 127.0.0.1
+  application:
+    name: payservice
+  aop:
+    auto: true
+  jackson:
+    date-format: yyyy/MM/dd HH:mm:ss
+    time-zone: GMT+8
+logging:
+  level:
+    cn.armylife.payments.Mapper: debug
+    com.alibaba.nacos.client.naming: error
+wechat:
+  users:
+    token:
+    appId: wx9e015ae632859f8e
+    appSecret: 9dcb718a89ef427d35aa10d69affcde5
+    callBackSlientUrl:
+    MCHID:
+    wxorder:
+    KEY:
+    NOTIFYURL:
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Feign/payservice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Feign/payservice.java	(date 1575872233632)
+++ integralmall/src/main/java/cn/armylife/integralmall/Feign/payservice.java	(date 1575872233632)
@@ -0,0 +1,20 @@
+package cn.armylife.integralmall.Feign;
+
+import cn.armylife.common.Domain.Alipay;
+import cn.armylife.integralmall.FeignHystrix.payserviceHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.util.Map;
+
+@FeignClient(value = "payservice",fallback = payserviceHystrix.class )
+public interface payservice {
+
+    @RequestMapping(value = "alipayOrder",method = RequestMethod.GET)
+    Alipay alipay(@RequestParam String WIDout_trade_no,@RequestParam String WIDsubject,@RequestParam String WIDtotal_amount,@RequestParam String WIDbody,@RequestParam String passback_params);
+
+    @RequestMapping(value = "MemberWxpay/pay",method = RequestMethod.GET)
+    Map<String,String> order(@RequestParam String orderDesc,@RequestParam String Total,@RequestParam String orderCardID,@RequestParam String attach);
+}
Index: market/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/application.yml	(date 1575940794044)
+++ market/src/main/resources/application.yml	(date 1575940794044)
@@ -0,0 +1,51 @@
+server:
+  port: 10001
+spring:
+  application:
+    name: marketservice
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+  session:
+    store-type: redis
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    timeout: 86400s
+  redis:
+    host: 127.0.0.1
+    port: 6379
+    timeout: 86400s
+    jedis:
+      pool:
+        max-active: 200
+        max-wait: -1
+        max-idle: 8
+        min-idle: 0
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    username: root
+    password: root
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    hikari:
+      max-lifetime: 1
+  rabbitmq:
+    host: 192.168.5.111
+    username: armylife
+    password: Kzr20191116.
+    port: 5672
+#logging:
+mybatis:
+  mapper-locations: classpath*:Mapper/*Mapper.xml
+  config-location: classpath:Mapper/config/sqlMapConfig.xml
+  type-aliases-package: cn.armylife.common.Domain
+pagehelper:
+  helper-dialect: mysql
+  reasonable: true
+  support-methods-arguments: true
+  params: countSql
+logging:
+  level:
+    cn.armylife.payments.Mapper: debug
+    com.alibaba.nacos.client.naming: error
Index: integralmall/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/application.yml	(date 1575940794076)
+++ integralmall/src/main/resources/application.yml	(date 1575940794076)
@@ -0,0 +1,42 @@
+server:
+  port: 9132
+spring:
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    username: root
+    password: root
+    hikari:
+      max-lifetime: 0
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+    sentinel:
+      transport:
+        port: 8719
+        dashboard: 127.0.0.1:8718
+  session:
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    store-type: Redis
+    timeout: 3600s
+  redis:
+    timeout: 3600s
+    port: 6379
+    host: 127.0.0.1
+  application:
+    name: integralservice
+  aop:
+    auto: true
+  jackson:
+    date-format: yyyy/MM/dd HH:mm:ss
+    time-zone: GMT+8
+mybatis:
+  mapper-locations: classpath*:Mapper/*Mapper.xml
+  config-location: classpath:Mapper/config/sqlMapConfig.xml
+logging:
+  level:
+      cn.armylife.payments.Mapper: debug
+      com.alibaba.nacos.client.naming: error
Index: common/src/main/resources/mybatis-generator/generatorConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/resources/mybatis-generator/generatorConfig.xml	(date 1575959763534)
+++ common/src/main/resources/mybatis-generator/generatorConfig.xml	(date 1575959763534)
@@ -0,0 +1,167 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE generatorConfiguration
+        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
+        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
+<!-- 配置生成器 -->
+<generatorConfiguration>
+    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e -->
+    <!-- 引入配置文件 -->
+    <properties resource="application.properties"/>
+    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 可选 -->
+<!--    <classPathEntry location="D:\Users\xuthus\.m2\repository\mysql\mysql-connector-java\8.0.18\mysql-connector-java-8.0.18.jar" />-->
+
+    <!-- 一个数据库一个context -->
+    <!--defaultModelType="flat" 大数据字段，不分表 -->
+    <context id="MysqlTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">
+        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
+        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
+        <property name="autoDelimitKeywords" value="true" />
+        <!-- 生成的Java文件的编码 -->
+        <property name="javaFileEncoding" value="utf-8" />
+        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
+        <property name="beginningDelimiter" value="`" />
+        <property name="endingDelimiter" value="`" />
+
+        <!-- 格式化java代码 -->
+        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
+        <!-- 格式化XML代码 -->
+        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
+        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
+
+        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
+
+        <!-- 注释 -->
+        <commentGenerator >
+            <property name="suppressAllComments" value="false"/><!-- 是否取消注释 -->
+            <property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳-->
+        </commentGenerator>
+
+        <!-- jdbc连接 -->
+        <jdbcConnection driverClass="${spring.datasource.driver-class-name}" connectionURL="${spring.datasource.url}" userId="${spring.datasource.username}" password="${spring.datasource.password}" />
+        <!-- 类型转换 -->
+        <javaTypeResolver>
+            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
+            <property name="forceBigDecimals" value="false"/>
+        </javaTypeResolver>
+
+        <!-- 生成实体类地址 -->
+        <javaModelGenerator targetPackage="cn.armylife.common.Domain" targetProject="${mybatis.project}" >
+            <property name="enableSubPackages" value="false"/>
+            <property name="trimStrings" value="true"/>
+        </javaModelGenerator>
+        <!-- 生成mapxml文件 -->
+        <sqlMapGenerator targetPackage="Mapper" targetProject="${mybatis.resources}" >
+            <property name="enableSubPackages" value="false" />
+        </sqlMapGenerator>
+        <!-- 生成mapxml对应client，也就是接口dao -->
+        <javaClientGenerator targetPackage="cn.armylife.common.Mapper" targetProject="${mybatis.project}" type="XMLMAPPER" >
+            <property name="enableSubPackages" value="false" />
+        </javaClientGenerator>
+        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->
+<!--        <table tableName="delivery_order" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="delivery_orders_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="member" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="member_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="payments" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="payments_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="product" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="product_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="product_detail" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="product_detail_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="shop_order" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="orders_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--            <table tableName="alid" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="ALID" sqlStatement="Mysql" identity="true" />-->
+<!--            </table>-->
+<!--        <table tableName="shop_tag" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="shop_tag_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="transactions" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="tranactions_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="order_detail" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="order_detail_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="hairvip" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="hairvip_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="after_order_detail" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="after_order_detail_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="integral_record" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="integral_record_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="integral_user" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="integral_user_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="mall_area" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="mall_area_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="points_exchange_record" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="points_exchange_record_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="points_mall_products" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="points_mall_products_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="mall_products_detail" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--        <property name="useActualColumnNames" value="false" />-->
+<!--        &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--        <generatedKey column="mall_products_detail_id" sqlStatement="Mysql" identity="true" />-->
+<!--    </table>-->
+        <table tableName="mall_products_picture" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+                <property name="useActualColumnNames" value="false" />
+                <!-- 数据库表主键 -->
+                <generatedKey column="mall_products_picture_id" sqlStatement="Mysql" identity="true" />
+        </table>
+<!--        <table tableName="after_order" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="after_order_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+<!--        <table tableName="vip" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">-->
+<!--            <property name="useActualColumnNames" value="false" />-->
+<!--            &lt;!&ndash; 数据库表主键 &ndash;&gt;-->
+<!--            <generatedKey column="vip_id" sqlStatement="Mysql" identity="true" />-->
+<!--        </table>-->
+    </context>
+</generatorConfiguration>
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Config/RedisDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Config/RedisDao.java	(date 1575825669955)
+++ integralmall/src/main/java/cn/armylife/integralmall/Config/RedisDao.java	(date 1575825669955)
@@ -0,0 +1,22 @@
+package cn.armylife.integralmall.Config;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.StringRedisTemplate;
+import org.springframework.data.redis.core.ValueOperations;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public class RedisDao {
+    @Autowired
+    private StringRedisTemplate template;
+
+    public  void setKey(String key, String value){
+        ValueOperations<String, String> ops = template.opsForValue();
+        ops.set(key,value);//1分钟过期
+    }
+
+    public String getValue(String key){
+        ValueOperations<String, String> ops = this.template.opsForValue();
+        return ops.get(key);
+    }
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Config/RedisConfig.java	(date 1575825669969)
+++ integralmall/src/main/java/cn/armylife/integralmall/Config/RedisConfig.java	(date 1575825669969)
@@ -0,0 +1,42 @@
+package cn.armylife.integralmall.Config;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.cache.annotation.EnableCaching;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+@Configuration
+@EnableCaching
+public class RedisConfig {
+    /**
+     * redisTemplate 序列化使用的jdkSerializeable, 存储二进制字节码, 所以自定义序列化类
+     * @param redisConnectionFactory
+     * @return
+     */
+    @Bean
+    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+
+        // 使用Jackson2JsonRedisSerialize 替换默认序列化
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+
+        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
+
+        // 设置value的序列化规则和 key的序列化规则
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Config/SessionConfig.java	(date 1575825669984)
+++ integralmall/src/main/java/cn/armylife/integralmall/Config/SessionConfig.java	(date 1575825669984)
@@ -0,0 +1,9 @@
+package cn.armylife.integralmall.Config;++import org.springframework.context.annotation.Configuration;+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;++@Configuration+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)+public class SessionConfig {+}Index: admin/src/main/java/cn/armylife/admin/AdminApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/src/main/java/cn/armylife/admin/AdminApplication.java	(date 1574474186823)
+++ admin/src/main/java/cn/armylife/admin/AdminApplication.java	(date 1574474186823)
@@ -0,0 +1,13 @@
+package cn.armylife.admin;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class AdminApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(AdminApplication.class, args);
+    }
+
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Config/FeignRequestIntercepter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Config/FeignRequestIntercepter.java	(date 1575825669998)
+++ integralmall/src/main/java/cn/armylife/integralmall/Config/FeignRequestIntercepter.java	(date 1575825669998)
@@ -0,0 +1,33 @@
+package cn.armylife.integralmall.Config;++import feign.RequestInterceptor;+import feign.RequestTemplate;+import org.springframework.stereotype.Component;+import org.springframework.web.context.request.RequestAttributes;+import org.springframework.web.context.request.RequestContextHolder;+import org.springframework.web.context.request.ServletRequestAttributes;++import javax.servlet.http.HttpServletRequest;+import java.util.Enumeration;+++@Component+public class FeignRequestIntercepter implements RequestInterceptor {+    @Override+    public void apply(RequestTemplate requestTemplate) {+//通过RequestContextHolder获取本地请求+        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();+        if (requestAttributes == null){+            return;+        }+//获取本地线程绑定的请求对象+        HttpServletRequest request = ((ServletRequestAttributes)requestAttributes).getRequest();+//给请求模板附加本地线程头部信息，主要是cookie信息+        Enumeration headerNames = request.getHeaderNames();+        while (headerNames.hasMoreElements()){+            String name = (String) headerNames.nextElement();+            requestTemplate.header(name,request.getHeader(name));+        }++    }+}Index: common/src/main/java/cn/armylife/common/Util/isAlid.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Util/isAlid.java	(date 1575472572371)
+++ common/src/main/java/cn/armylife/common/Util/isAlid.java	(date 1575472572371)
@@ -0,0 +1,22 @@
+package cn.armylife.common.Util;
+
+import cn.armylife.common.Domain.Alid;
+import org.springframework.stereotype.Component;
+
+import java.util.List;
+
+@Component
+public class isAlid {
+
+    private boolean isAlid(String code){
+        Alid alid=new Alid();
+        List<String> alids=alid.getAppId();
+        for (int i=0;i<alids.size();i++){
+            if (code.equals(alids.get(i))){
+                return true;
+            }
+            return false;
+        }
+        return false;
+    }
+}
Index: common/src/main/java/cn/armylife/common/Util/NumberID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Util/NumberID.java	(date 1574823025164)
+++ common/src/main/java/cn/armylife/common/Util/NumberID.java	(date 1574823025164)
@@ -0,0 +1,23 @@
+package cn.armylife.common.Util;
+
+import org.springframework.stereotype.Component;
+
+import java.util.UUID;
+
+@Component
+public class NumberID {
+
+    public static Long nextId(Integer port){
+        int machineId = port;//最大支持1-9个集群机器部署
+        int hashCodeV = UUID.randomUUID().toString().hashCode();
+        if(hashCodeV < 0) {//有可能是负数
+            hashCodeV = - hashCodeV;
+        }
+//         0 代表前面补充0     
+//         4 代表长度为4     
+//         d 代表参数为正数型
+        String num=machineId+ String.format("%010d", hashCodeV);
+        Long number=Long.valueOf(num);
+        return number;
+    }
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Service/IntegralMallService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Service/IntegralMallService.java	(date 1575884608176)
+++ integralmall/src/main/java/cn/armylife/integralmall/Service/IntegralMallService.java	(date 1575884608176)
@@ -0,0 +1,108 @@
+package cn.armylife.integralmall.Service;
+
+import cn.armylife.common.Domain.*;
+import com.github.pagehelper.Page;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+@Service
+@Transactional
+public interface IntegralMallService {
+
+    /**
+     * 添加用户初始积分数据
+     * @param integralUser
+     * @return
+     */
+    int integralUserinsert(IntegralUser integralUser);
+
+    /**
+     * 增加积分
+     * @param integral
+     * @param userId
+     * @return
+     */
+    int integralIncrease(Integer integral,Long userId);
+
+    /**
+     * 减少积分
+     * @param integral
+     * @param userId
+     * @return
+     */
+    int integralReduction(Integer integral,Long userId);
+
+    /**
+     * 通过用户Id查找用户积分
+     * @param userId
+     * @return
+     */
+    IntegralUser findUserIntegral(Long userId);
+
+    /**
+     * 通过积分商品Id获取积分商品信息
+     * @param pointsMallProductsId
+     * @return
+     */
+    PointsMallProducts findMallProducts(Long pointsMallProductsId);
+
+
+    /**
+     * 添加商品兑换记录
+     * @param record
+     * @return
+     */
+    Long exchangeRecordinsert(PointsExchangeRecord record);
+
+    /**
+     * 通过Id查询商品规格信息
+     * @param productDetailId
+     * @return
+     */
+    MallProductsDetail findProductForDetail(Long productDetailId);
+
+    /**
+     * 查询所有商城分类
+     * @return
+     */
+    List<MallArea> mallareaselectAll();
+
+    /**
+     * 通过分区Id查看商品
+     * @param respectiveArea
+     * @return
+     */
+    Page<PointsMallProducts> findProductForArea(Long respectiveArea);
+
+    /**
+     * 查询兑换记录
+     * @param userId
+     * @return
+     */
+    Page<PointsExchangeRecord> findExchangeRecord(Long userId);
+
+    /**
+     * 通过商品Id查询信息
+     * @param productId
+     * @return
+     */
+    PointsMallProducts findProductForProductId(Long productId);
+
+    /**
+     * 通过Id查询兑换记录
+     * @param pointsExchangeRecordId
+     * @return
+     */
+    PointsExchangeRecord findExchangeRecordForId(Long pointsExchangeRecordId);
+
+    /**
+     * 添加支付记录
+     * @param payments
+     * @return
+     */
+    int paymentsinsert(Payments payments);
+
+
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Controller/IntegralMallContreoller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Controller/IntegralMallContreoller.java	(date 1575974651011)
+++ integralmall/src/main/java/cn/armylife/integralmall/Controller/IntegralMallContreoller.java	(date 1575974651011)
@@ -0,0 +1,179 @@
+package cn.armylife.integralmall.Controller;
+
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.common.Util.NumberID;
+import cn.armylife.integralmall.Service.IntegralMallService;
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+import java.util.List;
+
+@Controller
+public class IntegralMallContreoller {
+
+    Logger logger= LoggerFactory.getLogger(IntegralMallContreoller.class);
+
+    @Autowired IntegralMallService integralMallService;
+
+    @Value("${server.port}")
+    Integer port;
+
+    @RequestMapping("registerIntegral")
+    @ResponseBody
+    public int registerIntegral(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        IntegralUser integralUser=new IntegralUser();
+        integralUser.setUserId(member.getMemberId());
+        integralUser.setIntegral(0);
+        return integralMallService.integralUserinsert(integralUser);
+    }
+
+    /**
+     * 积分增加
+     * @param integral
+     * @param request
+     * @return
+     */
+    @RequestMapping("integralIncrease")
+    @ResponseBody
+    public int integralIncrease(Integer integral, HttpServletRequest request){
+        logger.info(integral+"uiuiui");
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        IntegralUser integralUser=new IntegralUser();
+        integralUser.setUserId(member.getMemberId());
+        integralUser.setIntegral(integral);
+        return integralMallService.integralIncrease(integral,member.getMemberId());
+    }
+
+    /**
+     * 积分减少
+     * @param integral
+     * @param request
+     * @return
+     */
+    @RequestMapping("integralReduction")
+    @ResponseBody
+    public int integralReduction(Integer integral, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        return integralMallService.integralReduction(integral,member.getMemberId());
+    }
+
+    /**
+     * 通过用户Id查找用户积分findUserIntegral
+     * @param request
+     * @return
+     */
+    @RequestMapping("findUserIntegral")
+    @ResponseBody
+    public Integer findUserIntegral(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        IntegralUser integralUser=integralMallService.findUserIntegral(member.getMemberId());
+        return integralUser.getIntegral();
+    };
+
+    /**
+     * 添加兑换记录(订单)
+     * @param pointsMallProductsId
+     * @param request
+     * @return
+     */
+    @RequestMapping("convertedCommodities")
+    @ResponseBody
+    public Long convertedCommodities(Long pointsMallProductsId,
+                                     PointsExchangeRecord pointsExchangeRecord,
+                                     Long productDetail,
+                                     HttpServletRequest request) {
+        HttpSession session = request.getSession();
+        Member member = (Member) session.getAttribute("Student");
+        PointsMallProducts product = integralMallService.findMallProducts(pointsMallProductsId);
+        Integer userIntegral=this.findUserIntegral(request);
+        if (userIntegral<product.getUsingIntegral()){
+            return 0L;
+        }
+        Long int1=NumberID.nextId(port);
+        pointsExchangeRecord.setPointsExchangeRecordId(int1);
+        pointsExchangeRecord.setUsingIntegral(product.getUsingIntegral());//兑换使用积分
+        pointsExchangeRecord.setUsageAmount(product.getUsageAmount());//兑换使用金额
+        pointsExchangeRecord.setUserId(member.getMemberId());
+        pointsExchangeRecord.setItemsExchanged(product.getTradeName());//兑换商品名称
+        pointsExchangeRecord.setProductId(pointsMallProductsId);
+        pointsExchangeRecord.setProductDetailId(productDetail);
+        Long recordId = integralMallService.exchangeRecordinsert(pointsExchangeRecord);//添加兑换记录
+        integralMallService.integralReduction(product.getUsingIntegral(), member.getMemberId());//增加积分
+        return int1;
+    }
+
+    /**
+     * 查询所有商品分类
+     * @return
+     */
+    @RequestMapping("mallAreaSelectAll")
+    @ResponseBody
+    public List<MallArea> mallareaselectAll(){
+        return integralMallService.mallareaselectAll();
+    };
+
+    /**
+     * 通过分区Id查看商品
+     * @param respectiveArea
+     * @return
+     */
+    @RequestMapping("findProductForArea")
+    @ResponseBody
+    public PageInfo<PointsMallProducts> findProductForArea(Long respectiveArea,int pageNum){
+        PageHelper.startPage(pageNum, 10);
+        PageInfo<PointsMallProducts> pageInfo=new PageInfo<>(integralMallService.findProductForArea(respectiveArea));
+        return pageInfo;
+    };
+
+    /**
+     * 查询兑换记录
+     * @param request
+     * @return
+     */
+    @RequestMapping("findExchangeRecord")
+    @ResponseBody
+    public PageInfo<PointsExchangeRecord> findExchangeRecord(HttpServletRequest request,int pageNum){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        PageHelper.startPage(pageNum, 10);
+        PageInfo<PointsExchangeRecord> pageInfo=new PageInfo<>(integralMallService.findExchangeRecord(member.getMemberId()));
+        return pageInfo;
+    };
+
+    /**
+     * 通过商品Id查询信息
+     * @param productId
+     * @return
+     */
+        @RequestMapping("findProductForProductId")
+    @ResponseBody
+    public PointsMallProducts findProductForProductId(Long productId){
+        return integralMallService.findProductForProductId(productId);
+    };
+
+    /**
+     * 通过商品Id查询规格
+     * @param productDetailId
+     * @return
+     */
+    @RequestMapping("findProductForDetail")
+    @ResponseBody
+    public MallProductsDetail findProductForDetail(Long productDetailId){
+        return integralMallService.findProductForDetail(productDetailId);
+    };
+}
Index: admin/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- admin/src/main/resources/application.properties	(date 1574474077739)
+++ admin/src/main/resources/application.properties	(date 1574474077739)
@@ -0,0 +1,1 @@
+
Index: common/src/main/java/cn/armylife/common/Domain/OrderDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/OrderDetail.java	(date 1575563664889)
+++ common/src/main/java/cn/armylife/common/Domain/OrderDetail.java	(date 1575563664889)
@@ -0,0 +1,361 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class OrderDetail implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_detail_id
+     *
+     * @mbggenerated
+     */
+    private Long orderDetailId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_id
+     *
+     * @mbggenerated
+     */
+    private Long orderId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_detail_name
+     *
+     * @mbggenerated
+     */
+    private String orderDetailName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_detail_png
+     *
+     * @mbggenerated
+     */
+    private String orderDetailPng;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_detail_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal orderDetailTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_detail_num
+     *
+     * @mbggenerated
+     */
+    private Integer orderDetailNum;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_express_name
+     *
+     * @mbggenerated
+     */
+    private String orderExpressName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_express_phone
+     *
+     * @mbggenerated
+     */
+    private String orderExpressPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_express_num
+     *
+     * @mbggenerated
+     */
+    private String orderExpressNum;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column order_detail.order_express_desc
+     *
+     * @mbggenerated
+     */
+    private String orderExpressDesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_detail_id
+     *
+     * @return the value of order_detail.order_detail_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrderDetailId() {
+        return orderDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_detail_id
+     *
+     * @param orderDetailId the value for order_detail.order_detail_id
+     *
+     * @mbggenerated
+     */
+    public void setOrderDetailId(Long orderDetailId) {
+        this.orderDetailId = orderDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_id
+     *
+     * @return the value of order_detail.order_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrderId() {
+        return orderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_id
+     *
+     * @param orderId the value for order_detail.order_id
+     *
+     * @mbggenerated
+     */
+    public void setOrderId(Long orderId) {
+        this.orderId = orderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_detail_name
+     *
+     * @return the value of order_detail.order_detail_name
+     *
+     * @mbggenerated
+     */
+    public String getOrderDetailName() {
+        return orderDetailName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_detail_name
+     *
+     * @param orderDetailName the value for order_detail.order_detail_name
+     *
+     * @mbggenerated
+     */
+    public void setOrderDetailName(String orderDetailName) {
+        this.orderDetailName = orderDetailName == null ? null : orderDetailName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_detail_png
+     *
+     * @return the value of order_detail.order_detail_png
+     *
+     * @mbggenerated
+     */
+    public String getOrderDetailPng() {
+        return orderDetailPng;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_detail_png
+     *
+     * @param orderDetailPng the value for order_detail.order_detail_png
+     *
+     * @mbggenerated
+     */
+    public void setOrderDetailPng(String orderDetailPng) {
+        this.orderDetailPng = orderDetailPng == null ? null : orderDetailPng.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_detail_total
+     *
+     * @return the value of order_detail.order_detail_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getOrderDetailTotal() {
+        return orderDetailTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_detail_total
+     *
+     * @param orderDetailTotal the value for order_detail.order_detail_total
+     *
+     * @mbggenerated
+     */
+    public void setOrderDetailTotal(BigDecimal orderDetailTotal) {
+        this.orderDetailTotal = orderDetailTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_detail_num
+     *
+     * @return the value of order_detail.order_detail_num
+     *
+     * @mbggenerated
+     */
+    public Integer getOrderDetailNum() {
+        return orderDetailNum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_detail_num
+     *
+     * @param orderDetailNum the value for order_detail.order_detail_num
+     *
+     * @mbggenerated
+     */
+    public void setOrderDetailNum(Integer orderDetailNum) {
+        this.orderDetailNum = orderDetailNum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_express_name
+     *
+     * @return the value of order_detail.order_express_name
+     *
+     * @mbggenerated
+     */
+    public String getOrderExpressName() {
+        return orderExpressName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_express_name
+     *
+     * @param orderExpressName the value for order_detail.order_express_name
+     *
+     * @mbggenerated
+     */
+    public void setOrderExpressName(String orderExpressName) {
+        this.orderExpressName = orderExpressName == null ? null : orderExpressName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_express_phone
+     *
+     * @return the value of order_detail.order_express_phone
+     *
+     * @mbggenerated
+     */
+    public String getOrderExpressPhone() {
+        return orderExpressPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_express_phone
+     *
+     * @param orderExpressPhone the value for order_detail.order_express_phone
+     *
+     * @mbggenerated
+     */
+    public void setOrderExpressPhone(String orderExpressPhone) {
+        this.orderExpressPhone = orderExpressPhone == null ? null : orderExpressPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_express_num
+     *
+     * @return the value of order_detail.order_express_num
+     *
+     * @mbggenerated
+     */
+    public String getOrderExpressNum() {
+        return orderExpressNum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_express_num
+     *
+     * @param orderExpressNum the value for order_detail.order_express_num
+     *
+     * @mbggenerated
+     */
+    public void setOrderExpressNum(String orderExpressNum) {
+        this.orderExpressNum = orderExpressNum == null ? null : orderExpressNum.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column order_detail.order_express_desc
+     *
+     * @return the value of order_detail.order_express_desc
+     *
+     * @mbggenerated
+     */
+    public String getOrderExpressDesc() {
+        return orderExpressDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column order_detail.order_express_desc
+     *
+     * @param orderExpressDesc the value for order_detail.order_express_desc
+     *
+     * @mbggenerated
+     */
+    public void setOrderExpressDesc(String orderExpressDesc) {
+        this.orderExpressDesc = orderExpressDesc == null ? null : orderExpressDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", orderDetailId=").append(orderDetailId);
+        sb.append(", orderId=").append(orderId);
+        sb.append(", orderDetailName=").append(orderDetailName);
+        sb.append(", orderDetailPng=").append(orderDetailPng);
+        sb.append(", orderDetailTotal=").append(orderDetailTotal);
+        sb.append(", orderDetailNum=").append(orderDetailNum);
+        sb.append(", orderExpressName=").append(orderExpressName);
+        sb.append(", orderExpressPhone=").append(orderExpressPhone);
+        sb.append(", orderExpressNum=").append(orderExpressNum);
+        sb.append(", orderExpressDesc=").append(orderExpressDesc);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Payments.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Payments.java	(date 1575379300678)
+++ common/src/main/java/cn/armylife/common/Domain/Payments.java	(date 1575379300678)
@@ -0,0 +1,570 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class Payments implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.payments_id
+     *
+     * @mbggenerated
+     */
+    private Long paymentsId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.order_id
+     *
+     * @mbggenerated
+     */
+    private Long orderId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_name
+     *
+     * @mbggenerated
+     */
+    private Long payName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.receiv_name
+     *
+     * @mbggenerated
+     */
+    private Long receivName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal payTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_desc
+     *
+     * @mbggenerated
+     */
+    private String payDesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_status
+     *
+     * @mbggenerated
+     */
+    private String payStatus;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_order
+     *
+     * @mbggenerated
+     */
+    private Long payOrder;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_number
+     *
+     * @mbggenerated
+     */
+    private String payNumber;
+
+    private String payApp;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.end_time
+     *
+     * @mbggenerated
+     */
+    private String endTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.pay_refund
+     *
+     * @mbggenerated
+     */
+    private Integer payRefund;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.refund_desc
+     *
+     * @mbggenerated
+     */
+    private String refundDesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.refund_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal refundTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.refuns_time
+     *
+     * @mbggenerated
+     */
+    private String refunsTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column payments.refunds_bumber
+     *
+     * @mbggenerated
+     */
+    private String refundsNumber;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.payments_id
+     *
+     * @return the value of payments.payments_id
+     *
+     * @mbggenerated
+     */
+    public Long getPaymentsId() {
+        return paymentsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.payments_id
+     *
+     * @param paymentsId the value for payments.payments_id
+     *
+     * @mbggenerated
+     */
+    public void setPaymentsId(Long paymentsId) {
+        this.paymentsId = paymentsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.order_id
+     *
+     * @return the value of payments.order_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrderId() {
+        return orderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.order_id
+     *
+     * @param orderId the value for payments.order_id
+     *
+     * @mbggenerated
+     */
+    public void setOrderId(Long orderId) {
+        this.orderId = orderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_name
+     *
+     * @return the value of payments.pay_name
+     *
+     * @mbggenerated
+     */
+    public Long getPayName() {
+        return payName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_name
+     *
+     * @param payName the value for payments.pay_name
+     *
+     * @mbggenerated
+     */
+    public void setPayName(Long payName) {
+        this.payName = payName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.receiv_name
+     *
+     * @return the value of payments.receiv_name
+     *
+     * @mbggenerated
+     */
+    public Long getReceivName() {
+        return receivName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.receiv_name
+     *
+     * @param receivName the value for payments.receiv_name
+     *
+     * @mbggenerated
+     */
+    public void setReceivName(Long receivName) {
+        this.receivName = receivName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_total
+     *
+     * @return the value of payments.pay_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getPayTotal() {
+        return payTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_total
+     *
+     * @param payTotal the value for payments.pay_total
+     *
+     * @mbggenerated
+     */
+    public void setPayTotal(BigDecimal payTotal) {
+        this.payTotal = payTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_desc
+     *
+     * @return the value of payments.pay_desc
+     *
+     * @mbggenerated
+     */
+    public String getPayDesc() {
+        return payDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_desc
+     *
+     * @param payDesc the value for payments.pay_desc
+     *
+     * @mbggenerated
+     */
+    public void setPayDesc(String payDesc) {
+        this.payDesc = payDesc == null ? null : payDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_status
+     *
+     * @return the value of payments.pay_status
+     *
+     * @mbggenerated
+     */
+    public String getPayStatus() {
+        return payStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_status
+     *
+     * @param payStatus the value for payments.pay_status
+     *
+     * @mbggenerated
+     */
+    public void setPayStatus(String payStatus) {
+        this.payStatus = payStatus == null ? null : payStatus.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_order
+     *
+     * @return the value of payments.pay_order
+     *
+     * @mbggenerated
+     */
+    public Long getPayOrder() {
+        return payOrder;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_order
+     *
+     * @param payOrder the value for payments.pay_order
+     *
+     * @mbggenerated
+     */
+    public void setPayOrder(Long payOrder) {
+        this.payOrder = payOrder;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_number
+     *
+     * @return the value of payments.pay_number
+     *
+     * @mbggenerated
+     */
+    public String getPayNumber() {
+        return payNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_number
+     *
+     * @param payNumber the value for payments.pay_number
+     *
+     * @mbggenerated
+     */
+    public void setPayNumber(String payNumber) {
+        this.payNumber = payNumber == null ? null : payNumber.trim();
+    }
+
+    public String getPayApp() {
+        return payApp;
+    }
+
+    public void setPayApp(String payApp) {
+        this.payApp = payApp;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.creat_time
+     *
+     * @return the value of payments.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.creat_time
+     *
+     * @param creatTime the value for payments.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.end_time
+     *
+     * @return the value of payments.end_time
+     *
+     * @mbggenerated
+     */
+    public String getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.end_time
+     *
+     * @param endTime the value for payments.end_time
+     *
+     * @mbggenerated
+     */
+    public void setEndTime(String endTime) {
+        this.endTime = endTime == null ? null : endTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.pay_refund
+     *
+     * @return the value of payments.pay_refund
+     *
+     * @mbggenerated
+     */
+    public Integer getPayRefund() {
+        return payRefund;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.pay_refund
+     *
+     * @param payRefund the value for payments.pay_refund
+     *
+     * @mbggenerated
+     */
+    public void setPayRefund(Integer payRefund) {
+        this.payRefund = payRefund;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.refund_desc
+     *
+     * @return the value of payments.refund_desc
+     *
+     * @mbggenerated
+     */
+    public String getRefundDesc() {
+        return refundDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.refund_desc
+     *
+     * @param refundDesc the value for payments.refund_desc
+     *
+     * @mbggenerated
+     */
+    public void setRefundDesc(String refundDesc) {
+        this.refundDesc = refundDesc == null ? null : refundDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.refund_total
+     *
+     * @return the value of payments.refund_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getRefundTotal() {
+        return refundTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.refund_total
+     *
+     * @param refundTotal the value for payments.refund_total
+     *
+     * @mbggenerated
+     */
+    public void setRefundTotal(BigDecimal refundTotal) {
+        this.refundTotal = refundTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.refuns_time
+     *
+     * @return the value of payments.refuns_time
+     *
+     * @mbggenerated
+     */
+    public String getRefunsTime() {
+        return refunsTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.refuns_time
+     *
+     * @param refunsTime the value for payments.refuns_time
+     *
+     * @mbggenerated
+     */
+    public void setRefunsTime(String refunsTime) {
+        this.refunsTime = refunsTime == null ? null : refunsTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column payments.refunds_bumber
+     *
+     * @return the value of payments.refunds_bumber
+     *
+     * @mbggenerated
+     */
+    public String getRefundsNumber() {
+        return refundsNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column payments.refunds_bumber
+     *
+     * @param refundsBumber the value for payments.refunds_bumber
+     *
+     * @mbggenerated
+     */
+    public void setRefundsNumber(String refundsNumber) {
+        this.refundsNumber = refundsNumber == null ? null : refundsNumber.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", paymentsId=").append(paymentsId);
+        sb.append(", orderId=").append(orderId);
+        sb.append(", payName=").append(payName);
+        sb.append(", receivName=").append(receivName);
+        sb.append(", payTotal=").append(payTotal);
+        sb.append(", payDesc=").append(payDesc);
+        sb.append(", payStatus=").append(payStatus);
+        sb.append(", payOrder=").append(payOrder);
+        sb.append(", payNumber=").append(payNumber);
+        sb.append(", payApp=").append(payApp);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", endTime=").append(endTime);
+        sb.append(", payRefund=").append(payRefund);
+        sb.append(", refundDesc=").append(refundDesc);
+        sb.append(", refundTotal=").append(refundTotal);
+        sb.append(", refunsTime=").append(refunsTime);
+        sb.append(", refundsNumber=").append(refundsNumber);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Transactions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Transactions.java	(date 1575426796321)
+++ common/src/main/java/cn/armylife/common/Domain/Transactions.java	(date 1575426796321)
@@ -0,0 +1,262 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class Transactions implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.tranactions_id
+     *
+     * @mbggenerated
+     */
+    private Long tranactionsId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.pay_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal payTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.pay_desc
+     *
+     * @mbggenerated
+     */
+    private String payDesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.pay_user
+     *
+     * @mbggenerated
+     */
+    private Long payUser;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.pay_wechatnum
+     *
+     * @mbggenerated
+     */
+    private String payWechatnum;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column transactions.end_time
+     *
+     * @mbggenerated
+     */
+    private String endTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.tranactions_id
+     *
+     * @return the value of transactions.tranactions_id
+     *
+     * @mbggenerated
+     */
+    public Long getTranactionsId() {
+        return tranactionsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.tranactions_id
+     *
+     * @param tranactionsId the value for transactions.tranactions_id
+     *
+     * @mbggenerated
+     */
+    public void setTranactionsId(Long tranactionsId) {
+        this.tranactionsId = tranactionsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.pay_total
+     *
+     * @return the value of transactions.pay_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getPayTotal() {
+        return payTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.pay_total
+     *
+     * @param payTotal the value for transactions.pay_total
+     *
+     * @mbggenerated
+     */
+    public void setPayTotal(BigDecimal payTotal) {
+        this.payTotal = payTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.pay_desc
+     *
+     * @return the value of transactions.pay_desc
+     *
+     * @mbggenerated
+     */
+    public String getPayDesc() {
+        return payDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.pay_desc
+     *
+     * @param payDesc the value for transactions.pay_desc
+     *
+     * @mbggenerated
+     */
+    public void setPayDesc(String payDesc) {
+        this.payDesc = payDesc == null ? null : payDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.pay_user
+     *
+     * @return the value of transactions.pay_user
+     *
+     * @mbggenerated
+     */
+    public Long getPayUser() {
+        return payUser;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.pay_user
+     *
+     * @param payUser the value for transactions.pay_user
+     *
+     * @mbggenerated
+     */
+    public void setPayUser(Long payUser) {
+        this.payUser = payUser;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.pay_wechatnum
+     *
+     * @return the value of transactions.pay_wechatnum
+     *
+     * @mbggenerated
+     */
+    public String getPayWechatnum() {
+        return payWechatnum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.pay_wechatnum
+     *
+     * @param payWechatnum the value for transactions.pay_wechatnum
+     *
+     * @mbggenerated
+     */
+    public void setPayWechatnum(String payWechatnum) {
+        this.payWechatnum = payWechatnum == null ? null : payWechatnum.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.creat_time
+     *
+     * @return the value of transactions.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.creat_time
+     *
+     * @param creatTime the value for transactions.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column transactions.end_time
+     *
+     * @return the value of transactions.end_time
+     *
+     * @mbggenerated
+     */
+    public String getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column transactions.end_time
+     *
+     * @param endTime the value for transactions.end_time
+     *
+     * @mbggenerated
+     */
+    public void setEndTime(String endTime) {
+        this.endTime = endTime == null ? null : endTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", tranactionsId=").append(tranactionsId);
+        sb.append(", payTotal=").append(payTotal);
+        sb.append(", payDesc=").append(payDesc);
+        sb.append(", payUser=").append(payUser);
+        sb.append(", payWechatnum=").append(payWechatnum);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", endTime=").append(endTime);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Vip.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Vip.java	(date 1575275863779)
+++ common/src/main/java/cn/armylife/common/Domain/Vip.java	(date 1575275863779)
@@ -0,0 +1,228 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+
+public class Vip implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.vip_id
+     *
+     * @mbggenerated
+     */
+    private Long vipId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.user_id
+     *
+     * @mbggenerated
+     */
+    private Long userId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.group_number
+     *
+     * @mbggenerated
+     */
+    private Integer groupNumber;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.user_name
+     *
+     * @mbggenerated
+     */
+    private String userName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column vip.number
+     *
+     * @mbggenerated
+     */
+    private String number;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table vip
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.vip_id
+     *
+     * @return the value of vip.vip_id
+     *
+     * @mbggenerated
+     */
+    public Long getVipId() {
+        return vipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.vip_id
+     *
+     * @param vipId the value for vip.vip_id
+     *
+     * @mbggenerated
+     */
+    public void setVipId(Long vipId) {
+        this.vipId = vipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.user_id
+     *
+     * @return the value of vip.user_id
+     *
+     * @mbggenerated
+     */
+    public Long getUserId() {
+        return userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.user_id
+     *
+     * @param userId the value for vip.user_id
+     *
+     * @mbggenerated
+     */
+    public void setUserId(Long userId) {
+        this.userId = userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.group_number
+     *
+     * @return the value of vip.group_number
+     *
+     * @mbggenerated
+     */
+    public Integer getGroupNumber() {
+        return groupNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.group_number
+     *
+     * @param groupNumber the value for vip.group_number
+     *
+     * @mbggenerated
+     */
+    public void setGroupNumber(Integer groupNumber) {
+        this.groupNumber = groupNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.user_name
+     *
+     * @return the value of vip.user_name
+     *
+     * @mbggenerated
+     */
+    public String getUserName() {
+        return userName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.user_name
+     *
+     * @param userName the value for vip.user_name
+     *
+     * @mbggenerated
+     */
+    public void setUserName(String userName) {
+        this.userName = userName == null ? null : userName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.creat_time
+     *
+     * @return the value of vip.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.creat_time
+     *
+     * @param creatTime the value for vip.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column vip.number
+     *
+     * @return the value of vip.number
+     *
+     * @mbggenerated
+     */
+    public String getNumber() {
+        return number;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column vip.number
+     *
+     * @param number the value for vip.number
+     *
+     * @mbggenerated
+     */
+    public void setNumber(String number) {
+        this.number = number == null ? null : number.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table vip
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", vipId=").append(vipId);
+        sb.append(", userId=").append(userId);
+        sb.append(", groupNumber=").append(groupNumber);
+        sb.append(", userName=").append(userName);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", number=").append(number);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/AfterOrderDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/AfterOrderDetail.java	(date 1575797444063)
+++ common/src/main/java/cn/armylife/common/Domain/AfterOrderDetail.java	(date 1575797444063)
@@ -0,0 +1,229 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class AfterOrderDetail implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_detail_id
+     *
+     * @mbggenerated
+     */
+    private Long afterOrderDetailId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_id
+     *
+     * @mbggenerated
+     */
+    private Long afterOrderId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_name
+     *
+     * @mbggenerated
+     */
+    private String afterOrderName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_num
+     *
+     * @mbggenerated
+     */
+    private String afterOrderNum;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_png
+     *
+     * @mbggenerated
+     */
+    private String afterOrderPng;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order_detail.after_order_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal afterOrderTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table after_order_detail
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_detail_id
+     *
+     * @return the value of after_order_detail.after_order_detail_id
+     *
+     * @mbggenerated
+     */
+    public Long getAfterOrderDetailId() {
+        return afterOrderDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_detail_id
+     *
+     * @param afterOrderDetailId the value for after_order_detail.after_order_detail_id
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderDetailId(Long afterOrderDetailId) {
+        this.afterOrderDetailId = afterOrderDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_id
+     *
+     * @return the value of after_order_detail.after_order_id
+     *
+     * @mbggenerated
+     */
+    public Long getAfterOrderId() {
+        return afterOrderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_id
+     *
+     * @param afterOrderId the value for after_order_detail.after_order_id
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderId(Long afterOrderId) {
+        this.afterOrderId = afterOrderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_name
+     *
+     * @return the value of after_order_detail.after_order_name
+     *
+     * @mbggenerated
+     */
+    public String getAfterOrderName() {
+        return afterOrderName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_name
+     *
+     * @param afterOrderName the value for after_order_detail.after_order_name
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderName(String afterOrderName) {
+        this.afterOrderName = afterOrderName == null ? null : afterOrderName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_num
+     *
+     * @return the value of after_order_detail.after_order_num
+     *
+     * @mbggenerated
+     */
+    public String getAfterOrderNum() {
+        return afterOrderNum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_num
+     *
+     * @param afterOrderNum the value for after_order_detail.after_order_num
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderNum(String afterOrderNum) {
+        this.afterOrderNum = afterOrderNum == null ? null : afterOrderNum.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_png
+     *
+     * @return the value of after_order_detail.after_order_png
+     *
+     * @mbggenerated
+     */
+    public String getAfterOrderPng() {
+        return afterOrderPng;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_png
+     *
+     * @param afterOrderPng the value for after_order_detail.after_order_png
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderPng(String afterOrderPng) {
+        this.afterOrderPng = afterOrderPng == null ? null : afterOrderPng.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order_detail.after_order_total
+     *
+     * @return the value of after_order_detail.after_order_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getAfterOrderTotal() {
+        return afterOrderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order_detail.after_order_total
+     *
+     * @param afterOrderTotal the value for after_order_detail.after_order_total
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderTotal(BigDecimal afterOrderTotal) {
+        this.afterOrderTotal = afterOrderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order_detail
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", afterOrderDetailId=").append(afterOrderDetailId);
+        sb.append(", afterOrderId=").append(afterOrderId);
+        sb.append(", afterOrderName=").append(afterOrderName);
+        sb.append(", afterOrderNum=").append(afterOrderNum);
+        sb.append(", afterOrderPng=").append(afterOrderPng);
+        sb.append(", afterOrderTotal=").append(afterOrderTotal);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/ShopOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/ShopOrder.java	(date 1575979206337)
+++ common/src/main/java/cn/armylife/common/Domain/ShopOrder.java	(date 1575979206337)
@@ -0,0 +1,734 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.Date;
+import java.util.List;
+
+public class ShopOrder implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_id
+     *
+     * @mbggenerated
+     */
+    private Long ordersId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_type
+     *
+     * @mbggenerated
+     */
+    private Integer ordersType;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_people
+     *
+     * @mbggenerated
+     */
+    private Integer ordersPeople;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.appintment
+     *
+     * @mbggenerated
+     */
+    private String appintment;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.product_id
+     *
+     * @mbggenerated
+     */
+    private String productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.first_product
+     *
+     * @mbggenerated
+     */
+    private String firstProduct;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_reserve
+     *
+     * @mbggenerated
+     */
+    private String ordersReserve;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.reserve_number
+     *
+     * @mbggenerated
+     */
+    private Long reserveNumber;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.shop_id
+     *
+     * @mbggenerated
+     */
+    private Long shopId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.stu_id
+     *
+     * @mbggenerated
+     */
+    private Long stuId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.isdelivery
+     *
+     * @mbggenerated
+     */
+    private Integer isdelivery;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_address
+     *
+     * @mbggenerated
+     */
+    private String ordersAddress;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.user_phone
+     *
+     * @mbggenerated
+     */
+    private String userPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_desc
+     *
+     * @mbggenerated
+     */
+    private String ordersDesc;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.end_time
+     *
+     * @mbggenerated
+     */
+    private Date endTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.orders_status
+     *
+     * @mbggenerated
+     */
+    private String ordersStatus;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.order_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal orderTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal deliveryTotal;
+
+    private Member member;
+    private AfterOrder afterOrder;
+    private DeliveryOrder deliveryOrder;
+    private String avator;
+    private List<Product> products;
+    private String memberName;
+    private  int isexpress;
+
+    public int getIsexpress() {
+        return isexpress;
+    }
+
+    public void setIsexpress(int isexpress) {
+        this.isexpress = isexpress;
+    }
+
+    public String getMemberName() {
+        return memberName;
+    }
+
+    public void setMemberName(String memberName) {
+        this.memberName = memberName;
+    }
+
+    private List<OrderDetail> orderDetail;
+
+    public List<OrderDetail> getOrderDetail() {
+        return orderDetail;
+    }
+
+    public void setOrderDetail(List<OrderDetail> orderDetail) {
+        this.orderDetail = orderDetail;
+    }
+
+    public List<Product> getProducts() {
+        return products;
+    }
+
+    public void setProducts(List<Product> products) {
+        this.products = products;
+    }
+
+    public String getAvator() {
+        return avator;
+    }
+
+    public void setAvator(String avator) {
+        this.avator = avator;
+    }
+
+    public Member getMember() {
+        return member;
+    }
+
+    public void setMember(Member member) {
+        this.member = member;
+    }
+
+    public AfterOrder getAfterOrder() {
+        return afterOrder;
+    }
+
+    public void setAfterOrder(AfterOrder afterOrder) {
+        this.afterOrder = afterOrder;
+    }
+
+    public DeliveryOrder getDeliveryOrder() {
+        return deliveryOrder;
+    }
+
+    public void setDeliveryOrder(DeliveryOrder deliveryOrder) {
+        this.deliveryOrder = deliveryOrder;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_id
+     *
+     * @return the value of shop_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrdersId() {
+        return ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_id
+     *
+     * @param ordersId the value for shop_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public void setOrdersId(Long ordersId) {
+        this.ordersId = ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_type
+     *
+     * @return the value of shop_order.orders_type
+     *
+     * @mbggenerated
+     */
+    public Integer getOrdersType() {
+        return ordersType;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_type
+     *
+     * @param ordersType the value for shop_order.orders_type
+     *
+     * @mbggenerated
+     */
+    public void setOrdersType(Integer ordersType) {
+        this.ordersType = ordersType;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_people
+     *
+     * @return the value of shop_order.orders_people
+     *
+     * @mbggenerated
+     */
+    public Integer getOrdersPeople() {
+        return ordersPeople;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_people
+     *
+     * @param ordersPeople the value for shop_order.orders_people
+     *
+     * @mbggenerated
+     */
+    public void setOrdersPeople(Integer ordersPeople) {
+        this.ordersPeople = ordersPeople;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.appintment
+     *
+     * @return the value of shop_order.appintment
+     *
+     * @mbggenerated
+     */
+    public String getAppintment() {
+        return appintment;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.appintment
+     *
+     * @param appintment the value for shop_order.appintment
+     *
+     * @mbggenerated
+     */
+    public void setAppintment(String appintment) {
+        this.appintment = appintment == null ? null : appintment.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.product_id
+     *
+     * @return the value of shop_order.product_id
+     *
+     * @mbggenerated
+     */
+    public String getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.product_id
+     *
+     * @param productId the value for shop_order.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(String productId) {
+        this.productId = productId == null ? null : productId.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.first_product
+     *
+     * @return the value of shop_order.first_product
+     *
+     * @mbggenerated
+     */
+    public String getFirstProduct() {
+        return firstProduct;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.first_product
+     *
+     * @param firstProduct the value for shop_order.first_product
+     *
+     * @mbggenerated
+     */
+    public void setFirstProduct(String firstProduct) {
+        this.firstProduct = firstProduct == null ? null : firstProduct.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_reserve
+     *
+     * @return the value of shop_order.orders_reserve
+     *
+     * @mbggenerated
+     */
+    public String getOrdersReserve() {
+        return ordersReserve;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_reserve
+     *
+     * @param ordersReserve the value for shop_order.orders_reserve
+     *
+     * @mbggenerated
+     */
+    public void setOrdersReserve(String ordersReserve) {
+        this.ordersReserve = ordersReserve == null ? null : ordersReserve.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.reserve_number
+     *
+     * @return the value of shop_order.reserve_number
+     *
+     * @mbggenerated
+     */
+    public Long getReserveNumber() {
+        return reserveNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.reserve_number
+     *
+     * @param reserveNumber the value for shop_order.reserve_number
+     *
+     * @mbggenerated
+     */
+    public void setReserveNumber(Long reserveNumber) {
+        this.reserveNumber = reserveNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.shop_id
+     *
+     * @return the value of shop_order.shop_id
+     *
+     * @mbggenerated
+     */
+    public Long getShopId() {
+        return shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.shop_id
+     *
+     * @param shopId the value for shop_order.shop_id
+     *
+     * @mbggenerated
+     */
+    public void setShopId(Long shopId) {
+        this.shopId = shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.stu_id
+     *
+     * @return the value of shop_order.stu_id
+     *
+     * @mbggenerated
+     */
+    public Long getStuId() {
+        return stuId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.stu_id
+     *
+     * @param stuId the value for shop_order.stu_id
+     *
+     * @mbggenerated
+     */
+    public void setStuId(Long stuId) {
+        this.stuId = stuId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.isdelivery
+     *
+     * @return the value of shop_order.isdelivery
+     *
+     * @mbggenerated
+     */
+    public Integer getIsdelivery() {
+        return isdelivery;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.isdelivery
+     *
+     * @param isdelivery the value for shop_order.isdelivery
+     *
+     * @mbggenerated
+     */
+    public void setIsdelivery(Integer isdelivery) {
+        this.isdelivery = isdelivery;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_address
+     *
+     * @return the value of shop_order.orders_address
+     *
+     * @mbggenerated
+     */
+    public String getOrdersAddress() {
+        return ordersAddress;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_address
+     *
+     * @param ordersAddress the value for shop_order.orders_address
+     *
+     * @mbggenerated
+     */
+    public void setOrdersAddress(String ordersAddress) {
+        this.ordersAddress = ordersAddress == null ? null : ordersAddress.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.user_phone
+     *
+     * @return the value of shop_order.user_phone
+     *
+     * @mbggenerated
+     */
+    public String getUserPhone() {
+        return userPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.user_phone
+     *
+     * @param userPhone the value for shop_order.user_phone
+     *
+     * @mbggenerated
+     */
+    public void setUserPhone(String userPhone) {
+        this.userPhone = userPhone == null ? null : userPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_desc
+     *
+     * @return the value of shop_order.orders_desc
+     *
+     * @mbggenerated
+     */
+    public String getOrdersDesc() {
+        return ordersDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_desc
+     *
+     * @param ordersDesc the value for shop_order.orders_desc
+     *
+     * @mbggenerated
+     */
+    public void setOrdersDesc(String ordersDesc) {
+        this.ordersDesc = ordersDesc == null ? null : ordersDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.creat_time
+     *
+     * @return the value of shop_order.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.creat_time
+     *
+     * @param creatTime the value for shop_order.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.end_time
+     *
+     * @return the value of shop_order.end_time
+     *
+     * @mbggenerated
+     */
+    public Date getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.end_time
+     *
+     * @param endTime the value for shop_order.end_time
+     *
+     * @mbggenerated
+     */
+    public void setEndTime(Date endTime) {
+        this.endTime = endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.orders_status
+     *
+     * @return the value of shop_order.orders_status
+     *
+     * @mbggenerated
+     */
+    public String getOrdersStatus() {
+        return ordersStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.orders_status
+     *
+     * @param ordersStatus the value for shop_order.orders_status
+     *
+     * @mbggenerated
+     */
+    public void setOrdersStatus(String ordersStatus) {
+        this.ordersStatus = ordersStatus == null ? null : ordersStatus.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.order_total
+     *
+     * @return the value of shop_order.order_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getOrderTotal() {
+        return orderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.order_total
+     *
+     * @param orderTotal the value for shop_order.order_total
+     *
+     * @mbggenerated
+     */
+    public void setOrderTotal(BigDecimal orderTotal) {
+        this.orderTotal = orderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_order.delivery_total
+     *
+     * @return the value of shop_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getDeliveryTotal() {
+        return deliveryTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_order.delivery_total
+     *
+     * @param deliveryTotal the value for shop_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    public void setDeliveryTotal(BigDecimal deliveryTotal) {
+        this.deliveryTotal = deliveryTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", ordersId=").append(ordersId);
+        sb.append(", ordersType=").append(ordersType);
+        sb.append(", ordersPeople=").append(ordersPeople);
+        sb.append(", appintment=").append(appintment);
+        sb.append(", productId=").append(productId);
+        sb.append(", firstProduct=").append(firstProduct);
+        sb.append(", ordersReserve=").append(ordersReserve);
+        sb.append(", reserveNumber=").append(reserveNumber);
+        sb.append(", shopId=").append(shopId);
+        sb.append(", stuId=").append(stuId);
+        sb.append(", isdelivery=").append(isdelivery);
+        sb.append(", ordersAddress=").append(ordersAddress);
+        sb.append(", userPhone=").append(userPhone);
+        sb.append(", ordersDesc=").append(ordersDesc);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", endTime=").append(endTime);
+        sb.append(", ordersStatus=").append(ordersStatus);
+        sb.append(", orderTotal=").append(orderTotal);
+        sb.append(", deliveryTotal=").append(deliveryTotal);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/ProductDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/ProductDetail.java	(date 1575341908139)
+++ common/src/main/java/cn/armylife/common/Domain/ProductDetail.java	(date 1575341908139)
@@ -0,0 +1,129 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+
+public class ProductDetail implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product_detail.product_detail_id
+     *
+     * @mbggenerated
+     */
+    private Long productDetailId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product_detail.product_id
+     *
+     * @mbggenerated
+     */
+    private Long productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product_detail.product_tag
+     *
+     * @mbggenerated
+     */
+    private Long productTag;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table product_detail
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product_detail.product_detail_id
+     *
+     * @return the value of product_detail.product_detail_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductDetailId() {
+        return productDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product_detail.product_detail_id
+     *
+     * @param productDetailId the value for product_detail.product_detail_id
+     *
+     * @mbggenerated
+     */
+    public void setProductDetailId(Long productDetailId) {
+        this.productDetailId = productDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product_detail.product_id
+     *
+     * @return the value of product_detail.product_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product_detail.product_id
+     *
+     * @param productId the value for product_detail.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(Long productId) {
+        this.productId = productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product_detail.product_tag
+     *
+     * @return the value of product_detail.product_tag
+     *
+     * @mbggenerated
+     */
+    public Long getProductTag() {
+        return productTag;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product_detail.product_tag
+     *
+     * @param productTag the value for product_detail.product_tag
+     *
+     * @mbggenerated
+     */
+    public void setProductTag(Long productTag) {
+        this.productTag = productTag;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product_detail
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", productDetailId=").append(productDetailId);
+        sb.append(", productId=").append(productId);
+        sb.append(", productTag=").append(productTag);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Alid.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Alid.java	(date 1575472434475)
+++ common/src/main/java/cn/armylife/common/Domain/Alid.java	(date 1575472434475)
@@ -0,0 +1,26 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.util.List;
+
+public class Alid implements Serializable {
+
+    private final String frui="FRUI0101";
+    private final String rest="REST0202";
+    private final String book="BOOK0303";
+    private final String shot="SHOT0404";
+    private final String hair="HAIR0505";
+    private final String mtea="MTEA0606";
+
+    private List<String> appId;
+
+    public List<String> getAppId(){
+        appId.add(1,frui);
+        appId.add(2,rest);
+        appId.add(3,shot);
+        appId.add(4,book);
+        appId.add(5,hair);
+        appId.add(6,mtea);
+        return appId;
+    }
+}
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/FeignHystrix/payserviceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/FeignHystrix/payserviceHystrix.java	(date 1575872246210)
+++ integralmall/src/main/java/cn/armylife/integralmall/FeignHystrix/payserviceHystrix.java	(date 1575872246210)
@@ -0,0 +1,19 @@
+package cn.armylife.integralmall.FeignHystrix;
+
+import cn.armylife.common.Domain.Alipay;
+import cn.armylife.integralmall.Feign.payservice;
+
+import java.util.Map;
+
+public class payserviceHystrix implements payservice {
+
+    @Override
+    public Map<String,String> order(String orderDesc, String Total,String orderCardID,String attach){
+        return null;
+    };
+
+    @Override
+    public Alipay alipay(String WIDout_trade_no, String WIDsubject, String WIDtotal_amount, String WIDbody,String passback_params){
+        return null;
+    }
+}
Index: common/src/main/java/cn/armylife/common/Domain/Product.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Product.java	(date 1575528340629)
+++ common/src/main/java/cn/armylife/common/Domain/Product.java	(date 1575528340629)
@@ -0,0 +1,376 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class Product implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_id
+     *
+     * @mbggenerated
+     */
+    private Long productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.shop_id
+     *
+     * @mbggenerated
+     */
+    private Long shopId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.tag_id
+     *
+     * @mbggenerated
+     */
+    private Long tagId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal productTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_name
+     *
+     * @mbggenerated
+     */
+    private String productName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_type
+     *
+     * @mbggenerated
+     */
+    private String productType;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_desc
+     *
+     * @mbggenerated
+     */
+    private String productDesc;
+
+    private ShopTag shopTag;
+
+    private String orderNum;
+
+    public String getOrderNum() {
+        return orderNum;
+    }
+
+    public void setOrderNum(String orderNum) {
+        this.orderNum = orderNum;
+    }
+
+    public ShopTag getShopTag() {
+        return shopTag;
+    }
+
+    public void setShopTag(ShopTag shopTag) {
+        this.shopTag = shopTag;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.status
+     *
+     * @mbggenerated
+     */
+    private Integer status;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column product.product_avator
+     *
+     * @mbggenerated
+     */
+    private String productAvator;
+
+    private BigDecimal dayTotal;
+    private int dayNum;
+    private int monthNum;
+
+    public BigDecimal getDayTotal() {
+        return dayTotal;
+    }
+
+    public void setDayTotal(BigDecimal dayTotal) {
+        this.dayTotal = dayTotal;
+    }
+
+    public int getDayNum() {
+        return dayNum;
+    }
+
+    public void setDayNum(int dayNum) {
+        this.dayNum = dayNum;
+    }
+
+    public int getMonthNum() {
+        return monthNum;
+    }
+
+    public void setMonthNum(int monthNum) {
+        this.monthNum = monthNum;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_id
+     *
+     * @return the value of product.product_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_id
+     *
+     * @param productId the value for product.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(Long productId) {
+        this.productId = productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.shop_id
+     *
+     * @return the value of product.shop_id
+     *
+     * @mbggenerated
+     */
+    public Long getShopId() {
+        return shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.shop_id
+     *
+     * @param shopId the value for product.shop_id
+     *
+     * @mbggenerated
+     */
+    public void setShopId(Long shopId) {
+        this.shopId = shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.tag_id
+     *
+     * @return the value of product.tag_id
+     *
+     * @mbggenerated
+     */
+    public Long getTagId() {
+        return tagId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.tag_id
+     *
+     * @param tagId the value for product.tag_id
+     *
+     * @mbggenerated
+     */
+    public void setTagId(Long tagId) {
+        this.tagId = tagId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_total
+     *
+     * @return the value of product.product_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getProductTotal() {
+        return productTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_total
+     *
+     * @param productTotal the value for product.product_total
+     *
+     * @mbggenerated
+     */
+    public void setProductTotal(BigDecimal productTotal) {
+        this.productTotal = productTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_name
+     *
+     * @return the value of product.product_name
+     *
+     * @mbggenerated
+     */
+    public String getProductName() {
+        return productName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_name
+     *
+     * @param productName the value for product.product_name
+     *
+     * @mbggenerated
+     */
+    public void setProductName(String productName) {
+        this.productName = productName == null ? null : productName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_type
+     *
+     * @return the value of product.product_type
+     *
+     * @mbggenerated
+     */
+    public String getProductType() {
+        return productType;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_type
+     *
+     * @param productType the value for product.product_type
+     *
+     * @mbggenerated
+     */
+    public void setProductType(String productType) {
+        this.productType = productType == null ? null : productType.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_desc
+     *
+     * @return the value of product.product_desc
+     *
+     * @mbggenerated
+     */
+    public String getProductDesc() {
+        return productDesc;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_desc
+     *
+     * @param productDesc the value for product.product_desc
+     *
+     * @mbggenerated
+     */
+    public void setProductDesc(String productDesc) {
+        this.productDesc = productDesc == null ? null : productDesc.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.status
+     *
+     * @return the value of product.status
+     *
+     * @mbggenerated
+     */
+    public Integer getStatus() {
+        return status;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.status
+     *
+     * @param status the value for product.status
+     *
+     * @mbggenerated
+     */
+    public void setStatus(Integer status) {
+        this.status = status;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column product.product_avator
+     *
+     * @return the value of product.product_avator
+     *
+     * @mbggenerated
+     */
+    public String getProductAvator() {
+        return productAvator;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column product.product_avator
+     *
+     * @param productAvator the value for product.product_avator
+     *
+     * @mbggenerated
+     */
+    public void setProductAvator(String productAvator) {
+        this.productAvator = productAvator == null ? null : productAvator.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", productId=").append(productId);
+        sb.append(", shopId=").append(shopId);
+        sb.append(", tagId=").append(tagId);
+        sb.append(", productTotal=").append(productTotal);
+        sb.append(", productName=").append(productName);
+        sb.append(", productType=").append(productType);
+        sb.append(", productDesc=").append(productDesc);
+        sb.append(", status=").append(status);
+        sb.append(", productAvator=").append(productAvator);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/MallArea.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/MallArea.java	(date 1575858263123)
+++ common/src/main/java/cn/armylife/common/Domain/MallArea.java	(date 1575858263123)
@@ -0,0 +1,130 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class MallArea implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_area.mall_area_id
+     *
+     * @mbggenerated
+     */
+    private Long mallAreaId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_area.mall_area_name
+     *
+     * @mbggenerated
+     */
+    private String mallAreaName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_area.adding_time
+     *
+     * @mbggenerated
+     */
+    private Date addingTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table mall_area
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_area.mall_area_id
+     *
+     * @return the value of mall_area.mall_area_id
+     *
+     * @mbggenerated
+     */
+    public Long getMallAreaId() {
+        return mallAreaId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_area.mall_area_id
+     *
+     * @param mallAreaId the value for mall_area.mall_area_id
+     *
+     * @mbggenerated
+     */
+    public void setMallAreaId(Long mallAreaId) {
+        this.mallAreaId = mallAreaId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_area.mall_area_name
+     *
+     * @return the value of mall_area.mall_area_name
+     *
+     * @mbggenerated
+     */
+    public String getMallAreaName() {
+        return mallAreaName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_area.mall_area_name
+     *
+     * @param mallAreaName the value for mall_area.mall_area_name
+     *
+     * @mbggenerated
+     */
+    public void setMallAreaName(String mallAreaName) {
+        this.mallAreaName = mallAreaName == null ? null : mallAreaName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_area.adding_time
+     *
+     * @return the value of mall_area.adding_time
+     *
+     * @mbggenerated
+     */
+    public Date getAddingTime() {
+        return addingTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_area.adding_time
+     *
+     * @param addingTime the value for mall_area.adding_time
+     *
+     * @mbggenerated
+     */
+    public void setAddingTime(Date addingTime) {
+        this.addingTime = addingTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_area
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", mallAreaId=").append(mallAreaId);
+        sb.append(", mallAreaName=").append(mallAreaName);
+        sb.append(", addingTime=").append(addingTime);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/PointsExchangeRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/PointsExchangeRecord.java	(date 1575858263155)
+++ common/src/main/java/cn/armylife/common/Domain/PointsExchangeRecord.java	(date 1575858263155)
@@ -0,0 +1,428 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.Date;
+
+public class PointsExchangeRecord implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.points_exchange_record_id
+     *
+     * @mbggenerated
+     */
+    private Long pointsExchangeRecordId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.using_integral
+     *
+     * @mbggenerated
+     */
+    private Integer usingIntegral;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.usage_amount
+     *
+     * @mbggenerated
+     */
+    private BigDecimal usageAmount;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.exchange_time
+     *
+     * @mbggenerated
+     */
+    private Date exchangeTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.items_exchanged
+     *
+     * @mbggenerated
+     */
+    private String itemsExchanged;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.logistics_number
+     *
+     * @mbggenerated
+     */
+    private String logisticsNumber;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.user_id
+     *
+     * @mbggenerated
+     */
+    private Long userId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.user_name
+     *
+     * @mbggenerated
+     */
+    private String userName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.user_phone
+     *
+     * @mbggenerated
+     */
+    private String userPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.user_address
+     *
+     * @mbggenerated
+     */
+    private String userAddress;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.product_id
+     *
+     * @mbggenerated
+     */
+    private Long productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_exchange_record.product_detail_id
+     *
+     * @mbggenerated
+     */
+    private Long productDetailId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table points_exchange_record
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.points_exchange_record_id
+     *
+     * @return the value of points_exchange_record.points_exchange_record_id
+     *
+     * @mbggenerated
+     */
+    public Long getPointsExchangeRecordId() {
+        return pointsExchangeRecordId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.points_exchange_record_id
+     *
+     * @param pointsExchangeRecordId the value for points_exchange_record.points_exchange_record_id
+     *
+     * @mbggenerated
+     */
+    public void setPointsExchangeRecordId(Long pointsExchangeRecordId) {
+        this.pointsExchangeRecordId = pointsExchangeRecordId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.using_integral
+     *
+     * @return the value of points_exchange_record.using_integral
+     *
+     * @mbggenerated
+     */
+    public Integer getUsingIntegral() {
+        return usingIntegral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.using_integral
+     *
+     * @param usingIntegral the value for points_exchange_record.using_integral
+     *
+     * @mbggenerated
+     */
+    public void setUsingIntegral(Integer usingIntegral) {
+        this.usingIntegral = usingIntegral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.usage_amount
+     *
+     * @return the value of points_exchange_record.usage_amount
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getUsageAmount() {
+        return usageAmount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.usage_amount
+     *
+     * @param usageAmount the value for points_exchange_record.usage_amount
+     *
+     * @mbggenerated
+     */
+    public void setUsageAmount(BigDecimal usageAmount) {
+        this.usageAmount = usageAmount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.exchange_time
+     *
+     * @return the value of points_exchange_record.exchange_time
+     *
+     * @mbggenerated
+     */
+    public Date getExchangeTime() {
+        return exchangeTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.exchange_time
+     *
+     * @param exchangeTime the value for points_exchange_record.exchange_time
+     *
+     * @mbggenerated
+     */
+    public void setExchangeTime(Date exchangeTime) {
+        this.exchangeTime = exchangeTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.items_exchanged
+     *
+     * @return the value of points_exchange_record.items_exchanged
+     *
+     * @mbggenerated
+     */
+    public String getItemsExchanged() {
+        return itemsExchanged;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.items_exchanged
+     *
+     * @param itemsExchanged the value for points_exchange_record.items_exchanged
+     *
+     * @mbggenerated
+     */
+    public void setItemsExchanged(String itemsExchanged) {
+        this.itemsExchanged = itemsExchanged == null ? null : itemsExchanged.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.logistics_number
+     *
+     * @return the value of points_exchange_record.logistics_number
+     *
+     * @mbggenerated
+     */
+    public String getLogisticsNumber() {
+        return logisticsNumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.logistics_number
+     *
+     * @param logisticsNumber the value for points_exchange_record.logistics_number
+     *
+     * @mbggenerated
+     */
+    public void setLogisticsNumber(String logisticsNumber) {
+        this.logisticsNumber = logisticsNumber == null ? null : logisticsNumber.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.user_id
+     *
+     * @return the value of points_exchange_record.user_id
+     *
+     * @mbggenerated
+     */
+    public Long getUserId() {
+        return userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.user_id
+     *
+     * @param userId the value for points_exchange_record.user_id
+     *
+     * @mbggenerated
+     */
+    public void setUserId(Long userId) {
+        this.userId = userId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.user_name
+     *
+     * @return the value of points_exchange_record.user_name
+     *
+     * @mbggenerated
+     */
+    public String getUserName() {
+        return userName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.user_name
+     *
+     * @param userName the value for points_exchange_record.user_name
+     *
+     * @mbggenerated
+     */
+    public void setUserName(String userName) {
+        this.userName = userName == null ? null : userName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.user_phone
+     *
+     * @return the value of points_exchange_record.user_phone
+     *
+     * @mbggenerated
+     */
+    public String getUserPhone() {
+        return userPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.user_phone
+     *
+     * @param userPhone the value for points_exchange_record.user_phone
+     *
+     * @mbggenerated
+     */
+    public void setUserPhone(String userPhone) {
+        this.userPhone = userPhone == null ? null : userPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.user_address
+     *
+     * @return the value of points_exchange_record.user_address
+     *
+     * @mbggenerated
+     */
+    public String getUserAddress() {
+        return userAddress;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.user_address
+     *
+     * @param userAddress the value for points_exchange_record.user_address
+     *
+     * @mbggenerated
+     */
+    public void setUserAddress(String userAddress) {
+        this.userAddress = userAddress == null ? null : userAddress.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.product_id
+     *
+     * @return the value of points_exchange_record.product_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.product_id
+     *
+     * @param productId the value for points_exchange_record.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(Long productId) {
+        this.productId = productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_exchange_record.product_detail_id
+     *
+     * @return the value of points_exchange_record.product_detail_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductDetailId() {
+        return productDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_exchange_record.product_detail_id
+     *
+     * @param productDetailId the value for points_exchange_record.product_detail_id
+     *
+     * @mbggenerated
+     */
+    public void setProductDetailId(Long productDetailId) {
+        this.productDetailId = productDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_exchange_record
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", pointsExchangeRecordId=").append(pointsExchangeRecordId);
+        sb.append(", usingIntegral=").append(usingIntegral);
+        sb.append(", usageAmount=").append(usageAmount);
+        sb.append(", exchangeTime=").append(exchangeTime);
+        sb.append(", itemsExchanged=").append(itemsExchanged);
+        sb.append(", logisticsNumber=").append(logisticsNumber);
+        sb.append(", userId=").append(userId);
+        sb.append(", userName=").append(userName);
+        sb.append(", userPhone=").append(userPhone);
+        sb.append(", userAddress=").append(userAddress);
+        sb.append(", productId=").append(productId);
+        sb.append(", productDetailId=").append(productDetailId);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Member.java	(date 1575770409542)
+++ common/src/main/java/cn/armylife/common/Domain/Member.java	(date 1575770409542)
@@ -0,0 +1,696 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.List;
+
+public class Member implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_id
+     *
+     * @mbggenerated
+     */
+    private Long memberId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_type
+     *
+     * @mbggenerated
+     */
+    private String memberType;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_idcard
+     *
+     * @mbggenerated
+     */
+    private String memberIdcard;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_wechat
+     *
+     * @mbggenerated
+     */
+    private String memberWechat;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_wechat_token
+     *
+     * @mbggenerated
+     */
+    private String memberWechatToken;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_alinumber
+     *
+     * @mbggenerated
+     */
+    private String memberAlinumber;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_ali_token
+     *
+     * @mbggenerated
+     */
+    private String memberAliToken;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_avatar
+     *
+     * @mbggenerated
+     */
+    private String memberAvatar;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_name
+     *
+     * @mbggenerated
+     */
+    private String memberName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_nickname
+     *
+     * @mbggenerated
+     */
+    private String memberNickname;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.register_time
+     *
+     * @mbggenerated
+     */
+    private String registerTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.lastlogin_time
+     *
+     * @mbggenerated
+     */
+    private String lastloginTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_phone
+     *
+     * @mbggenerated
+     */
+    private String memberPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal memberTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_status
+     *
+     * @mbggenerated
+     */
+    private Integer memberStatus;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.member_password
+     *
+     * @mbggenerated
+     */
+    private String memberPassword;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.shop_status
+     *
+     * @mbggenerated
+     */
+    private Integer shopStatus;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.alid
+     *
+     * @mbggenerated
+     */
+    private Integer alid;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column member.shop_name
+     *
+     * @mbggenerated
+     */
+    private String shopName;
+    private String isdeliver;
+    private String armylife;
+
+    public String getArmylife() {
+        return armylife;
+    }
+
+    public void setArmylife(String armylife) {
+        this.armylife = armylife;
+    }
+
+    public String getIsdeliver() {
+        return isdeliver;
+    }
+
+    public void setIsdeliver(String isdeliver) {
+        this.isdeliver = isdeliver;
+    }
+
+    private int isHot;
+    private List<ShopTag> shopTag;
+
+    public List<ShopTag> getShopTag() {
+        return shopTag;
+    }
+
+    public void setShopTag(List<ShopTag> shopTag) {
+        this.shopTag = shopTag;
+    }
+
+    public int getIsHot() {
+        return isHot;
+    }
+
+    public void setIsHot(int isHot) {
+        this.isHot = isHot;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_id
+     *
+     * @return the value of member.member_id
+     *
+     * @mbggenerated
+     */
+    public Long getMemberId() {
+        return memberId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_id
+     *
+     * @param memberId the value for member.member_id
+     *
+     * @mbggenerated
+     */
+    public void setMemberId(Long memberId) {
+        this.memberId = memberId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_type
+     *
+     * @return the value of member.member_type
+     *
+     * @mbggenerated
+     */
+    public String getMemberType() {
+        return memberType;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_type
+     *
+     * @param memberType the value for member.member_type
+     *
+     * @mbggenerated
+     */
+    public void setMemberType(String memberType) {
+        this.memberType = memberType == null ? null : memberType.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_idcard
+     *
+     * @return the value of member.member_idcard
+     *
+     * @mbggenerated
+     */
+    public String getMemberIdcard() {
+        return memberIdcard;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_idcard
+     *
+     * @param memberIdcard the value for member.member_idcard
+     *
+     * @mbggenerated
+     */
+    public void setMemberIdcard(String memberIdcard) {
+        this.memberIdcard = memberIdcard == null ? null : memberIdcard.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_wechat
+     *
+     * @return the value of member.member_wechat
+     *
+     * @mbggenerated
+     */
+    public String getMemberWechat() {
+        return memberWechat;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_wechat
+     *
+     * @param memberWechat the value for member.member_wechat
+     *
+     * @mbggenerated
+     */
+    public void setMemberWechat(String memberWechat) {
+        this.memberWechat = memberWechat == null ? null : memberWechat.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_wechat_token
+     *
+     * @return the value of member.member_wechat_token
+     *
+     * @mbggenerated
+     */
+    public String getMemberWechatToken() {
+        return memberWechatToken;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_wechat_token
+     *
+     * @param memberWechatToken the value for member.member_wechat_token
+     *
+     * @mbggenerated
+     */
+    public void setMemberWechatToken(String memberWechatToken) {
+        this.memberWechatToken = memberWechatToken == null ? null : memberWechatToken.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_alinumber
+     *
+     * @return the value of member.member_alinumber
+     *
+     * @mbggenerated
+     */
+    public String getMemberAlinumber() {
+        return memberAlinumber;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_alinumber
+     *
+     * @param memberAlinumber the value for member.member_alinumber
+     *
+     * @mbggenerated
+     */
+    public void setMemberAlinumber(String memberAlinumber) {
+        this.memberAlinumber = memberAlinumber == null ? null : memberAlinumber.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_ali_token
+     *
+     * @return the value of member.member_ali_token
+     *
+     * @mbggenerated
+     */
+    public String getMemberAliToken() {
+        return memberAliToken;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_ali_token
+     *
+     * @param memberAliToken the value for member.member_ali_token
+     *
+     * @mbggenerated
+     */
+    public void setMemberAliToken(String memberAliToken) {
+        this.memberAliToken = memberAliToken == null ? null : memberAliToken.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_avatar
+     *
+     * @return the value of member.member_avatar
+     *
+     * @mbggenerated
+     */
+    public String getMemberAvatar() {
+        return memberAvatar;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_avatar
+     *
+     * @param memberAvatar the value for member.member_avatar
+     *
+     * @mbggenerated
+     */
+    public void setMemberAvatar(String memberAvatar) {
+        this.memberAvatar = memberAvatar == null ? null : memberAvatar.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_name
+     *
+     * @return the value of member.member_name
+     *
+     * @mbggenerated
+     */
+    public String getMemberName() {
+        return memberName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_name
+     *
+     * @param memberName the value for member.member_name
+     *
+     * @mbggenerated
+     */
+    public void setMemberName(String memberName) {
+        this.memberName = memberName == null ? null : memberName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_nickname
+     *
+     * @return the value of member.member_nickname
+     *
+     * @mbggenerated
+     */
+    public String getMemberNickname() {
+        return memberNickname;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_nickname
+     *
+     * @param memberNickname the value for member.member_nickname
+     *
+     * @mbggenerated
+     */
+    public void setMemberNickname(String memberNickname) {
+        this.memberNickname = memberNickname == null ? null : memberNickname.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.register_time
+     *
+     * @return the value of member.register_time
+     *
+     * @mbggenerated
+     */
+    public String getRegisterTime() {
+        return registerTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.register_time
+     *
+     * @param registerTime the value for member.register_time
+     *
+     * @mbggenerated
+     */
+    public void setRegisterTime(String registerTime) {
+        this.registerTime = registerTime == null ? null : registerTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.lastlogin_time
+     *
+     * @return the value of member.lastlogin_time
+     *
+     * @mbggenerated
+     */
+    public String getLastloginTime() {
+        return lastloginTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.lastlogin_time
+     *
+     * @param lastloginTime the value for member.lastlogin_time
+     *
+     * @mbggenerated
+     */
+    public void setLastloginTime(String lastloginTime) {
+        this.lastloginTime = lastloginTime == null ? null : lastloginTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_phone
+     *
+     * @return the value of member.member_phone
+     *
+     * @mbggenerated
+     */
+    public String getMemberPhone() {
+        return memberPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_phone
+     *
+     * @param memberPhone the value for member.member_phone
+     *
+     * @mbggenerated
+     */
+    public void setMemberPhone(String memberPhone) {
+        this.memberPhone = memberPhone == null ? null : memberPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_total
+     *
+     * @return the value of member.member_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getMemberTotal() {
+        return memberTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_total
+     *
+     * @param memberTotal the value for member.member_total
+     *
+     * @mbggenerated
+     */
+    public void setMemberTotal(BigDecimal memberTotal) {
+        this.memberTotal = memberTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_status
+     *
+     * @return the value of member.member_status
+     *
+     * @mbggenerated
+     */
+    public Integer getMemberStatus() {
+        return memberStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_status
+     *
+     * @param memberStatus the value for member.member_status
+     *
+     * @mbggenerated
+     */
+    public void setMemberStatus(Integer memberStatus) {
+        this.memberStatus = memberStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.member_password
+     *
+     * @return the value of member.member_password
+     *
+     * @mbggenerated
+     */
+    public String getMemberPassword() {
+        return memberPassword;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.member_password
+     *
+     * @param memberPassword the value for member.member_password
+     *
+     * @mbggenerated
+     */
+    public void setMemberPassword(String memberPassword) {
+        this.memberPassword = memberPassword == null ? null : memberPassword.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.shop_status
+     *
+     * @return the value of member.shop_status
+     *
+     * @mbggenerated
+     */
+    public Integer getShopStatus() {
+        return shopStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.shop_status
+     *
+     * @param shopStatus the value for member.shop_status
+     *
+     * @mbggenerated
+     */
+    public void setShopStatus(Integer shopStatus) {
+        this.shopStatus = shopStatus;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.alid
+     *
+     * @return the value of member.alid
+     *
+     * @mbggenerated
+     */
+    public Integer getAlid() {
+        return alid;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.alid
+     *
+     * @param alid the value for member.alid
+     *
+     * @mbggenerated
+     */
+    public void setAlid(Integer alid) {
+        this.alid = alid;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column member.shop_name
+     *
+     * @return the value of member.shop_name
+     *
+     * @mbggenerated
+     */
+    public String getShopName() {
+        return shopName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column member.shop_name
+     *
+     * @param shopName the value for member.shop_name
+     *
+     * @mbggenerated
+     */
+    public void setShopName(String shopName) {
+        this.shopName = shopName == null ? null : shopName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", memberId=").append(memberId);
+        sb.append(", memberType=").append(memberType);
+        sb.append(", memberIdcard=").append(memberIdcard);
+        sb.append(", memberWechat=").append(memberWechat);
+        sb.append(", memberWechatToken=").append(memberWechatToken);
+        sb.append(", memberAlinumber=").append(memberAlinumber);
+        sb.append(", memberAliToken=").append(memberAliToken);
+        sb.append(", memberAvatar=").append(memberAvatar);
+        sb.append(", memberName=").append(memberName);
+        sb.append(", memberNickname=").append(memberNickname);
+        sb.append(", registerTime=").append(registerTime);
+        sb.append(", lastloginTime=").append(lastloginTime);
+        sb.append(", memberPhone=").append(memberPhone);
+        sb.append(", memberTotal=").append(memberTotal);
+        sb.append(", memberStatus=").append(memberStatus);
+        sb.append(", memberPassword=").append(memberPassword);
+        sb.append(", shopStatus=").append(shopStatus);
+        sb.append(", alid=").append(alid);
+        sb.append(", shopName=").append(shopName);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/DeliveryOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/DeliveryOrder.java	(date 1575279620439)
+++ common/src/main/java/cn/armylife/common/Domain/DeliveryOrder.java	(date 1575279620439)
@@ -0,0 +1,325 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+
+public class DeliveryOrder implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.delivery_orders_id
+     *
+     * @mbggenerated
+     */
+    private Integer deliveryOrdersId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.orders_id
+     *
+     * @mbggenerated
+     */
+    private Long ordersId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.delivery_user_id
+     *
+     * @mbggenerated
+     */
+    private Long deliveryUserId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.delivery_address
+     *
+     * @mbggenerated
+     */
+    private String deliveryAddress;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.user_phone
+     *
+     * @mbggenerated
+     */
+    private String userPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.user_name
+     *
+     * @mbggenerated
+     */
+    private String userName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal deliveryTotal;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column delivery_order.status
+     *
+     * @mbggenerated
+     */
+    private Integer status;
+
+    private ShopOrder shopOrder;
+
+    private Member member;
+
+    private BigDecimal total;//查询全部订单时的订单总金额
+
+    public BigDecimal getTotal() {
+        return total;
+    }
+
+    public void setTotal(BigDecimal total) {
+        this.total = total;
+    }
+
+    public Member getMember() {
+        return member;
+    }
+
+    public void setMember(Member member) {
+        this.member = member;
+    }
+
+    public ShopOrder getShopOrder() {
+        return shopOrder;
+    }
+
+    public void setShopOrder(ShopOrder shopOrder) {
+        this.shopOrder = shopOrder;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.delivery_orders_id
+     *
+     * @return the value of delivery_order.delivery_orders_id
+     *
+     * @mbggenerated
+     */
+    public Integer getDeliveryOrdersId() {
+        return deliveryOrdersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.delivery_orders_id
+     *
+     * @param deliveryOrdersId the value for delivery_order.delivery_orders_id
+     *
+     * @mbggenerated
+     */
+    public void setDeliveryOrdersId(Integer deliveryOrdersId) {
+        this.deliveryOrdersId = deliveryOrdersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.orders_id
+     *
+     * @return the value of delivery_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrdersId() {
+        return ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.orders_id
+     *
+     * @param ordersId the value for delivery_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public void setOrdersId(Long ordersId) {
+        this.ordersId = ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.delivery_user_id
+     *
+     * @return the value of delivery_order.delivery_user_id
+     *
+     * @mbggenerated
+     */
+    public Long getDeliveryUserId() {
+        return deliveryUserId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.delivery_user_id
+     *
+     * @param deliveryUserId the value for delivery_order.delivery_user_id
+     *
+     * @mbggenerated
+     */
+    public void setDeliveryUserId(Long deliveryUserId) {
+        this.deliveryUserId = deliveryUserId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.delivery_address
+     *
+     * @return the value of delivery_order.delivery_address
+     *
+     * @mbggenerated
+     */
+    public String getDeliveryAddress() {
+        return deliveryAddress;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.delivery_address
+     *
+     * @param deliveryAddress the value for delivery_order.delivery_address
+     *
+     * @mbggenerated
+     */
+    public void setDeliveryAddress(String deliveryAddress) {
+        this.deliveryAddress = deliveryAddress == null ? null : deliveryAddress.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.user_phone
+     *
+     * @return the value of delivery_order.user_phone
+     *
+     * @mbggenerated
+     */
+    public String getUserPhone() {
+        return userPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.user_phone
+     *
+     * @param userPhone the value for delivery_order.user_phone
+     *
+     * @mbggenerated
+     */
+    public void setUserPhone(String userPhone) {
+        this.userPhone = userPhone == null ? null : userPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.user_name
+     *
+     * @return the value of delivery_order.user_name
+     *
+     * @mbggenerated
+     */
+    public String getUserName() {
+        return userName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.user_name
+     *
+     * @param userName the value for delivery_order.user_name
+     *
+     * @mbggenerated
+     */
+    public void setUserName(String userName) {
+        this.userName = userName == null ? null : userName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.delivery_total
+     *
+     * @return the value of delivery_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getDeliveryTotal() {
+        return deliveryTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.delivery_total
+     *
+     * @param deliveryTotal the value for delivery_order.delivery_total
+     *
+     * @mbggenerated
+     */
+    public void setDeliveryTotal(BigDecimal deliveryTotal) {
+        this.deliveryTotal = deliveryTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column delivery_order.status
+     *
+     * @return the value of delivery_order.status
+     *
+     * @mbggenerated
+     */
+    public Integer getStatus() {
+        return status;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column delivery_order.status
+     *
+     * @param status the value for delivery_order.status
+     *
+     * @mbggenerated
+     */
+    public void setStatus(Integer status) {
+        this.status = status;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", deliveryOrdersId=").append(deliveryOrdersId);
+        sb.append(", ordersId=").append(ordersId);
+        sb.append(", deliveryUserId=").append(deliveryUserId);
+        sb.append(", deliveryAddress=").append(deliveryAddress);
+        sb.append(", userPhone=").append(userPhone);
+        sb.append(", userName=").append(userName);
+        sb.append(", deliveryTotal=").append(deliveryTotal);
+        sb.append(", status=").append(status);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: out/production/integralmall/Mapper/MallProductsDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/MallProductsDetailMapper.xml	(date 1575960095689)
+++ out/production/integralmall/Mapper/MallProductsDetailMapper.xml	(date 1575960095689)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallProductsDetailMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallProductsDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_products_detail_id" jdbcType="BIGINT" property="mallProductsDetailId" />
+    <result column="mall_product_id" jdbcType="BIGINT" property="mallProductId" />
+    <result column="commodity_model" jdbcType="VARCHAR" property="commodityModel" />
+    <result column="commodity_color" jdbcType="VARCHAR" property="commodityColor" />
+    <result column="commodity_material" jdbcType="VARCHAR" property="commodityMaterial" />
+    <result column="commodity_weight" jdbcType="VARCHAR" property="commodityWeight" />
+    <result column="product_specification" jdbcType="VARCHAR" property="productSpecification" />
+    <result column="editing_time" jdbcType="VARCHAR" property="editingTime" />
+  </resultMap>
+  <resultMap id="productMap" type="cn.armylife.common.Domain.PointsMallProducts">
+    <result column="points_mall_products_id" jdbcType="BIGINT" property="pointsMallProductsId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
+    <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
+    <result column="commodity_pictures" jdbcType="VARCHAR" property="commodityPictures" />
+    <result column="commodity_details" jdbcType="VARCHAR" property="commodityDetails" />
+    <result column="respective-area" jdbcType="BIGINT" property="respectiveArea" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+    <collection property="mallProductsDetails" ofType="cn.armylife.common.Domain.MallProductsDetail">
+      <result column="mall_products_detail_id" jdbcType="BIGINT" property="mallProductsDetailId" />
+      <result column="mall_product_id" jdbcType="BIGINT" property="mallProductId" />
+      <result column="commodity_model" jdbcType="VARCHAR" property="commodityModel" />
+      <result column="commodity_color" jdbcType="VARCHAR" property="commodityColor" />
+      <result column="commodity_material" jdbcType="VARCHAR" property="commodityMaterial" />
+      <result column="commodity_weight" jdbcType="VARCHAR" property="commodityWeight" />
+      <result column="product_specification" jdbcType="VARCHAR" property="productSpecification" />
+      <result column="editing_time" jdbcType="VARCHAR" property="editingTime" />
+    </collection>
+    <collection property="mallProductsPictures" ofType="cn.armylife.common.Domain.MallProductsPicture">
+      <result column="mall_products_pocture_id" property="mallProductsPoctureId" jdbcType="BIGINT" />
+      <result column="product_id" property="productId" jdbcType="BIGINT" />
+      <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
+    </collection>
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallProductsDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="mallProductsDetailId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into mall_products_detail (mall_product_id, commodity_model, commodity_color,
+    commodity_material, commodity_weight, product_specification,
+    editing_time)
+    values (#{mallProductId,jdbcType=BIGINT}, #{commodityModel,jdbcType=VARCHAR}, #{commodityColor,jdbcType=VARCHAR},
+    #{commodityMaterial,jdbcType=VARCHAR}, #{commodityWeight,jdbcType=VARCHAR}, #{productSpecification,jdbcType=VARCHAR},
+    #{editingTime,jdbcType=VARCHAR})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_products_detail_id, mall_product_id, commodity_model, commodity_color,
+    commodity_material, commodity_weight, product_specification, editing_time
+    from mall_products_detail
+  </select>
+
+  <select id="findProductForDetail" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from mall_products_detail where mall_products_detail_id=#{productDetailId}
+  </select>
+
+  <select id="findProductForProductId" parameterType="java.lang.Long" resultMap="productMap">
+    select * from points_mall_products pmp
+     left join mall_products_detail mpd on mpd.mall_product_id=pmp.points_mall_products_id
+     inner join mall_products_picture mpp on mpp.product_id=pmp.points_mall_products_id
+     where pmp.points_mall_products_id=#{productId}
+  </select>
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/MallProductsDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/MallProductsDetail.java	(date 1575858263233)
+++ common/src/main/java/cn/armylife/common/Domain/MallProductsDetail.java	(date 1575858263233)
@@ -0,0 +1,294 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+
+public class MallProductsDetail implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.mall_products_detail_id
+     *
+     * @mbggenerated
+     */
+    private Long mallProductsDetailId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.mall_product_id
+     *
+     * @mbggenerated
+     */
+    private Long mallProductId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.commodity_model
+     *
+     * @mbggenerated
+     */
+    private String commodityModel;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.commodity_color
+     *
+     * @mbggenerated
+     */
+    private String commodityColor;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.commodity_material
+     *
+     * @mbggenerated
+     */
+    private String commodityMaterial;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.commodity_weight
+     *
+     * @mbggenerated
+     */
+    private String commodityWeight;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.product_specification
+     *
+     * @mbggenerated
+     */
+    private String productSpecification;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_detail.editing_time
+     *
+     * @mbggenerated
+     */
+    private String editingTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table mall_products_detail
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.mall_products_detail_id
+     *
+     * @return the value of mall_products_detail.mall_products_detail_id
+     *
+     * @mbggenerated
+     */
+    public Long getMallProductsDetailId() {
+        return mallProductsDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.mall_products_detail_id
+     *
+     * @param mallProductsDetailId the value for mall_products_detail.mall_products_detail_id
+     *
+     * @mbggenerated
+     */
+    public void setMallProductsDetailId(Long mallProductsDetailId) {
+        this.mallProductsDetailId = mallProductsDetailId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.mall_product_id
+     *
+     * @return the value of mall_products_detail.mall_product_id
+     *
+     * @mbggenerated
+     */
+    public Long getMallProductId() {
+        return mallProductId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.mall_product_id
+     *
+     * @param mallProductId the value for mall_products_detail.mall_product_id
+     *
+     * @mbggenerated
+     */
+    public void setMallProductId(Long mallProductId) {
+        this.mallProductId = mallProductId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.commodity_model
+     *
+     * @return the value of mall_products_detail.commodity_model
+     *
+     * @mbggenerated
+     */
+    public String getCommodityModel() {
+        return commodityModel;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.commodity_model
+     *
+     * @param commodityModel the value for mall_products_detail.commodity_model
+     *
+     * @mbggenerated
+     */
+    public void setCommodityModel(String commodityModel) {
+        this.commodityModel = commodityModel == null ? null : commodityModel.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.commodity_color
+     *
+     * @return the value of mall_products_detail.commodity_color
+     *
+     * @mbggenerated
+     */
+    public String getCommodityColor() {
+        return commodityColor;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.commodity_color
+     *
+     * @param commodityColor the value for mall_products_detail.commodity_color
+     *
+     * @mbggenerated
+     */
+    public void setCommodityColor(String commodityColor) {
+        this.commodityColor = commodityColor == null ? null : commodityColor.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.commodity_material
+     *
+     * @return the value of mall_products_detail.commodity_material
+     *
+     * @mbggenerated
+     */
+    public String getCommodityMaterial() {
+        return commodityMaterial;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.commodity_material
+     *
+     * @param commodityMaterial the value for mall_products_detail.commodity_material
+     *
+     * @mbggenerated
+     */
+    public void setCommodityMaterial(String commodityMaterial) {
+        this.commodityMaterial = commodityMaterial == null ? null : commodityMaterial.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.commodity_weight
+     *
+     * @return the value of mall_products_detail.commodity_weight
+     *
+     * @mbggenerated
+     */
+    public String getCommodityWeight() {
+        return commodityWeight;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.commodity_weight
+     *
+     * @param commodityWeight the value for mall_products_detail.commodity_weight
+     *
+     * @mbggenerated
+     */
+    public void setCommodityWeight(String commodityWeight) {
+        this.commodityWeight = commodityWeight == null ? null : commodityWeight.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.product_specification
+     *
+     * @return the value of mall_products_detail.product_specification
+     *
+     * @mbggenerated
+     */
+    public String getProductSpecification() {
+        return productSpecification;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.product_specification
+     *
+     * @param productSpecification the value for mall_products_detail.product_specification
+     *
+     * @mbggenerated
+     */
+    public void setProductSpecification(String productSpecification) {
+        this.productSpecification = productSpecification == null ? null : productSpecification.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_detail.editing_time
+     *
+     * @return the value of mall_products_detail.editing_time
+     *
+     * @mbggenerated
+     */
+    public String getEditingTime() {
+        return editingTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_detail.editing_time
+     *
+     * @param editingTime the value for mall_products_detail.editing_time
+     *
+     * @mbggenerated
+     */
+    public void setEditingTime(String editingTime) {
+        this.editingTime = editingTime == null ? null : editingTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_detail
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", mallProductsDetailId=").append(mallProductsDetailId);
+        sb.append(", mallProductId=").append(mallProductId);
+        sb.append(", commodityModel=").append(commodityModel);
+        sb.append(", commodityColor=").append(commodityColor);
+        sb.append(", commodityMaterial=").append(commodityMaterial);
+        sb.append(", commodityWeight=").append(commodityWeight);
+        sb.append(", productSpecification=").append(productSpecification);
+        sb.append(", editingTime=").append(editingTime);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/ShopTag.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/ShopTag.java	(date 1575366112229)
+++ common/src/main/java/cn/armylife/common/Domain/ShopTag.java	(date 1575366112229)
@@ -0,0 +1,183 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.util.List;
+
+public class ShopTag implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_tag.shop_tag_id
+     *
+     * @mbggenerated
+     */
+    private Long shopTagId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_tag.tag_name
+     *
+     * @mbggenerated
+     */
+    private String tagName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_tag.shop_id
+     *
+     * @mbggenerated
+     */
+    private Long shopId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column shop_tag.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    private Product products;
+
+    public Product getProducts() {
+        return products;
+    }
+
+    public void setProducts(Product products) {
+        this.products = products;
+    }
+
+    private List<Product> product;
+
+    public List<Product> getProduct() {
+        return product;
+    }
+
+    public void setProduct(List<Product> product) {
+        this.product = product;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_tag.shop_tag_id
+     *
+     * @return the value of shop_tag.shop_tag_id
+     *
+     * @mbggenerated
+     */
+    public Long getShopTagId() {
+        return shopTagId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_tag.shop_tag_id
+     *
+     * @param shopTagId the value for shop_tag.shop_tag_id
+     *
+     * @mbggenerated
+     */
+    public void setShopTagId(Long shopTagId) {
+        this.shopTagId = shopTagId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_tag.tag_name
+     *
+     * @return the value of shop_tag.tag_name
+     *
+     * @mbggenerated
+     */
+    public String getTagName() {
+        return tagName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_tag.tag_name
+     *
+     * @param tagName the value for shop_tag.tag_name
+     *
+     * @mbggenerated
+     */
+    public void setTagName(String tagName) {
+        this.tagName = tagName == null ? null : tagName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_tag.shop_id
+     *
+     * @return the value of shop_tag.shop_id
+     *
+     * @mbggenerated
+     */
+    public Long getShopId() {
+        return shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_tag.shop_id
+     *
+     * @param shopId the value for shop_tag.shop_id
+     *
+     * @mbggenerated
+     */
+    public void setShopId(Long shopId) {
+        this.shopId = shopId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column shop_tag.creat_time
+     *
+     * @return the value of shop_tag.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column shop_tag.creat_time
+     *
+     * @param creatTime the value for shop_tag.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", shopTagId=").append(shopTagId);
+        sb.append(", tagName=").append(tagName);
+        sb.append(", shopId=").append(shopId);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/Hairvip.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/Hairvip.java	(date 1575622991407)
+++ common/src/main/java/cn/armylife/common/Domain/Hairvip.java	(date 1575622991407)
@@ -0,0 +1,295 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.util.Date;
+
+public class Hairvip implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.hairvip_id
+     *
+     * @mbggenerated
+     */
+    private Long hairvipId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.vip_id
+     *
+     * @mbggenerated
+     */
+    private Long vipId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.hairvip_name
+     *
+     * @mbggenerated
+     */
+    private String hairvipName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.hairvip_phone
+     *
+     * @mbggenerated
+     */
+    private String hairvipPhone;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.hairvip_num
+     *
+     * @mbggenerated
+     */
+    private String hairvipNum;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.creat_time
+     *
+     * @mbggenerated
+     */
+    private Date creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.end_time
+     *
+     * @mbggenerated
+     */
+    private Date endTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column hairvip.is
+     *
+     * @mbggenerated
+     */
+    private Integer is;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table hairvip
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.hairvip_id
+     *
+     * @return the value of hairvip.hairvip_id
+     *
+     * @mbggenerated
+     */
+    public Long getHairvipId() {
+        return hairvipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.hairvip_id
+     *
+     * @param hairvipId the value for hairvip.hairvip_id
+     *
+     * @mbggenerated
+     */
+    public void setHairvipId(Long hairvipId) {
+        this.hairvipId = hairvipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.vip_id
+     *
+     * @return the value of hairvip.vip_id
+     *
+     * @mbggenerated
+     */
+    public Long getVipId() {
+        return vipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.vip_id
+     *
+     * @param vipId the value for hairvip.vip_id
+     *
+     * @mbggenerated
+     */
+    public void setVipId(Long vipId) {
+        this.vipId = vipId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.hairvip_name
+     *
+     * @return the value of hairvip.hairvip_name
+     *
+     * @mbggenerated
+     */
+    public String getHairvipName() {
+        return hairvipName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.hairvip_name
+     *
+     * @param hairvipName the value for hairvip.hairvip_name
+     *
+     * @mbggenerated
+     */
+    public void setHairvipName(String hairvipName) {
+        this.hairvipName = hairvipName == null ? null : hairvipName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.hairvip_phone
+     *
+     * @return the value of hairvip.hairvip_phone
+     *
+     * @mbggenerated
+     */
+    public String getHairvipPhone() {
+        return hairvipPhone;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.hairvip_phone
+     *
+     * @param hairvipPhone the value for hairvip.hairvip_phone
+     *
+     * @mbggenerated
+     */
+    public void setHairvipPhone(String hairvipPhone) {
+        this.hairvipPhone = hairvipPhone == null ? null : hairvipPhone.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.hairvip_num
+     *
+     * @return the value of hairvip.hairvip_num
+     *
+     * @mbggenerated
+     */
+    public String getHairvipNum() {
+        return hairvipNum;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.hairvip_num
+     *
+     * @param hairvipNum the value for hairvip.hairvip_num
+     *
+     * @mbggenerated
+     */
+    public void setHairvipNum(String hairvipNum) {
+        this.hairvipNum = hairvipNum == null ? null : hairvipNum.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.creat_time
+     *
+     * @return the value of hairvip.creat_time
+     *
+     * @mbggenerated
+     */
+    public Date getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.creat_time
+     *
+     * @param creatTime the value for hairvip.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(Date creatTime) {
+        this.creatTime = creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.end_time
+     *
+     * @return the value of hairvip.end_time
+     *
+     * @mbggenerated
+     */
+    public Date getEndTime() {
+        return endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.end_time
+     *
+     * @param endTime the value for hairvip.end_time
+     *
+     * @mbggenerated
+     */
+    public void setEndTime(Date endTime) {
+        this.endTime = endTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column hairvip.is
+     *
+     * @return the value of hairvip.is
+     *
+     * @mbggenerated
+     */
+    public Integer getIs() {
+        return is;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column hairvip.is
+     *
+     * @param is the value for hairvip.is
+     *
+     * @mbggenerated
+     */
+    public void setIs(Integer is) {
+        this.is = is;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table hairvip
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", hairvipId=").append(hairvipId);
+        sb.append(", vipId=").append(vipId);
+        sb.append(", hairvipName=").append(hairvipName);
+        sb.append(", hairvipPhone=").append(hairvipPhone);
+        sb.append(", hairvipNum=").append(hairvipNum);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", endTime=").append(endTime);
+        sb.append(", is=").append(is);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallProductsDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallProductsDetailMapper.java	(date 1575873326703)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/MallProductsDetailMapper.java	(date 1575873326703)
@@ -0,0 +1,40 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.MallProductsDetail;
+import cn.armylife.common.Domain.PointsMallProducts;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface MallProductsDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_detail
+     *
+     * @mbggenerated
+     */
+    int insert(MallProductsDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_detail
+     *
+     * @mbggenerated
+     */
+    List<MallProductsDetail> selectAll();
+
+    /**
+     * 通过Id查询商品规格信息
+     * @param productDetailId
+     * @return
+     */
+    MallProductsDetail findProductForDetail(Long productDetailId);
+
+    /**
+     * 通过商品Id查询信息
+     * @param productId
+     * @return
+     */
+    PointsMallProducts findProductForProductId(Long productId);
+}
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/PointsMallProducts.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/PointsMallProducts.java	(date 1575960783975)
+++ common/src/main/java/cn/armylife/common/Domain/PointsMallProducts.java	(date 1575960783975)
@@ -0,0 +1,350 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.Date;
+import java.util.List;
+
+public class PointsMallProducts implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.points_mall_products_id
+     *
+     * @mbggenerated
+     */
+    private Long pointsMallProductsId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.using_integral
+     *
+     * @mbggenerated
+     */
+    private Integer usingIntegral;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.usage_amount
+     *
+     * @mbggenerated
+     */
+    private BigDecimal usageAmount;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.original_price
+     *
+     * @mbggenerated
+     */
+    private BigDecimal originalPrice;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.trade_name
+     *
+     * @mbggenerated
+     */
+    private String tradeName;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.commodity_pictures
+     *
+     * @mbggenerated
+     */
+    private String commodityPictures;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.commodity_details
+     *
+     * @mbggenerated
+     */
+    private String commodityDetails;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.respective-area
+     *
+     * @mbggenerated
+     */
+    private Long respectiveArea;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column points_mall_products.adding_time
+     *
+     * @mbggenerated
+     */
+    private Date addingTime;
+
+    private List<MallProductsPicture> mallProductsPictures;
+
+    public List<MallProductsPicture> getMallProductsPictures() {
+        return mallProductsPictures;
+    }
+
+    public void setMallProductsPictures(List<MallProductsPicture> mallProductsPictures) {
+        this.mallProductsPictures = mallProductsPictures;
+    }
+
+    private List<MallProductsDetail> mallProductsDetails;
+
+    public List<MallProductsDetail> getMallProductsDetails() {
+        return mallProductsDetails;
+    }
+
+    public void setMallProductsDetails(List<MallProductsDetail> mallProductsDetails) {
+        this.mallProductsDetails = mallProductsDetails;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table points_mall_products
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.points_mall_products_id
+     *
+     * @return the value of points_mall_products.points_mall_products_id
+     *
+     * @mbggenerated
+     */
+    public Long getPointsMallProductsId() {
+        return pointsMallProductsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.points_mall_products_id
+     *
+     * @param pointsMallProductsId the value for points_mall_products.points_mall_products_id
+     *
+     * @mbggenerated
+     */
+    public void setPointsMallProductsId(Long pointsMallProductsId) {
+        this.pointsMallProductsId = pointsMallProductsId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.using_integral
+     *
+     * @return the value of points_mall_products.using_integral
+     *
+     * @mbggenerated
+     */
+    public Integer getUsingIntegral() {
+        return usingIntegral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.using_integral
+     *
+     * @param usingIntegral the value for points_mall_products.using_integral
+     *
+     * @mbggenerated
+     */
+    public void setUsingIntegral(Integer usingIntegral) {
+        this.usingIntegral = usingIntegral;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.usage_amount
+     *
+     * @return the value of points_mall_products.usage_amount
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getUsageAmount() {
+        return usageAmount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.usage_amount
+     *
+     * @param usageAmount the value for points_mall_products.usage_amount
+     *
+     * @mbggenerated
+     */
+    public void setUsageAmount(BigDecimal usageAmount) {
+        this.usageAmount = usageAmount;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.original_price
+     *
+     * @return the value of points_mall_products.original_price
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getOriginalPrice() {
+        return originalPrice;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.original_price
+     *
+     * @param originalPrice the value for points_mall_products.original_price
+     *
+     * @mbggenerated
+     */
+    public void setOriginalPrice(BigDecimal originalPrice) {
+        this.originalPrice = originalPrice;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.trade_name
+     *
+     * @return the value of points_mall_products.trade_name
+     *
+     * @mbggenerated
+     */
+    public String getTradeName() {
+        return tradeName;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.trade_name
+     *
+     * @param tradeName the value for points_mall_products.trade_name
+     *
+     * @mbggenerated
+     */
+    public void setTradeName(String tradeName) {
+        this.tradeName = tradeName == null ? null : tradeName.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.commodity_pictures
+     *
+     * @return the value of points_mall_products.commodity_pictures
+     *
+     * @mbggenerated
+     */
+    public String getCommodityPictures() {
+        return commodityPictures;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.commodity_pictures
+     *
+     * @param commodityPictures the value for points_mall_products.commodity_pictures
+     *
+     * @mbggenerated
+     */
+    public void setCommodityPictures(String commodityPictures) {
+        this.commodityPictures = commodityPictures == null ? null : commodityPictures.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.commodity_details
+     *
+     * @return the value of points_mall_products.commodity_details
+     *
+     * @mbggenerated
+     */
+    public String getCommodityDetails() {
+        return commodityDetails;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.commodity_details
+     *
+     * @param commodityDetails the value for points_mall_products.commodity_details
+     *
+     * @mbggenerated
+     */
+    public void setCommodityDetails(String commodityDetails) {
+        this.commodityDetails = commodityDetails == null ? null : commodityDetails.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.respective-area
+     *
+     * @return the value of points_mall_products.respective-area
+     *
+     * @mbggenerated
+     */
+    public Long getRespectiveArea() {
+        return respectiveArea;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.respective-area
+     *
+     * @param respectiveArea the value for points_mall_products.respective-area
+     *
+     * @mbggenerated
+     */
+    public void setRespectiveArea(Long respectiveArea) {
+        this.respectiveArea = respectiveArea;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column points_mall_products.adding_time
+     *
+     * @return the value of points_mall_products.adding_time
+     *
+     * @mbggenerated
+     */
+    public Date getAddingTime() {
+        return addingTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column points_mall_products.adding_time
+     *
+     * @param addingTime the value for points_mall_products.adding_time
+     *
+     * @mbggenerated
+     */
+    public void setAddingTime(Date addingTime) {
+        this.addingTime = addingTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table points_mall_products
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", pointsMallProductsId=").append(pointsMallProductsId);
+        sb.append(", usingIntegral=").append(usingIntegral);
+        sb.append(", usageAmount=").append(usageAmount);
+        sb.append(", originalPrice=").append(originalPrice);
+        sb.append(", tradeName=").append(tradeName);
+        sb.append(", commodityPictures=").append(commodityPictures);
+        sb.append(", commodityDetails=").append(commodityDetails);
+        sb.append(", respectiveArea=").append(respectiveArea);
+        sb.append(", addingTime=").append(addingTime);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/MallProductsDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/MallProductsDetailMapper.xml	(date 1575960095689)
+++ integralmall/src/main/resources/Mapper/MallProductsDetailMapper.xml	(date 1575960095689)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallProductsDetailMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallProductsDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_products_detail_id" jdbcType="BIGINT" property="mallProductsDetailId" />
+    <result column="mall_product_id" jdbcType="BIGINT" property="mallProductId" />
+    <result column="commodity_model" jdbcType="VARCHAR" property="commodityModel" />
+    <result column="commodity_color" jdbcType="VARCHAR" property="commodityColor" />
+    <result column="commodity_material" jdbcType="VARCHAR" property="commodityMaterial" />
+    <result column="commodity_weight" jdbcType="VARCHAR" property="commodityWeight" />
+    <result column="product_specification" jdbcType="VARCHAR" property="productSpecification" />
+    <result column="editing_time" jdbcType="VARCHAR" property="editingTime" />
+  </resultMap>
+  <resultMap id="productMap" type="cn.armylife.common.Domain.PointsMallProducts">
+    <result column="points_mall_products_id" jdbcType="BIGINT" property="pointsMallProductsId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
+    <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
+    <result column="commodity_pictures" jdbcType="VARCHAR" property="commodityPictures" />
+    <result column="commodity_details" jdbcType="VARCHAR" property="commodityDetails" />
+    <result column="respective-area" jdbcType="BIGINT" property="respectiveArea" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+    <collection property="mallProductsDetails" ofType="cn.armylife.common.Domain.MallProductsDetail">
+      <result column="mall_products_detail_id" jdbcType="BIGINT" property="mallProductsDetailId" />
+      <result column="mall_product_id" jdbcType="BIGINT" property="mallProductId" />
+      <result column="commodity_model" jdbcType="VARCHAR" property="commodityModel" />
+      <result column="commodity_color" jdbcType="VARCHAR" property="commodityColor" />
+      <result column="commodity_material" jdbcType="VARCHAR" property="commodityMaterial" />
+      <result column="commodity_weight" jdbcType="VARCHAR" property="commodityWeight" />
+      <result column="product_specification" jdbcType="VARCHAR" property="productSpecification" />
+      <result column="editing_time" jdbcType="VARCHAR" property="editingTime" />
+    </collection>
+    <collection property="mallProductsPictures" ofType="cn.armylife.common.Domain.MallProductsPicture">
+      <result column="mall_products_pocture_id" property="mallProductsPoctureId" jdbcType="BIGINT" />
+      <result column="product_id" property="productId" jdbcType="BIGINT" />
+      <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
+    </collection>
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallProductsDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="mallProductsDetailId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into mall_products_detail (mall_product_id, commodity_model, commodity_color,
+    commodity_material, commodity_weight, product_specification,
+    editing_time)
+    values (#{mallProductId,jdbcType=BIGINT}, #{commodityModel,jdbcType=VARCHAR}, #{commodityColor,jdbcType=VARCHAR},
+    #{commodityMaterial,jdbcType=VARCHAR}, #{commodityWeight,jdbcType=VARCHAR}, #{productSpecification,jdbcType=VARCHAR},
+    #{editingTime,jdbcType=VARCHAR})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_products_detail_id, mall_product_id, commodity_model, commodity_color,
+    commodity_material, commodity_weight, product_specification, editing_time
+    from mall_products_detail
+  </select>
+
+  <select id="findProductForDetail" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from mall_products_detail where mall_products_detail_id=#{productDetailId}
+  </select>
+
+  <select id="findProductForProductId" parameterType="java.lang.Long" resultMap="productMap">
+    select * from points_mall_products pmp
+     left join mall_products_detail mpd on mpd.mall_product_id=pmp.points_mall_products_id
+     inner join mall_products_picture mpp on mpp.product_id=pmp.points_mall_products_id
+     where pmp.points_mall_products_id=#{productId}
+  </select>
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/AfterOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/AfterOrder.java	(date 1575808170999)
+++ common/src/main/java/cn/armylife/common/Domain/AfterOrder.java	(date 1575808170999)
@@ -0,0 +1,226 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+import java.math.BigDecimal;
+import java.util.List;
+
+public class AfterOrder implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order.after_order_id
+     *
+     * @mbggenerated
+     */
+    private Long afterOrderId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order.orders_id
+     *
+     * @mbggenerated
+     */
+    private Long ordersId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order.product_id
+     *
+     * @mbggenerated
+     */
+    private String productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order.creat_time
+     *
+     * @mbggenerated
+     */
+    private String creatTime;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column after_order.after_order_total
+     *
+     * @mbggenerated
+     */
+    private BigDecimal afterOrderTotal;
+
+    private List<OrderDetail> orderDetail;
+    private AfterOrderDetail afterOrderDetail;
+
+    private int isPay;
+
+    public int getIsPay() {
+        return isPay;
+    }
+
+    public void setIsPay(int isPay) {
+        this.isPay = isPay;
+    }
+
+    public AfterOrderDetail getAfterOrderDetail() {
+        return afterOrderDetail;
+    }
+
+    public void setAfterOrderDetail(AfterOrderDetail afterOrderDetail) {
+        this.afterOrderDetail = afterOrderDetail;
+    }
+
+    public List<OrderDetail> getOrderDetail() {
+        return orderDetail;
+    }
+
+    public void setOrderDetail(List<OrderDetail> orderDetail) {
+        this.orderDetail = orderDetail;
+    }
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order.after_order_id
+     *
+     * @return the value of after_order.after_order_id
+     *
+     * @mbggenerated
+     */
+    public Long getAfterOrderId() {
+        return afterOrderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order.after_order_id
+     *
+     * @param afterOrderId the value for after_order.after_order_id
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderId(Long afterOrderId) {
+        this.afterOrderId = afterOrderId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order.orders_id
+     *
+     * @return the value of after_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public Long getOrdersId() {
+        return ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order.orders_id
+     *
+     * @param ordersId the value for after_order.orders_id
+     *
+     * @mbggenerated
+     */
+    public void setOrdersId(Long ordersId) {
+        this.ordersId = ordersId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order.product_id
+     *
+     * @return the value of after_order.product_id
+     *
+     * @mbggenerated
+     */
+    public String getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order.product_id
+     *
+     * @param productId the value for after_order.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(String productId) {
+        this.productId = productId == null ? null : productId.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order.creat_time
+     *
+     * @return the value of after_order.creat_time
+     *
+     * @mbggenerated
+     */
+    public String getCreatTime() {
+        return creatTime;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order.creat_time
+     *
+     * @param creatTime the value for after_order.creat_time
+     *
+     * @mbggenerated
+     */
+    public void setCreatTime(String creatTime) {
+        this.creatTime = creatTime == null ? null : creatTime.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column after_order.after_order_total
+     *
+     * @return the value of after_order.after_order_total
+     *
+     * @mbggenerated
+     */
+    public BigDecimal getAfterOrderTotal() {
+        return afterOrderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column after_order.after_order_total
+     *
+     * @param afterOrderTotal the value for after_order.after_order_total
+     *
+     * @mbggenerated
+     */
+    public void setAfterOrderTotal(BigDecimal afterOrderTotal) {
+        this.afterOrderTotal = afterOrderTotal;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", afterOrderId=").append(afterOrderId);
+        sb.append(", ordersId=").append(ordersId);
+        sb.append(", productId=").append(productId);
+        sb.append(", creatTime=").append(creatTime);
+        sb.append(", afterOrderTotal=").append(afterOrderTotal);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: logs/my.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- logs/my.log	(date 1575873368509)
+++ logs/my.log	(date 1575873368509)
@@ -0,0 +1,0 @@
Index: admin/src/test/java/cn/armylife/admin/AdminApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/src/test/java/cn/armylife/admin/AdminApplicationTests.java	(date 1574474186813)
+++ admin/src/test/java/cn/armylife/admin/AdminApplicationTests.java	(date 1574474186813)
@@ -0,0 +1,13 @@
+package cn.armylife.admin;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class AdminApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: integralmall/src/main/java/cn/armylife/integralmall/Controller/payController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Controller/payController.java	(date 1575885678870)
+++ integralmall/src/main/java/cn/armylife/integralmall/Controller/payController.java	(date 1575885678870)
@@ -0,0 +1,86 @@
+package cn.armylife.integralmall.Controller;
+
+import cn.armylife.common.Domain.Alipay;
+import cn.armylife.common.Domain.Member;
+import cn.armylife.common.Domain.Payments;
+import cn.armylife.common.Domain.PointsExchangeRecord;
+import cn.armylife.common.Util.NumberID;
+import cn.armylife.integralmall.Service.IntegralMallService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+import java.util.Map;
+
+@Controller
+public class payController {
+    Logger logger= LoggerFactory.getLogger(payController.class);
+
+    @Value("${server.port}")
+    int port;
+
+    @Autowired
+    IntegralMallService integralMallService;
+    @Autowired
+    cn.armylife.integralmall.Feign.payservice payservice;
+
+    @RequestMapping("integralAliPay")
+    @ResponseBody
+    public String integralAliPay(HttpServletRequest request,Long pointsExchangeRecordId){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        String WIDout_trade_no=null;
+        String WIDsubject=null;
+        String WIDtotal_amount=null;
+        String WIDbody=null;
+        String passback_params=null;
+        Long int1= NumberID.nextId(port);
+        PointsExchangeRecord exchangeRecord=integralMallService.findExchangeRecordForId(pointsExchangeRecordId);
+        Payments payments=new Payments();
+        payments.setPayName(member.getMemberId());
+        payments.setPayApp("1");
+        payments.setPayTotal(exchangeRecord.getUsageAmount());
+        payments.setOrderId(exchangeRecord.getPointsExchangeRecordId());
+        payments.setPaymentsId(int1);
+        WIDout_trade_no=String.valueOf(int1);
+        WIDtotal_amount=String.valueOf(payments.getPayTotal());
+        WIDbody="积分兑换支付金额";
+        WIDsubject=exchangeRecord.getItemsExchanged();
+        passback_params="0";
+        integralMallService.paymentsinsert(payments);
+        Alipay alipay=payservice.alipay(WIDout_trade_no,WIDsubject,WIDtotal_amount,WIDbody,passback_params);
+        return alipay.getNum();
+    };
+
+    @RequestMapping("integralWechatPay")
+    @ResponseBody
+    public Map<String,String> integralWechatPay(HttpServletRequest request,Long pointsExchangeRecordId){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        String orderDesc=null;
+        String Total=null;
+        String orderCardID=null;
+        String attach=null;
+        Long int1= NumberID.nextId(port);
+        PointsExchangeRecord exchangeRecord=integralMallService.findExchangeRecordForId(pointsExchangeRecordId);
+        Payments payments=new Payments();
+        payments.setPayName(member.getMemberId());
+        payments.setPayApp("1");
+        payments.setPayTotal(exchangeRecord.getUsageAmount());
+        payments.setOrderId(exchangeRecord.getPointsExchangeRecordId());
+        payments.setPaymentsId(int1);
+        orderCardID=String.valueOf(int1);
+        Total=String.valueOf(payments.getPayTotal());
+        orderDesc="积分兑换支付金额";
+        attach="0";
+        integralMallService.paymentsinsert(payments);
+        Map<String,String> map=payservice.order(orderDesc,Total,orderCardID,attach);
+        return map;
+    };
+}
Index: admin/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- admin/.mvn/wrapper/maven-wrapper.properties	(date 1574474077725)
+++ admin/.mvn/wrapper/maven-wrapper.properties	(date 1574474077725)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: integralmall/src/main/resources/Mapper/config/sqlMapConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
+++ integralmall/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+
+</configuration>
\ No newline at end of file
Index: admin/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- admin/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609934)
+++ admin/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609934)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: out/production/integralmall/Mapper/config/sqlMapConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
+++ out/production/integralmall/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+
+</configuration>
\ No newline at end of file
Index: integralmall/src/test/java/cn/armylife/integralmall/IntegralmallApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/test/java/cn/armylife/integralmall/IntegralmallApplicationTests.java	(date 1575814373809)
+++ integralmall/src/test/java/cn/armylife/integralmall/IntegralmallApplicationTests.java	(date 1575814373809)
@@ -0,0 +1,13 @@
+package cn.armylife.integralmall;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class IntegralmallApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: integralmall/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- integralmall/.mvn/wrapper/maven-wrapper.properties	(date 1575814304478)
+++ integralmall/.mvn/wrapper/maven-wrapper.properties	(date 1575814304478)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: integralmall/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609873)
+++ integralmall/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609873)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: common/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- common/src/main/resources/application.properties	(date 1572859709739)
+++ common/src/main/resources/application.properties	(date 1572859709739)
@@ -0,0 +1,11 @@
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://127.0.0.1:3306/armylife?useAffectedRows=true&serverTimezone=UTC
+spring.datasource.username=root
+spring.datasource.password=root
+mybatis.mapper-locations=classpath*:mapper/*Mapper.xml
+mybatis.config-location= classpath:mapper/config/sqlMapConfig.xml
+#Mybatis Generator configuration
+#dao类和实体类的位置
+mybatis.project =src/main/java
+#mapper文件的位置
+mybatis.resources=src/main/resources
\ No newline at end of file
Index: hystrixturbine/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/mvnw	(date 1573113798732)
+++ hystrixturbine/mvnw	(date 1573113798732)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+        
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: hystrixturbine/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/mvnw.cmd	(date 1573113798730)
+++ hystrixturbine/mvnw.cmd	(date 1573113798730)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: hystrixturbine/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/.gitignore	(date 1573113798776)
+++ hystrixturbine/.gitignore	(date 1573113798776)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: common/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- common/.mvn/wrapper/maven-wrapper.properties	(date 1572937325251)
+++ common/.mvn/wrapper/maven-wrapper.properties	(date 1572937325251)
@@ -0,0 +1,1 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip
Index: common/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/.mvn/wrapper/MavenWrapperDownloader.java	(date 1572937341842)
+++ common/.mvn/wrapper/MavenWrapperDownloader.java	(date 1572937341842)
@@ -0,0 +1,114 @@
+/*
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements.  See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership.  The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+"License"); you may not use this file except in compliance
+with the License.  You may obtain a copy of the License at
+
+  https://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied.  See the License for the
+specific language governing permissions and limitations
+under the License.
+*/
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.net.URL;
+import java.nio.channels.Channels;
+import java.nio.channels.ReadableByteChannel;
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL =
+            "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: : " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output direcrory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: hystrixturbine/src/main/java/cn/armylife/hystrixturbine/HystrixturbineApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/src/main/java/cn/armylife/hystrixturbine/HystrixturbineApplication.java	(date 1574235535504)
+++ hystrixturbine/src/main/java/cn/armylife/hystrixturbine/HystrixturbineApplication.java	(date 1574235535504)
@@ -0,0 +1,23 @@
+package cn.armylife.hystrixturbine;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.netflix.turbine.EnableTurbine;
+
+@SpringBootApplication
+@EnableDiscoveryClient
+@EnableHystrix
+@EnableHystrixDashboard
+@EnableTurbine
+@EnableCircuitBreaker
+public class HystrixturbineApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(HystrixturbineApplication.class, args);
+    }
+
+}
Index: hystrixturbine/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- hystrixturbine/src/main/resources/bootstrap.properties	(date 1572343488353)
+++ hystrixturbine/src/main/resources/bootstrap.properties	(date 1572343488353)
@@ -0,0 +1,4 @@
+spring.cloud.nacos.config.server-addr=127.0.0.1:8848+spring.cloud.nacos.config.prefix=member+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev
\ No newline at end of file
Index: hystrixturbine/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/src/main/resources/application.yml	(date 1574232768386)
+++ hystrixturbine/src/main/resources/application.yml	(date 1574232768386)
@@ -0,0 +1,26 @@
+server:
+  port: 8788
+spring:
+  application:
+    name: ArmyLifeturbine
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 127.0.0.1:8848
+management:
+  endpoints:
+    web:
+      exposure:
+        include: "*"
+      cors:
+        allowed-origins: "*"
+        allowed-methods: "*"
+
+turbine:
+  app-config: membersevice,marketservice
+  aggregator:
+    cluster-config: default
+  cluster-name-expression: new String("default")
+  combine-host-port: true
+  instanceUrlSuffix:
+    default: actuator/hystrix.stream
Index: hystrixturbine/src/test/java/cn/armylife/hystrixturbine/HystrixturbineApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/src/test/java/cn/armylife/hystrixturbine/HystrixturbineApplicationTests.java	(date 1573119281710)
+++ hystrixturbine/src/test/java/cn/armylife/hystrixturbine/HystrixturbineApplicationTests.java	(date 1573119281710)
@@ -0,0 +1,14 @@
+package cn.armylife.hystrixturbine;
+
+
+import org.junit.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class HystrixturbineApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: hystrixturbine/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- hystrixturbine/.mvn/wrapper/maven-wrapper.properties	(date 1573113798736)
+++ hystrixturbine/.mvn/wrapper/maven-wrapper.properties	(date 1573113798736)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: hystrixturbine/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hystrixturbine/.mvn/wrapper/MavenWrapperDownloader.java	(date 1574057325019)
+++ hystrixturbine/.mvn/wrapper/MavenWrapperDownloader.java	(date 1574057325019)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: market/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/mvnw.cmd	(date 1574213822023)
+++ market/mvnw.cmd	(date 1574213822023)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: market/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/mvnw	(date 1574213822021)
+++ market/mvnw	(date 1574213822021)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+        
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: market/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/.gitignore	(date 1574213822049)
+++ market/.gitignore	(date 1574213822049)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: integralmall/src/main/java/cn/armylife/integralmall/Mapper/PaymentsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/java/cn/armylife/integralmall/Mapper/PaymentsMapper.java	(date 1575884456991)
+++ integralmall/src/main/java/cn/armylife/integralmall/Mapper/PaymentsMapper.java	(date 1575884456991)
@@ -0,0 +1,79 @@
+package cn.armylife.integralmall.Mapper;
+
+import cn.armylife.common.Domain.Payments;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface PaymentsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int insert(Payments record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    Payments selectByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    List<Payments> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Payments record);
+
+    /**
+     * 查询商铺收入金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectPayForShop(Long receivName);
+
+    /**
+     * 查询商铺退款金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectRefundForShop(Long receivName);
+
+    /**
+     * 支付完成,更新支付数据
+     * @param payments
+     * @return
+     */
+    int updatePayMentsForCallback(Payments payments);
+
+    /**
+     * 查询支付记录(通过订单号)
+     * @param orderId
+     * @return
+     */
+    Payments selectPaments(Long orderId);
+
+}
\ No newline at end of file
Index: integralmall/src/main/resources/Mapper/PaymentsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575884457246)
+++ integralmall/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575884457246)
@@ -0,0 +1,148 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.integralmall.Mapper.PaymentsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="payments_id" jdbcType="BIGINT" property="paymentsId" />
+    <result column="order_id" jdbcType="BIGINT" property="orderId" />
+    <result column="pay_name" jdbcType="INTEGER" property="payName" />
+    <result column="receiv_name" jdbcType="INTEGER" property="receivName" />
+    <result column="pay_total" jdbcType="DECIMAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
+    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
+    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
+    <result column="pay_app" jdbcType="VARCHAR" property="payApp" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+    <result column="pay_refund" jdbcType="INTEGER" property="payRefund" />
+    <result column="refund_desc" jdbcType="VARCHAR" property="refundDesc" />
+    <result column="refund_total" jdbcType="DECIMAL" property="refundTotal" />
+    <result column="refuns_time" jdbcType="VARCHAR" property="refunsTime" />
+    <result column="refunds_bumber" jdbcType="VARCHAR" property="refundsNumber" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="paymentsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into payments (order_id, pay_name, receiv_name, 
+      pay_total, pay_desc, pay_status, 
+      pay_order, pay_number, creat_time, 
+      end_time, pay_refund, refund_desc, 
+      refund_total, refuns_time, refunds_number
+      )
+    values (#{orderId,jdbcType=BIGINT}, #{payName,jdbcType=INTEGER}, #{receivName,jdbcType=INTEGER}, 
+      #{payTotal,jdbcType=DECIMAL}, #{payDesc,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, 
+      #{payOrder,jdbcType=INTEGER}, #{payNumber,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, 
+      #{endTime,jdbcType=VARCHAR}, #{payRefund,jdbcType=INTEGER}, #{refundDesc,jdbcType=VARCHAR}, 
+      #{refundTotal,jdbcType=DECIMAL}, #{refunsTime,jdbcType=VARCHAR}, #{refundsNumber,jdbcType=VARCHAR}
+      )
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update payments
+    set order_id = #{orderId,jdbcType=BIGINT},
+      pay_name = #{payName,jdbcType=INTEGER},
+      receiv_name = #{receivName,jdbcType=INTEGER},
+      pay_total = #{payTotal,jdbcType=DECIMAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR},
+      pay_status = #{payStatus,jdbcType=VARCHAR},
+      pay_order = #{payOrder,jdbcType=INTEGER},
+      pay_number = #{payNumber,jdbcType=VARCHAR},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      end_time = #{endTime,jdbcType=VARCHAR},
+      pay_refund = #{payRefund,jdbcType=INTEGER},
+      refund_desc = #{refundDesc,jdbcType=VARCHAR},
+      refund_total = #{refundTotal,jdbcType=DECIMAL},
+      refuns_time = #{refunsTime,jdbcType=VARCHAR},
+      refunds_number = #{refundsNumber,jdbcType=VARCHAR}
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+  </select>
+  
+<!--  查询商铺收入金额-->
+  <select id="SelectPayForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName}
+  </select>
+  
+<!--  查询商铺退款金额-->
+  <select id="SelectRefundForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName} and pay_refund=#{payRefund}
+  </select>
+  
+  <update id="updatePayMentsForCallback" >
+    update payments 
+    <set>
+      <if test="payStatus!=null">
+        pay_status=#{payStatus},
+      </if>
+      <if test="payNumber!=null">
+        pay_number=#{payNumber},
+      </if>
+      <if test="endTime!=null">
+        end_time=#{endTime},
+      </if>
+      <if test="payApp!=null">
+        pay_app=#{payApp}
+      </if>
+      <if test="refundsNumber!=null">
+        refunds_number=#{refundsNumber}
+      </if>
+      <if test="refundTotal!=null">
+        refund_total=#{refundTotal}
+      </if>
+      <if test="payRefund!=null">
+        pay_refund=#{payRefund}
+      </if>
+      <if test="refundDesc!=null">
+        refund_desc=#{refundDesc}
+      </if>
+      <if test="refunsTime!=null">
+        refuns_time=#{refunsTime}
+      </if>
+    </set>
+    where payments_id=#{paymentsId}
+  </update>
+
+  <select id="selectPaments" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where order_id=#{orderId}
+  </select>
+</mapper>
\ No newline at end of file
Index: member/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/mvnw	(date 1572342826149)
+++ member/mvnw	(date 1572342826149)
@@ -0,0 +1,286 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+  # TODO classpath?
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        wget "$jarUrl" -O "$wrapperJarPath"
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        curl -o "$wrapperJarPath" "$jarUrl"
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: out/production/integralmall/Mapper/PaymentsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/PaymentsMapper.xml	(date 1575940855326)
+++ out/production/integralmall/Mapper/PaymentsMapper.xml	(date 1575940855326)
@@ -0,0 +1,148 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.integralmall.Mapper.PaymentsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="payments_id" jdbcType="BIGINT" property="paymentsId" />
+    <result column="order_id" jdbcType="BIGINT" property="orderId" />
+    <result column="pay_name" jdbcType="INTEGER" property="payName" />
+    <result column="receiv_name" jdbcType="INTEGER" property="receivName" />
+    <result column="pay_total" jdbcType="DECIMAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
+    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
+    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
+    <result column="pay_app" jdbcType="VARCHAR" property="payApp" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+    <result column="pay_refund" jdbcType="INTEGER" property="payRefund" />
+    <result column="refund_desc" jdbcType="VARCHAR" property="refundDesc" />
+    <result column="refund_total" jdbcType="DECIMAL" property="refundTotal" />
+    <result column="refuns_time" jdbcType="VARCHAR" property="refunsTime" />
+    <result column="refunds_bumber" jdbcType="VARCHAR" property="refundsNumber" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="paymentsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into payments (order_id, pay_name, receiv_name, 
+      pay_total, pay_desc, pay_status, 
+      pay_order, pay_number, creat_time, 
+      end_time, pay_refund, refund_desc, 
+      refund_total, refuns_time, refunds_number
+      )
+    values (#{orderId,jdbcType=BIGINT}, #{payName,jdbcType=INTEGER}, #{receivName,jdbcType=INTEGER}, 
+      #{payTotal,jdbcType=DECIMAL}, #{payDesc,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, 
+      #{payOrder,jdbcType=INTEGER}, #{payNumber,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, 
+      #{endTime,jdbcType=VARCHAR}, #{payRefund,jdbcType=INTEGER}, #{refundDesc,jdbcType=VARCHAR}, 
+      #{refundTotal,jdbcType=DECIMAL}, #{refunsTime,jdbcType=VARCHAR}, #{refundsNumber,jdbcType=VARCHAR}
+      )
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update payments
+    set order_id = #{orderId,jdbcType=BIGINT},
+      pay_name = #{payName,jdbcType=INTEGER},
+      receiv_name = #{receivName,jdbcType=INTEGER},
+      pay_total = #{payTotal,jdbcType=DECIMAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR},
+      pay_status = #{payStatus,jdbcType=VARCHAR},
+      pay_order = #{payOrder,jdbcType=INTEGER},
+      pay_number = #{payNumber,jdbcType=VARCHAR},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      end_time = #{endTime,jdbcType=VARCHAR},
+      pay_refund = #{payRefund,jdbcType=INTEGER},
+      refund_desc = #{refundDesc,jdbcType=VARCHAR},
+      refund_total = #{refundTotal,jdbcType=DECIMAL},
+      refuns_time = #{refunsTime,jdbcType=VARCHAR},
+      refunds_number = #{refundsNumber,jdbcType=VARCHAR}
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+    where payments_id = #{paymentsId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, order_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, 
+    pay_order, pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, 
+    refuns_time, refunds_number
+    from payments
+  </select>
+  
+<!--  查询商铺收入金额-->
+  <select id="SelectPayForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName}
+  </select>
+  
+<!--  查询商铺退款金额-->
+  <select id="SelectRefundForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where receiv_name=#{receivName} and pay_refund=#{payRefund}
+  </select>
+  
+  <update id="updatePayMentsForCallback" >
+    update payments 
+    <set>
+      <if test="payStatus!=null">
+        pay_status=#{payStatus},
+      </if>
+      <if test="payNumber!=null">
+        pay_number=#{payNumber},
+      </if>
+      <if test="endTime!=null">
+        end_time=#{endTime},
+      </if>
+      <if test="payApp!=null">
+        pay_app=#{payApp}
+      </if>
+      <if test="refundsNumber!=null">
+        refunds_number=#{refundsNumber}
+      </if>
+      <if test="refundTotal!=null">
+        refund_total=#{refundTotal}
+      </if>
+      <if test="payRefund!=null">
+        pay_refund=#{payRefund}
+      </if>
+      <if test="refundDesc!=null">
+        refund_desc=#{refundDesc}
+      </if>
+      <if test="refunsTime!=null">
+        refuns_time=#{refunsTime}
+      </if>
+    </set>
+    where payments_id=#{paymentsId}
+  </update>
+
+  <select id="selectPaments" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from payments where order_id=#{orderId}
+  </select>
+</mapper>
\ No newline at end of file
Index: common/src/main/java/cn/armylife/common/Domain/MallProductsPicture.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Domain/MallProductsPicture.java	(date 1575959781020)
+++ common/src/main/java/cn/armylife/common/Domain/MallProductsPicture.java	(date 1575959781020)
@@ -0,0 +1,129 @@
+package cn.armylife.common.Domain;
+
+import java.io.Serializable;
+
+public class MallProductsPicture implements Serializable {
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_picture.mall_products_pocture_id
+     *
+     * @mbggenerated
+     */
+    private Long mallProductsPoctureId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_picture.product_id
+     *
+     * @mbggenerated
+     */
+    private Long productId;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database column mall_products_picture.picture_url
+     *
+     * @mbggenerated
+     */
+    private String pictureUrl;
+
+    /**
+     * This field was generated by MyBatis Generator.
+     * This field corresponds to the database table mall_products_picture
+     *
+     * @mbggenerated
+     */
+    private static final long serialVersionUID = 1L;
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_picture.mall_products_pocture_id
+     *
+     * @return the value of mall_products_picture.mall_products_pocture_id
+     *
+     * @mbggenerated
+     */
+    public Long getMallProductsPoctureId() {
+        return mallProductsPoctureId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_picture.mall_products_pocture_id
+     *
+     * @param mallProductsPoctureId the value for mall_products_picture.mall_products_pocture_id
+     *
+     * @mbggenerated
+     */
+    public void setMallProductsPoctureId(Long mallProductsPoctureId) {
+        this.mallProductsPoctureId = mallProductsPoctureId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_picture.product_id
+     *
+     * @return the value of mall_products_picture.product_id
+     *
+     * @mbggenerated
+     */
+    public Long getProductId() {
+        return productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_picture.product_id
+     *
+     * @param productId the value for mall_products_picture.product_id
+     *
+     * @mbggenerated
+     */
+    public void setProductId(Long productId) {
+        this.productId = productId;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method returns the value of the database column mall_products_picture.picture_url
+     *
+     * @return the value of mall_products_picture.picture_url
+     *
+     * @mbggenerated
+     */
+    public String getPictureUrl() {
+        return pictureUrl;
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method sets the value of the database column mall_products_picture.picture_url
+     *
+     * @param pictureUrl the value for mall_products_picture.picture_url
+     *
+     * @mbggenerated
+     */
+    public void setPictureUrl(String pictureUrl) {
+        this.pictureUrl = pictureUrl == null ? null : pictureUrl.trim();
+    }
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_picture
+     *
+     * @mbggenerated
+     */
+    @Override
+    public String toString() {
+        StringBuilder sb = new StringBuilder();
+        sb.append(getClass().getSimpleName());
+        sb.append(" [");
+        sb.append("Hash = ").append(hashCode());
+        sb.append(", mallProductsPoctureId=").append(mallProductsPoctureId);
+        sb.append(", productId=").append(productId);
+        sb.append(", pictureUrl=").append(pictureUrl);
+        sb.append(", serialVersionUID=").append(serialVersionUID);
+        sb.append("]");
+        return sb.toString();
+    }
+}
\ No newline at end of file
Index: member/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/mvnw.cmd	(date 1572342826147)
+++ member/mvnw.cmd	(date 1572342826147)
@@ -0,0 +1,161 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar"
+FOR /F "tokens=1,2 delims==" %%A IN (%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties) DO (
+	IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B 
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    echo Found %WRAPPER_JAR%
+) else (
+    echo Couldn't find %WRAPPER_JAR%, downloading it ...
+	echo Downloading from: %DOWNLOAD_URL%
+    powershell -Command "(New-Object Net.WebClient).DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"
+    echo Finished downloading %WRAPPER_JAR%
+)
+@REM End of extension
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: common/src/main/resources/Mapper/MallProductsPictureMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/resources/Mapper/MallProductsPictureMapper.xml	(date 1575959781015)
+++ common/src/main/resources/Mapper/MallProductsPictureMapper.xml	(date 1575959781015)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.common.Mapper.MallProductsPictureMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_products_pocture_id" property="mallProductsPoctureId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into mall_products_picture (mall_products_pocture_id, product_id, picture_url
+      )
+    values (#{mallProductsPoctureId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{pictureUrl,jdbcType=VARCHAR}
+      )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_products_pocture_id, product_id, picture_url
+    from mall_products_picture
+  </select>
+</mapper>
\ No newline at end of file
Index: member/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/.gitignore	(date 1572342826170)
+++ member/.gitignore	(date 1572342826170)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: payments/src/main/java/cn/armylife/payments/FeignService/integral.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/FeignService/integral.java	(date 1575941880194)
+++ payments/src/main/java/cn/armylife/payments/FeignService/integral.java	(date 1575941880194)
@@ -0,0 +1,13 @@
+package cn.armylife.payments.FeignService;
+
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "integralservice" )
+public interface integral {
+
+    @RequestMapping(value = "integralIncrease",method = RequestMethod.GET)
+    int integralIncrease(@RequestParam Integer integral);
+}
Index: member/src/main/java/cn/armylife/member/Util/sha1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/sha1.java	(date 1573608728792)
+++ member/src/main/java/cn/armylife/member/Util/sha1.java	(date 1573608728792)
@@ -0,0 +1,31 @@
+package cn.armylife.member.Util;
+
+import java.security.MessageDigest;
+
+public class sha1 {
+
+
+    public static String getSha1(String str){
+        if(str == null || str.length()==0){
+            return null;
+        }
+        char hexDigits[]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
+
+        try {
+            MessageDigest mdTemp = MessageDigest.getInstance("SHA1");
+            mdTemp.update(str.getBytes("UTF-8"));
+
+            byte[] md = mdTemp.digest();
+            int j = md.length;
+            char buf[] = new char[j*2];
+            int k = 0;
+            for(int i=0;i<j;i++){
+                byte byte0 = md[i];
+                buf[k++] = hexDigits[byte0 >>> 4 & 0xf];
+                buf[k++] = hexDigits[byte0 & 0xf];
+            }
+            return new String(buf);
+        } catch (Exception e) {
+            return null;
+        }
+    }}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Util/WXPayUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/WXPayUtil.java	(date 1574220996701)
+++ member/src/main/java/cn/armylife/member/Util/WXPayUtil.java	(date 1574220996701)
@@ -0,0 +1,527 @@
+package cn.armylife.member.Util;
+
+import com.alibaba.csp.sentinel.util.StringUtil;
+import com.alibaba.fastjson.JSONObject;
+import com.github.wxpay.sdk.WXPayConstants;
+import com.github.wxpay.sdk.WXPayConstants.SignType;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+import javax.servlet.http.HttpServletRequest;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import java.io.*;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLEncoder;
+import java.security.MessageDigest;
+import java.security.SecureRandom;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+
+public class WXPayUtil {
+
+    private static final String SYMBOLS = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
+    private static final Random RANDOM = new SecureRandom();
+
+    /**
+     * XML格式字符串转换为Map
+     *
+     * @param strXML XML字符串
+     * @return XML数据转换后的Map
+     * @throws Exception
+     */
+    public static Map<String, String> xmlToMap(String strXML) throws Exception {
+        try {
+            Map<String, String> data = new HashMap<String, String>();
+            DocumentBuilder documentBuilder = WXPayXmlUtil.newDocumentBuilder();
+            InputStream stream = new ByteArrayInputStream(strXML.getBytes("UTF-8"));
+            org.w3c.dom.Document doc = documentBuilder.parse(stream);
+            doc.getDocumentElement().normalize();
+            NodeList nodeList = doc.getDocumentElement().getChildNodes();
+            for (int idx = 0; idx < nodeList.getLength(); ++idx) {
+                Node node = nodeList.item(idx);
+                if (node.getNodeType() == Node.ELEMENT_NODE) {
+                    org.w3c.dom.Element element = (org.w3c.dom.Element) node;
+                    data.put(element.getNodeName(), element.getTextContent());
+                }
+            }
+            try {
+                stream.close();
+            } catch (Exception ex) {
+                // do nothing
+            }
+            return data;
+        } catch (Exception ex) {
+            WXPayUtil.getLogger().warn("Invalid XML, can not convert to map. Error message: {}. XML content: {}", ex.getMessage(), strXML);
+            throw ex;
+        }
+
+    }
+
+    /**
+     * 将Map转换为XML格式的字符串
+     *
+     * @param data Map类型数据
+     * @return XML格式的字符串
+     * @throws Exception
+     */
+    public static String mapToXml(Map<String, String> data) throws Exception {
+        org.w3c.dom.Document document = WXPayXmlUtil.newDocument();
+        org.w3c.dom.Element root = document.createElement("xml");
+        document.appendChild(root);
+        for (String key: data.keySet()) {
+            String value = data.get(key);
+            if (value == null) {
+                value = "";
+            }
+            value = value.trim();
+            org.w3c.dom.Element filed = document.createElement(key);
+            filed.appendChild(document.createTextNode(value));
+            root.appendChild(filed);
+        }
+        TransformerFactory tf = TransformerFactory.newInstance();
+        Transformer transformer = tf.newTransformer();
+        DOMSource source = new DOMSource(document);
+        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
+        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
+        StringWriter writer = new StringWriter();
+        StreamResult result = new StreamResult(writer);
+        transformer.transform(source, result);
+        String output = writer.getBuffer().toString(); //.replaceAll("\n|\r", "");
+        try {
+            writer.close();
+        }
+        catch (Exception ex) {
+        }
+        return output;
+    }
+
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key) throws Exception {
+        return generateSignedXml(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名类型
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key, SignType signType) throws Exception {
+        String sign = generateSignature(data, key, signType);
+        data.put(WXPayConstants.FIELD_SIGN, sign);
+        return mapToXml(data);
+    }
+
+
+    /**
+     * 判断签名是否正确
+     *
+     * @param xmlStr XML格式数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(String xmlStr, String key) throws Exception {
+        Map<String, String> data = xmlToMap(xmlStr);
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key).equals(sign);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。使用MD5签名。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key) throws Exception {
+        return isSignatureValid(data, key, SignType.MD5);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key, SignType signType) throws Exception {
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key, signType).equals(sign);
+    }
+
+    /**
+     * 生成签名
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key) throws Exception {
+        return generateSignature(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成签名. 注意，若含有sign_type字段，必须和signType参数保持一致。
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key, SignType signType) throws Exception {
+        Set<String> keySet = data.keySet();
+        String[] keyArray = keySet.toArray(new String[keySet.size()]);
+        Arrays.sort(keyArray);
+        StringBuilder sb = new StringBuilder();
+        for (String k : keyArray) {
+            if (k.equals(WXPayConstants.FIELD_SIGN)) {
+                continue;
+            }
+            if (data.get(k).trim().length() > 0) // 参数值为空，则不参与签名
+                sb.append(k).append("=").append(data.get(k).trim()).append("&");
+        }
+        sb.append("key=").append(key);
+        if (SignType.MD5.equals(signType)) {
+            return MD5(sb.toString()).toUpperCase();
+        }
+        else if (SignType.HMACSHA256.equals(signType)) {
+            return HMACSHA256(sb.toString(), key);
+        }
+        else {
+            throw new Exception(String.format("Invalid sign_type: %s", signType));
+        }
+    }
+
+
+    /**
+     * 获取随机字符串 Nonce Str
+     *
+     * @return String 随机字符串
+     */
+    public static String generateNonceStr() {
+        char[] nonceChars = new char[32];
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        return new String(nonceChars);
+    }
+
+
+    /**
+     * 生成 MD5
+     *
+     * @param data 待处理数据
+     * @return MD5结果
+     */
+    public static String MD5(String data) throws Exception {
+        MessageDigest md = MessageDigest.getInstance("MD5");
+        byte[] array = md.digest(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 生成 HMACSHA256
+     * @param data 待处理数据
+     * @param key 密钥
+     * @return 加密结果
+     * @throws Exception
+     */
+    public static String HMACSHA256(String data, String key) throws Exception {
+        Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
+        SecretKeySpec secret_key = new SecretKeySpec(key.getBytes("UTF-8"), "HmacSHA256");
+        sha256_HMAC.init(secret_key);
+        byte[] array = sha256_HMAC.doFinal(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 日志
+     * @return
+     */
+    public static Logger getLogger() {
+        Logger logger = LoggerFactory.getLogger("wxpay java sdk");
+        return logger;
+    }
+
+    /**
+     * 获取当前时间戳，单位秒
+     * @return
+     */
+    public static long getCurrentTimestamp() {
+        return System.currentTimeMillis()/1000;
+    }
+
+    /**
+     * 获取当前时间戳，单位毫秒
+     * @return
+     */
+    public static String getCurrentTimestampMs() {
+        return String.valueOf(System.currentTimeMillis());
+    }
+
+    public static String generateOrderId() {
+        char[] nonceChars = new char[6];  //6个随机字符
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");//设置日期格式
+        String orderId1=df.format(new Date());
+
+        String orderI2=new String(nonceChars);
+        String orderId =orderId1+orderI2;
+        return orderId;
+    }
+
+    public static String sendPost(String url, String param) {
+        PrintWriter out = null;
+        BufferedReader in = null;
+        String result = "";
+        try {
+            URL realUrl = new URL(url);
+            // 打开和URL之间的连接
+            URLConnection conn = realUrl.openConnection();
+            // 设置通用的请求属性
+            conn.setRequestProperty("accept", "*/*");
+            conn.setRequestProperty("connection", "Keep-Alive");
+            conn.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            // 发送POST请求必须设置如下两行
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            // 获取URLConnection对象对应的输出流
+            out = new PrintWriter(conn.getOutputStream());
+            // 发送请求参数
+            out.print(param);
+            // flush输出流的缓冲
+            out.flush();
+            // 定义BufferedReader输入流来读取URL的响应
+            in = new BufferedReader(
+                    new InputStreamReader(conn.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            System.out.println("发送 POST 请求出现异常！"+e);
+            e.printStackTrace();
+        }
+        //使用finally块来关闭输出流、输入流
+        finally{
+            try{
+                if(out!=null){
+                    out.close();
+                }
+                if(in!=null){
+                    in.close();
+                }
+            }
+            catch(IOException ex){
+                ex.printStackTrace();
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 返回客户端ip
+     *
+     * @param request
+     * @return
+     */
+    public static String getRemoteAddrIp(HttpServletRequest request) {
+        String ip = request.getHeader("X-Forwarded-For");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            // 多次反向代理后会有多个ip值，第一个ip才是真实ip
+            int index = ip.indexOf(",");
+            if (index != -1) {
+                return ip.substring(0, index);
+            } else {
+
+                return ip;
+            }
+        }
+        ip = request.getHeader("X-Real-IP");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            return ip;
+        }
+        return request.getRemoteAddr();
+    }
+
+
+    /**
+     * 构造签名
+     *
+     * @param params
+     * @param encode
+     * @return
+     * @throws UnsupportedEncodingException
+     */
+    public static String createSign(Map<String, String> params, boolean encode) throws UnsupportedEncodingException {
+        Set<String> keysSet = params.keySet();
+        Object[] keys = keysSet.toArray();
+        Arrays.sort(keys);
+        StringBuffer temp = new StringBuffer();
+        boolean first = true;
+        for (Object key : keys) {
+            if (key == null || StringUtil.isEmpty(params.get(key))) // 参数为空不参与签名
+                continue;
+            if (first) {
+                first = false;
+            } else {
+                temp.append("&");
+            }
+            temp.append(key).append("=");
+            Object value = params.get(key);
+            String valueStr = "";
+            if (null != value) {
+                valueStr = value.toString();
+            }
+            if (encode) {
+                temp.append(URLEncoder.encode(valueStr, "UTF-8"));
+            } else {
+                temp.append(valueStr);
+            }
+        }
+        return temp.toString();
+    }
+
+    /**
+     * 获取服务器的ip地址
+     *
+     * @param request
+     * @return
+     */
+    public static String getLocalIp(HttpServletRequest request) {
+        return request.getLocalAddr();
+    }
+
+    public static final String inputStream2String(InputStream in) throws UnsupportedEncodingException, IOException {
+        if(in == null)
+            return "";
+
+        StringBuffer out = new StringBuffer();
+        byte[] b = new byte[4096];
+        for (int n; (n = in.read(b)) != -1;) {
+            out.append(new String(b, 0, n, "UTF-8"));
+        }
+        return out.toString();
+    }
+
+    //获取token
+    public static String getAccessToken(String AppId, String secret) {
+
+        String access_token = "";
+        String grant_type = "client_credential";//获取access_token填写client_credential
+
+        //这个url链接地址和参数皆不能变
+        String url = "https://api.weixin.qq.com/cgi-bin/token?grant_type="+grant_type+"&appid="+AppId+"&secret="+secret;  //访问链接
+
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            /*System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒 */
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            access_token = demoJson.getString("access_token");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return access_token;
+    }
+
+    //获取ticket
+    public static String getTicket(String access_token) {
+        String ticket = null;
+        String url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token="+ access_token +"&type=jsapi";//这个url链接和参数不能变
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            ticket = demoJson.getString("ticket");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return ticket;
+    }
+
+    public static String getfree(String free) {
+        int index = free.indexOf(".");
+        int length = free.length();
+        Long amLong = 0L;
+        if(index == -1){
+            amLong = Long.valueOf(free+"00");
+        }else if(length - index >= 3){
+            amLong = Long.valueOf((free.substring(0, index+3)).replace(".", ""));
+        }else if(length - index == 2){
+            amLong = Long.valueOf((free.substring(0, index+2)).replace(".", "")+0);
+        }else{
+            amLong = Long.valueOf((free.substring(0, index+1)).replace(".", "")+"00");
+        }
+        return amLong.toString();
+    }
+
+}
Index: out/production/integralmall/Mapper/MallProductsPictureMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/MallProductsPictureMapper.xml	(date 1575959830769)
+++ out/production/integralmall/Mapper/MallProductsPictureMapper.xml	(date 1575959830769)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallProductsPictureMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_products_pocture_id" property="mallProductsPoctureId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into mall_products_picture (mall_products_pocture_id, product_id, picture_url
+      )
+    values (#{mallProductsPoctureId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{pictureUrl,jdbcType=VARCHAR}
+      )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_products_pocture_id, product_id, picture_url
+    from mall_products_picture
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Util/MemberWXMyConfigUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/MemberWXMyConfigUtil.java	(date 1573701164472)
+++ member/src/main/java/cn/armylife/member/Util/MemberWXMyConfigUtil.java	(date 1573701164472)
@@ -0,0 +1,64 @@
+package cn.armylife.member.Util;
+
+import cn.armylife.member.Domain.WeChatUsers;
+import com.github.wxpay.sdk.WXPayConfig;
+import org.apache.commons.io.IOUtils;
+import org.springframework.stereotype.Component;
+
+import java.io.ByteArrayInputStream;
+import java.io.InputStream;
+
+@Component
+public class MemberWXMyConfigUtil implements WXPayConfig {
+        private byte[] certData;
+        WeChatUsers weChatUsers;
+
+//        public MemberWXMyConfigUtil() throws Exception {
+//            Resource resource = new ClassPathResource("/apiclient_cert.p12");//"apiclient_cert.p12";//从微信商户平台下载的安全证书存放的目录
+//          // String certPath="E:\\javaPicture\\yezz\\apiclient_cert.p12";
+//            File file = resource.getFile();
+//            InputStream certStream = new FileInputStream(file);
+//            this.certData = new byte[(int) file.length()];
+//            certStream.read(this.certData);
+//            certStream.close();
+//        }
+
+        @Override
+        public String getAppID() {
+            return weChatUsers.getAppId();
+        }
+
+        //parnerid
+        @Override
+        public String getMchID() {
+            return weChatUsers.getMCHID();
+        }
+
+        @Override
+        public String getKey() {
+            return weChatUsers.getKEY();
+        }
+
+        @Override
+        public InputStream getCertStream() {
+            try {
+                InputStream certStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("apiclient_cert.p12");
+                this.certData = IOUtils.toByteArray(certStream);
+                certStream.close();
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+            ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);
+            return certBis;
+        }
+
+        @Override
+        public int getHttpConnectTimeoutMs() {
+            return 8000;
+        }
+
+        @Override
+        public int getHttpReadTimeoutMs() {
+            return 10000;
+        }
+    }
Index: common/src/main/java/cn/armylife/common/Mapper/MallProductsPictureMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- common/src/main/java/cn/armylife/common/Mapper/MallProductsPictureMapper.java	(date 1575959781028)
+++ common/src/main/java/cn/armylife/common/Mapper/MallProductsPictureMapper.java	(date 1575959781028)
@@ -0,0 +1,22 @@
+package cn.armylife.common.Mapper;
+
+import cn.armylife.common.Domain.MallProductsPicture;
+import java.util.List;
+
+public interface MallProductsPictureMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_picture
+     *
+     * @mbggenerated
+     */
+    int insert(MallProductsPicture record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table mall_products_picture
+     *
+     * @mbggenerated
+     */
+    List<MallProductsPicture> selectAll();
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Util/HttpGet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/HttpGet.java	(date 1573194623679)
+++ member/src/main/java/cn/armylife/member/Util/HttpGet.java	(date 1573194623679)
@@ -0,0 +1,51 @@
+package cn.armylife.member.Util;++import org.springframework.stereotype.Service;++import javax.servlet.http.HttpServlet;+import java.io.BufferedReader;+import java.io.IOException;+import java.io.InputStreamReader;+import java.net.URL;+import java.net.URLConnection;++@Service+public class HttpGet extends HttpServlet {+    //HttpGet方法+    public static String HttpGet(String URL, String GetDataStr){++        String getUrl = URL+GetDataStr;+        StringBuffer sb = new StringBuffer();+        InputStreamReader isr = null;+        BufferedReader br = null;+        try+        {+            java.net.URL url = new URL(getUrl);+            URLConnection urlConnection = url.openConnection();+            urlConnection.setAllowUserInteraction(false);+            isr = new InputStreamReader(url.openStream());+            br = new BufferedReader(isr);+            String line;+            while ((line = br.readLine()) != null)+            {+                sb.append(line);+            }+        }+        catch (IOException e)+        {+            e.printStackTrace();+        }+        finally+        {+            try {+                br.close();+                isr.close();+            } catch (IOException e) {+                e.printStackTrace();+            }+        }+        return sb.toString();+    }+++}Index: integralmall/src/main/resources/Mapper/MallProductsPictureMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- integralmall/src/main/resources/Mapper/MallProductsPictureMapper.xml	(date 1575959830769)
+++ integralmall/src/main/resources/Mapper/MallProductsPictureMapper.xml	(date 1575959830769)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallProductsPictureMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_products_pocture_id" property="mallProductsPoctureId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="picture_url" property="pictureUrl" jdbcType="VARCHAR" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallProductsPicture" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    insert into mall_products_picture (mall_products_pocture_id, product_id, picture_url
+      )
+    values (#{mallProductsPoctureId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{pictureUrl,jdbcType=VARCHAR}
+      )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_products_pocture_id, product_id, picture_url
+    from mall_products_picture
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Util/AliDayunSms.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/AliDayunSms.java	(date 1575251410022)
+++ member/src/main/java/cn/armylife/member/Util/AliDayunSms.java	(date 1575251410022)
@@ -0,0 +1,140 @@
+package cn.armylife.member.Util;
+
+import com.aliyuncs.DefaultAcsClient;
+import com.aliyuncs.IAcsClient;
+import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;
+import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;
+import com.aliyuncs.exceptions.ClientException;
+import com.aliyuncs.http.MethodType;
+import com.aliyuncs.profile.DefaultProfile;
+import com.aliyuncs.profile.IClientProfile;
+
+import java.util.Random;
+
+/**
+ * 用于阿里短信验证的工具类
+ * author WuZheng
+ * 2019-4-10
+ */
+public class AliDayunSms {
+
+    /**
+    public static void main(String[] args) throws ClientException {
+        AliDayunSms aliDayunSms=new AliDayunSms();
+        String Message=aliDayunSms.SMS("13766464510",aliDayunSms.getMsgCode(),"SMS_163130007");
+        System.out.println(Message);
+    }
+*/
+    /**
+     * 短信验证的方法
+     * @param phone 电话号码
+     * @param msgCode  随机数
+     * @param TemplateCode  短信模板编号
+     * @return  返回发送的状态
+     * @throws ClientException
+     */
+     public String SMS(String phone, String msgCode, String TemplateCode) throws ClientException {
+        String Message=null;
+         //设置超时时间-可自行调整
+         System.setProperty("sun.net.client.defaultConnectTimeout", "10000");
+         System.setProperty("sun.net.client.defaultReadTimeout", "10000");
+         //初始化ascClient需要的几个参数
+         final String product = "Dysmsapi";//短信API产品名称（短信产品名固定，无需修改）
+         final String domain = "dysmsapi.aliyuncs.com";//短信API产品域名（接口地址固定，无需修改）
+         //替换成你的AK
+         final String accessKeyId = "LTAIDXTOjIu40nV3";//你的accessKeyId
+         final String accessKeySecret = "GVBQierJFbh6yMYj5dO9DTQtnvRkMw";//你的accessKeySecret
+         //初始化ascClient,暂时不支持多region（请勿修改）
+         IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, accessKeySecret);
+         DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain);
+         IAcsClient acsClient = new DefaultAcsClient(profile);
+         //组装请求对象
+         SendSmsRequest request = new SendSmsRequest();
+         //使用post提交
+         request.setMethod(MethodType.POST);
+         //必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式；发送国际/港澳台消息时，接收号码格式为00+国际区号+号码，如“0085200000000”
+         request.setPhoneNumbers(phone);
+         //必填:短信签名-可在短信控制台中找到
+         request.setSignName("ONEOFFER");
+         //必填:短信模板-可在短信控制台中找到，发送国际/港澳台消息时，请使用国际/港澳台短信模版
+         request.setTemplateCode(TemplateCode);
+         //可选:模板中的变量替换JSON串,如模板内容为"亲爱的${name},您的验证码为${code}"时,此处的值为
+         //友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败
+         //request.setTemplateParam("{\"code\":\"988756\"}");
+       //  String msgCode = getMsgCode();
+         // String jsonStr = "{\"name\":\"11\",\"time\":\"2014-10-21\"}";
+         request.setTemplateParam("{\"code\":\"" + msgCode + "\"}");
+         //请求失败这里会抛ClientException异常
+         SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);
+         if (sendSmsResponse.getCode() != null && sendSmsResponse.getCode().equals("OK")) {
+             //请求成功
+             Message="=====success====";
+         } else {
+             Message="=====fail=======";
+         }
+         return  Message;
+     }
+
+
+    /**
+     * 短信验证的方法
+     * @param phone 电话号码
+     * @param TemplateCode  短信模板编号
+     * @return  返回发送的状态
+     * @throws ClientException
+     */
+    public String SMS1(String phone, String TemplateCode) throws ClientException {
+        String Message=null;
+        //设置超时时间-可自行调整
+        System.setProperty("sun.net.client.defaultConnectTimeout", "10000");
+        System.setProperty("sun.net.client.defaultReadTimeout", "10000");
+        //初始化ascClient需要的几个参数
+        final String product = "Dysmsapi";//短信API产品名称（短信产品名固定，无需修改）
+        final String domain = "dysmsapi.aliyuncs.com";//短信API产品域名（接口地址固定，无需修改）
+        //替换成你的AK
+        final String accessKeyId = "LTAIDXTOjIu40nV3";//你的accessKeyId
+        final String accessKeySecret = "GVBQierJFbh6yMYj5dO9DTQtnvRkMw";//你的accessKeySecret
+        //初始化ascClient,暂时不支持多region（请勿修改）
+        IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou", accessKeyId, accessKeySecret);
+        DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product, domain);
+        IAcsClient acsClient = new DefaultAcsClient(profile);
+        //组装请求对象
+        SendSmsRequest request = new SendSmsRequest();
+        //使用post提交
+        request.setMethod(MethodType.POST);
+        //必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式；发送国际/港澳台消息时，接收号码格式为00+国际区号+号码，如“0085200000000”
+        request.setPhoneNumbers(phone);
+        //必填:短信签名-可在短信控制台中找到
+        request.setSignName("ONEOFFER");
+        //必填:短信模板-可在短信控制台中找到，发送国际/港澳台消息时，请使用国际/港澳台短信模版
+        request.setTemplateCode(TemplateCode);
+        //可选:模板中的变量替换JSON串,如模板内容为"亲爱的${name},您的验证码为${code}"时,此处的值为
+        //友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败
+        //request.setTemplateParam("{\"code\":\"988756\"}");
+        //  String msgCode = getMsgCode();
+        //请求失败这里会抛ClientException异常
+        SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);
+        if (sendSmsResponse.getCode() != null && sendSmsResponse.getCode().equals("OK")) {
+            //请求成功
+            Message="=====success====";
+        } else {
+            Message="=====fail=======";
+        }
+        return  Message;
+    }
+
+    /**
+     * 生成随机的6位数，短信验证码
+     * @return
+     */
+    public String getMsgCode() {
+        int n = 6;
+        StringBuilder code = new StringBuilder();
+        Random ran = new Random();
+        for (int i = 0; i < n; i++) {
+            code.append(Integer.valueOf(ran.nextInt(10)).toString());
+        }
+        return code.toString();
+    }
+
+}
Index: member/src/main/java/cn/armylife/member/Util/PasswordEncoderUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/PasswordEncoderUtil.java	(date 1574044118164)
+++ member/src/main/java/cn/armylife/member/Util/PasswordEncoderUtil.java	(date 1574044118164)
@@ -0,0 +1,39 @@
+package cn.armylife.member.Util;
+
+/*
+ * Copyright 1999-2018 Alibaba Group Holding Ltd.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+
+/**
+ * Password encoder tool
+ *
+ * @author nacos
+ */
+public class PasswordEncoderUtil {
+
+    public static void main(String[] args) {
+        System.out.println(new BCryptPasswordEncoder().encode("nacos"));
+    }
+
+    public static Boolean matches(String raw, String encoded) {
+        return new BCryptPasswordEncoder().matches(raw, encoded);
+    }
+
+    public static String encode(String raw) {
+        return new BCryptPasswordEncoder().encode(raw);
+    }
+}
Index: member/src/main/java/cn/armylife/member/Util/WXPayXmlUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Util/WXPayXmlUtil.java	(date 1573462155258)
+++ member/src/main/java/cn/armylife/member/Util/WXPayXmlUtil.java	(date 1573462155258)
@@ -0,0 +1,30 @@
+package cn.armylife.member.Util;
+
+import org.w3c.dom.Document;
+
+import javax.xml.XMLConstants;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+/**
+ * 2018/7/3
+ */
+public final class WXPayXmlUtil {
+    public static DocumentBuilder newDocumentBuilder() throws ParserConfigurationException {
+        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+        documentBuilderFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+        documentBuilderFactory.setXIncludeAware(false);
+        documentBuilderFactory.setExpandEntityReferences(false);
+
+        return documentBuilderFactory.newDocumentBuilder();
+    }
+
+    public static Document newDocument() throws ParserConfigurationException {
+        return newDocumentBuilder().newDocument();
+    }
+}
Index: member/src/main/java/cn/armylife/member/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Config/SessionConfig.java	(date 1572401828777)
+++ member/src/main/java/cn/armylife/member/Config/SessionConfig.java	(date 1572401828777)
@@ -0,0 +1,9 @@
+package cn.armylife.member.Config;
+
+import org.springframework.context.annotation.Configuration;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+
+@Configuration
+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)
+public class SessionConfig {
+}
Index: member/src/main/java/cn/armylife/member/Config/FeignRequestIntercepter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Config/FeignRequestIntercepter.java	(date 1572575628012)
+++ member/src/main/java/cn/armylife/member/Config/FeignRequestIntercepter.java	(date 1572575628012)
@@ -0,0 +1,33 @@
+package cn.armylife.member.Config;
+
+import feign.RequestInterceptor;
+import feign.RequestTemplate;
+import org.springframework.stereotype.Component;
+import org.springframework.web.context.request.RequestAttributes;
+import org.springframework.web.context.request.RequestContextHolder;
+import org.springframework.web.context.request.ServletRequestAttributes;
+
+import javax.servlet.http.HttpServletRequest;
+import java.util.Enumeration;
+
+
+@Component
+public class FeignRequestIntercepter implements RequestInterceptor {
+    @Override
+    public void apply(RequestTemplate requestTemplate) {
+//通过RequestContextHolder获取本地请求
+        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();
+        if (requestAttributes == null){
+            return;
+        }
+//获取本地线程绑定的请求对象
+        HttpServletRequest request = ((ServletRequestAttributes)requestAttributes).getRequest();
+//给请求模板附加本地线程头部信息，主要是cookie信息
+        Enumeration headerNames = request.getHeaderNames();
+        while (headerNames.hasMoreElements()){
+            String name = (String) headerNames.nextElement();
+            requestTemplate.header(name,request.getHeader(name));
+        }
+
+    }
+}
Index: member/src/main/java/cn/armylife/member/Config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Config/RedisConfig.java	(date 1572936335851)
+++ member/src/main/java/cn/armylife/member/Config/RedisConfig.java	(date 1572936335851)
@@ -0,0 +1,40 @@
+package cn.armylife.member.Config;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+@Configuration
+public class RedisConfig {
+    /**
+     * redisTemplate 序列化使用的jdkSerializeable, 存储二进制字节码, 所以自定义序列化类
+     * @param redisConnectionFactory
+     * @return
+     */
+    @Bean
+    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+
+        // 使用Jackson2JsonRedisSerialize 替换默认序列化
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+
+        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
+
+        // 设置value的序列化规则和 key的序列化规则
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+}
Index: member/src/main/java/cn/armylife/member/Domain/WXtemplate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Domain/WXtemplate.java	(date 1573461066709)
+++ member/src/main/java/cn/armylife/member/Domain/WXtemplate.java	(date 1573461066709)
@@ -0,0 +1,85 @@
+package cn.armylife.member.Domain;
+
+public class WXtemplate {
+    private String openid;
+    private String first;
+    private String key1;
+    private String key2;
+    private String key3;
+    private String key4;
+    private String remark1;
+    private String template;
+    private String url;
+
+    public String getKey4() {
+        return key4;
+    }
+
+    public void setKey4(String key4) {
+        this.key4 = key4;
+    }
+
+    public String getOpenid() {
+        return openid;
+    }
+
+    public void setOpenid(String openid) {
+        this.openid = openid;
+    }
+
+    public String getFirst() {
+        return first;
+    }
+
+    public void setFirst(String first) {
+        this.first = first;
+    }
+
+    public String getKey1() {
+        return key1;
+    }
+
+    public void setKey1(String key1) {
+        this.key1 = key1;
+    }
+
+    public String getKey2() {
+        return key2;
+    }
+
+    public void setKey2(String key2) {
+        this.key2 = key2;
+    }
+
+    public String getKey3() {
+        return key3;
+    }
+
+    public void setKey3(String key3) {
+        this.key3 = key3;
+    }
+
+    public String getRemark1() {
+        return remark1;
+    }
+
+    public void setRemark1(String remark1) {
+        this.remark1 = remark1;
+    }
+
+    public String getTemplate() {
+        return template;
+    }
+
+    public void setTemplate(String template) {
+        this.template = template;
+    }
+
+    public String getUrl() {
+        return url;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
+    }
+}
Index: member/src/main/java/cn/armylife/member/Domain/WeChatUsers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Domain/WeChatUsers.java	(date 1576056330451)
+++ member/src/main/java/cn/armylife/member/Domain/WeChatUsers.java	(date 1576056330451)
@@ -0,0 +1,116 @@
+package cn.armylife.member.Domain;++import org.springframework.boot.context.properties.ConfigurationProperties;+import org.springframework.context.annotation.PropertySource;+import org.springframework.stereotype.Component;++/**+ *+ * @author jiony+ *+ * @Description: 微信相关常量+ */+@Component+@ConfigurationProperties(prefix = "wechat.users")+@PropertySource(value = "classpath:bootstrap.properties")+public class WeChatUsers {+    /**+     * token+     */+    private String token;+    /**+     * app id+     */+    private String appId;+    /**+     * app secret+     */+    private String appSecret;+    /**+     * 静默授权回调地址+     */+    private String callBackSlientUrl;+    /**+     * 商户id+     */+    private String MCHID;+    /**+     * 异步回调地址+     */+    private String NOTIFYURL;+    /**+     * 微信统一下单地址+     */+    private String wxorder;++    //证书路径+//    public static final String SSLCERT_PATH = "apiclient_cert.p12";+   // public static final String SSLCERT_PATH = "E:\\javaPicture\\yezz\\apiclient_cert.p12";++    @Override+    public String toString() {+        return "WeChatUsers{" ++                "token='" + token + '\'' ++                ", appId='" + appId + '\'' ++                ", appSecret='" + appSecret + '\'' ++                ", callBackSlientUrl='" + callBackSlientUrl + '\'' ++                ", MCHID='" + MCHID + '\'' ++                ", NOTIFYURL='" + NOTIFYURL + '\'' ++                ", wxorder='" + wxorder + '\'' ++                ", KEY='" + KEY + '\'' ++                '}';+    }++    /**+     * key+     */+    private String KEY;+    public String getToken() {+        return token;+    }+    public void setToken(String token) {+        this.token = token;+    }+    public String getAppId() {+        return appId;+    }+    public void setAppId(String appId) {+        this.appId = appId;+    }+    public String getAppSecret() {+        return appSecret;+    }+    public void setAppSecret(String appSecret) {+        this.appSecret = appSecret;+    }+    public String getCallBackSlientUrl() {+        return callBackSlientUrl;+    }+    public void setCallBackSlientUrl(String callBackSlientUrl) {+        this.callBackSlientUrl = callBackSlientUrl;+    }+    public String getMCHID() {+        return MCHID;+    }+    public void setMCHID(String MCHID) {+        this.MCHID = MCHID;+    }+    public String getNOTIFYURL() {+        return NOTIFYURL;+    }+    public void setNOTIFYURL(String NOTIFYURL) {+        this.NOTIFYURL = NOTIFYURL;+    }+    public String getWxorder() {+        return wxorder;+    }+    public void setWxorder(String wxorder) {+        this.wxorder = wxorder;+    }+    public String getKEY() {+        return KEY;+    }+    public void setKEY(String KEY) {+        this.KEY = KEY;+    }}+Index: member/src/main/java/cn/armylife/member/Mapper/PaymentsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/PaymentsMapper.java	(date 1573868923670)
+++ member/src/main/java/cn/armylife/member/Mapper/PaymentsMapper.java	(date 1573868923670)
@@ -0,0 +1,50 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Payments;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface PaymentsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int insert(Payments record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    Payments selectByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    List<Payments> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Payments record);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/ProductMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/ProductMapper.java	(date 1575479144576)
+++ member/src/main/java/cn/armylife/member/Mapper/ProductMapper.java	(date 1575479144576)
@@ -0,0 +1,57 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Product;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface ProductMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer productId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int insert(Product record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    Product selectByPrimaryKey(Integer productId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    List<Product> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Product record);
+
+
+    /**
+     * 通过tagId查找商品
+     * @param tagId
+     * @return
+     */
+    List<Product> productForTag(long tagId);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/TransactionsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/TransactionsMapper.java	(date 1575281018389)
+++ member/src/main/java/cn/armylife/member/Mapper/TransactionsMapper.java	(date 1575281018389)
@@ -0,0 +1,57 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Transactions;
+import com.github.pagehelper.Page;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface TransactionsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer tranactionsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int insert(Transactions record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    Transactions selectByPrimaryKey(Integer tranactionsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    List<Transactions> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Transactions record);
+
+    /**
+     * 查询零钱明细
+     * @param payUser
+     * @return
+     */
+    Page<Transactions> selectForDelivery(Long payUser);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/MemberMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/MemberMapper.java	(date 1575481242917)
+++ member/src/main/java/cn/armylife/member/Mapper/MemberMapper.java	(date 1575481242917)
@@ -0,0 +1,120 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Member;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface MemberMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer memberId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int insert(Member record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    Member selectByPrimaryKey(Integer memberId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    List<Member> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Member record);
+
+    /**
+     * 登录学员,跑腿
+     * @param member
+     * @return
+     */
+    Member loginUser(Member member);
+
+    /**
+     * 登录商铺
+     * @param member
+     * @return
+     */
+    Member loginShop(Member member);
+
+    /**
+     * 重载用户信息
+     * @param memberId
+     * @return
+     */
+    Member reloadSession(Long memberId);
+
+    /**
+     * 更新用户信息
+     * @param member
+     * @return
+     */
+    int updateMember(Member member);
+
+    /**
+     * 检查用户openid是否注册
+     * @param openid
+     * @return
+     */
+    Member inspectMemberForOpenId(Member member);
+
+    /**
+     * 检查用户phone是否注册
+     * @param phone
+     * @return
+     */
+    Member inspectMemberForPhone(String phone);
+
+    /**
+     * 更新跑腿手机号码
+     * @param member
+     * @return
+     */
+    int updateDeliveryPhone(Member member);
+
+    /**
+     * 通过memberId查询member
+     * @param memberId
+     * @return
+     */
+    Member selectMemberforId(Long memberId);
+
+    /**
+     * 通过appId查询商户信息
+     * @param appId
+     * @return
+     */
+    Member ShopNewForAppId(String appId);
+
+    /**
+     * 设置商家的器送价格(total)
+     * @param shopId
+     * @param total
+     * @return
+     */
+    int isdeliver(Long shopId,String total);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/ProductDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/ProductDetailMapper.java	(date 1575470725625)
+++ member/src/main/java/cn/armylife/member/Mapper/ProductDetailMapper.java	(date 1575470725625)
@@ -0,0 +1,50 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.ProductDetail;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface ProductDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer productDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int insert(ProductDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    ProductDetail selectByPrimaryKey(Integer productDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    List<ProductDetail> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(ProductDetail record);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/ShopOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/ShopOrderMapper.java	(date 1573874301321)
+++ member/src/main/java/cn/armylife/member/Mapper/ShopOrderMapper.java	(date 1573874301321)
@@ -0,0 +1,49 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.ShopOrder;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface ShopOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer ordersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int insert(ShopOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    ShopOrder selectByPrimaryKey(Integer ordersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    List<ShopOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(ShopOrder record);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/OrderDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/OrderDetailMapper.java	(date 1573868923726)
+++ member/src/main/java/cn/armylife/member/Mapper/OrderDetailMapper.java	(date 1573868923726)
@@ -0,0 +1,49 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.OrderDetail;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface OrderDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer orderDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int insert(OrderDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    OrderDetail selectByPrimaryKey(Integer orderDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    List<OrderDetail> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(OrderDetail record);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/AlidMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/AlidMapper.java	(date 1575290493256)
+++ member/src/main/java/cn/armylife/member/Mapper/AlidMapper.java	(date 1575290493256)
@@ -0,0 +1,30 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Alid;
+
+import java.util.List;
+
+public interface AlidMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table alid
+     *
+     * @mbggenerated
+     */
+    int insert(Alid record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table alid
+     *
+     * @mbggenerated
+     */
+    List<Alid> selectAll();
+
+    /**
+     * 查询授权码
+     * @param alid
+     * @return
+     */
+    Alid inspectShopForALID(String alid);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/ShopTagMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/ShopTagMapper.java	(date 1575479144562)
+++ member/src/main/java/cn/armylife/member/Mapper/ShopTagMapper.java	(date 1575479144562)
@@ -0,0 +1,51 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.Product;
+import cn.armylife.common.Domain.ShopTag;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface ShopTagMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer shopTagId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    int insert(ShopTag record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    ShopTag selectByPrimaryKey(Integer shopTagId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    List<ShopTag> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(ShopTag record);
+
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Mapper/DeliveryOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Mapper/DeliveryOrderMapper.java	(date 1573874301363)
+++ member/src/main/java/cn/armylife/member/Mapper/DeliveryOrderMapper.java	(date 1573874301363)
@@ -0,0 +1,49 @@
+package cn.armylife.member.Mapper;
+
+import cn.armylife.common.Domain.DeliveryOrder;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface DeliveryOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer deliveryOrdersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int insert(DeliveryOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    DeliveryOrder selectByPrimaryKey(Integer deliveryOrdersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    List<DeliveryOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(DeliveryOrder record);
+}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/Service/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Service/MemberService.java	(date 1575809067877)
+++ member/src/main/java/cn/armylife/member/Service/MemberService.java	(date 1575809067877)
@@ -0,0 +1,121 @@
+package cn.armylife.member.Service;++//import Users;++import cn.armylife.common.Domain.Member;+import cn.armylife.common.Domain.Product;+import cn.armylife.common.Domain.Transactions;+import com.github.pagehelper.Page;+import org.springframework.stereotype.Service;+import org.springframework.transaction.annotation.Transactional;++import java.util.List;++@Service+@Transactional+public interface MemberService {++    Long insert(Member record);++    /**+     * 用户登录+     * @param users+     * @return+     */+    Member loginUser(Member users);++    /**+     * 登录商铺+     * @param member+     * @return+     */+    Member loginShop(Member member);++    /**+     * 重载登录信息+     * @param memberId+     * @return+     */+    Member reloadSession(Long memberId);++    /**+     * 更新用户信息+     * @param member+     * @return+     */+    int updateMember(Member member);++    /**+     * 检查用户openid是否注册+     * @param openid+     * @return+     */+    boolean inspectMemberForOpenId(String openid,String type);++    /**+     * 检查用户phone是否注册+     * @param phone+     * @return+     */+    Boolean inspectMemberForPhone(String phone);++    /**+     * 检验授权码+     * @param alid+     * @return+     */+    Boolean inspectShopForALID(String alid);++    /**+     * 更新跑腿手机号码+     * @param member+     * @return+     */+    int updateDeliveryPhone(Member member);++    /**+     * 添加跑腿提现记录+     * @param record+     * @return+     */+    int deliveryinsert(Transactions record);++    /**+     * 查询零钱明细+     * @param payUser+     * @return+     */+    Page<Transactions> selectForDelivery(Long payUser);++    /**+     * 通过memberId查询member+     * @param memberId+     * @return+     */+    Member selectMemberforId(Long memberId);++    /**+     * 通过appId查询商户信息+     * @param appId+     * @return+     */+    Member ShopNewForAppId(String appId);++    /**+     * 通过tagId查找商品+     * @param shopId+     * @return+     */+    List<Product> productForTag(long shopId);++    /**+     * 设置商家的器送价格(total)+     * @param shopId+     * @param total+     * @return+     */+    int isdeliver(Long shopId,String total);++++}Index: member/src/main/java/cn/armylife/member/Controller/MemberController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Controller/MemberController.java	(date 1575978313451)
+++ member/src/main/java/cn/armylife/member/Controller/MemberController.java	(date 1575978313451)
@@ -0,0 +1,533 @@
+package cn.armylife.member.Controller;++import cn.armylife.common.Domain.Member;+import cn.armylife.common.Domain.Transactions;+import cn.armylife.member.FeignService.WechatPay;+import cn.armylife.member.Service.MemberService;+import cn.armylife.member.Service.WechatService;+import cn.armylife.member.Util.AliDayunSms;+import cn.armylife.member.Util.PasswordEncoderUtil;+import com.alibaba.fastjson.JSONObject;+import com.aliyuncs.exceptions.ClientException;+import com.github.pagehelper.PageHelper;+import com.github.pagehelper.PageInfo;+import org.springframework.beans.factory.annotation.Autowired;+import org.springframework.beans.factory.annotation.Value;+import org.springframework.web.bind.annotation.RequestMapping;+import org.springframework.web.bind.annotation.ResponseBody;+import org.springframework.web.bind.annotation.RestController;+import org.springframework.web.multipart.MultipartFile;++import javax.servlet.http.HttpServletRequest;+import javax.servlet.http.HttpSession;+import java.io.File;+import java.io.IOException;+import java.math.BigDecimal;+import java.text.SimpleDateFormat;+import java.util.*;+import java.util.logging.Logger;++@RestController+public class MemberController {+    @Autowired+    private MemberService memberService;++    @Autowired+    WechatService wechatService;+    @Autowired+    WechatPay wechatPay;+    @Value("${server.port}")+    int port;++    Logger logger=Logger.getLogger("MemberController.class");++    @RequestMapping("register")+    @ResponseBody+    public int register(Member users,HttpServletRequest request){+        Map<Integer,String> userinfo=(Map<Integer, String>) wechatService.getUserInfo(request.getParameter("code"));//获取用户信息+        if(userinfo!=null){+            String openid=userinfo.get(2);+            if (memberService.inspectMemberForOpenId(openid,"2")){//检查openid是否注册+                String userinfos=userinfo.get(3);+                JSONObject json2 = JSONObject.parseObject(userinfos);+                users.setMemberType("2");+                users.setMemberWechat(openid);+                users.setMemberAvatar(json2.getString("headimgurl"));+                users.setMemberNickname(json2.getString("nickname"));+                logger.info("用户信息: "+userinfos);+                Long msg=memberService.insert(users);+                HttpSession session=request.getSession();+                session.setAttribute("Student",users);+                session.setMaxInactiveInterval(86400*30);+                if (msg==0){+                    return 0;+                }+                return 1;+            }+            Member student=new Member();+            student.setMemberWechat(openid);+            Member loginMember=memberService.loginUser(student);+            if (loginMember!=null||loginMember.getMemberType().equals("2")){+                HttpSession session=request.getSession();+                session.setAttribute("Student",loginMember);+                session.setMaxInactiveInterval(86400*30);+                return 1;+            }+            return 0;+        }+        return 0;++    };++    @RequestMapping("loginUser")+    @ResponseBody+    public int loginUser(Member users,String code, HttpServletRequest request){+        Map<Integer,String> userinfo=(Map<Integer, String>) wechatService.getUserInfo(request.getParameter("code"));//获取用户信息+        if(userinfo!=null){+            String openid=userinfo.get(2);+            if (memberService.inspectMemberForOpenId(openid,"2")){//检查openid是否注册+                String userinfos=userinfo.get(3);+                JSONObject json2 = JSONObject.parseObject(userinfos);+                users.setMemberType("2");+                users.setMemberWechat(openid);+                users.setMemberAvatar(json2.getString("headimgurl"));+                users.setMemberNickname(json2.getString("nickname"));+                logger.info("用户信息: "+userinfos);+                Long msg=memberService.insert(users);+                HttpSession session=request.getSession();+                session.setAttribute("Delivery",users);+                session.setMaxInactiveInterval(86400*30);+                if (msg==0){+                    return 0;+                }+                return 1;+            }+            Member student=new Member();+            student.setMemberWechat(openid);+            student.setMemberType("2");+            Member loginMember=memberService.loginUser(student);+            logger.info(loginMember.toString());+            if (loginMember!=null||loginMember.getMemberType().equals("1")){+                HttpSession session=request.getSession();+                session.setAttribute("Delivery",loginMember);+                session.setMaxInactiveInterval(86400*30);+                return 1;+            }+            return 0;+        }+        return 0;+    }++    @RequestMapping("loginMember")+    @ResponseBody+    public int loginMember(Member users,String code, HttpServletRequest request){+        Map<Integer,String> userinfo=(Map<Integer, String>) wechatService.getUserInfo(request.getParameter("code"));//获取用户信息+        if(userinfo!=null){+            String openid=userinfo.get(2);+            if (memberService.inspectMemberForOpenId(openid,"1")){//检查openid是否注册+                String userinfos=userinfo.get(3);+                JSONObject json2 = JSONObject.parseObject(userinfos);+                users.setMemberType("1");+                users.setMemberWechat(openid);+                users.setMemberAvatar(json2.getString("headimgurl"));+                users.setMemberNickname(json2.getString("nickname"));+                logger.info("用户信息: "+userinfos);+                Long msg=memberService.insert(users);+                HttpSession session=request.getSession();+                session.setAttribute("Student",users);+                session.setMaxInactiveInterval(86400*30);+                if (msg==0){+                    return 0;+                }+                return 1;+            }+            Member student=new Member();+            student.setMemberWechat(openid);+            student.setMemberType("1");+            Member loginMember=memberService.loginUser(student);+            logger.info(loginMember.toString());+            if (loginMember!=null||loginMember.getMemberType().equals("1")){+            HttpSession session=request.getSession();+            session.setAttribute("Student",loginMember);+            session.setMaxInactiveInterval(86400*30);+            return 1;+        }+            return 0;+        }+        return 0;+    }++    /**+     * 重载用户信息+     */+    @RequestMapping("reloadSession")+    @ResponseBody+    public Member reloadSession(Long memberId,HttpServletRequest request){+        logger.info("执行重载");+        Member member=memberService.reloadSession(memberId);+        logger.info(member.toString());+        HttpSession session=request.getSession();+        session.setAttribute("Student",member);+        return member;+    }++    /**+     * 更新用户信息+     * @param member+     * @return+     */+    @RequestMapping("updateMember")+    @ResponseBody+    public int updateMember(Member member){+        return memberService.updateMember(member);+    };++    /**+     * 获取当前登录用户信息+     * @param request+     * @return+     */+    @RequestMapping("/getMemberUserinfo")+    @ResponseBody+    public Member getMemberUserinfo(HttpServletRequest request){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Student");+        Member user=memberService.reloadSession(member.getMemberId());+        return user;+    }++    /**+     * 获取当前登录跑腿信息+     * @param request+     * @return+     */+    @RequestMapping("/getDeliveryUserinfo")+    @ResponseBody+    public Member getDeliveryUserinfo(HttpServletRequest request){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Delivery");+        logger.info(member.toString());+        Member user=memberService.reloadSession(member.getMemberId());+        return user;+    }++    /**+     * 获取当前登录商铺信息+     * @param request+     * @return+     */+    @RequestMapping("/getShopUserinfo")+    @ResponseBody+    public Member getShopUserinfo(HttpServletRequest request){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Shop");+        logger.info(member.toString());+        Member user=memberService.reloadSession(member.getMemberId());+        return user;+    }++    @RequestMapping("getPassword")+    @ResponseBody+    public String pass(String name){+       return PasswordEncoderUtil.encode(name);+    }++    /**+     * 跑腿添加手机号发送验证码+     * @param req+     * @param Phone+     * @return+     * @throws ClientException+     */+    @RequestMapping("/SMS.do")+    @ResponseBody+    public int SMS(HttpServletRequest req,String Phone) throws ClientException {+        AliDayunSms aliDayunSms=new AliDayunSms();+        String MSgcode= (String) aliDayunSms.getMsgCode();+        HttpSession session = req.getSession();+        session.setAttribute(Phone,MSgcode);+        String Message= aliDayunSms.SMS(Phone,MSgcode,"SMS_163130007");+        this.removeAttrbute(session,Phone);+//        System.out.println(Message);+        logger.info(Message);+        if (Message.equals("=====success====")){+            return 1;+        }+        return 0;+    }+    /**+     * 设置5分钟后删除session中的验证码+     * @param session+     * @param attrName+     */+    private void removeAttrbute(final HttpSession session, final String attrName) {+        final Timer timer = new Timer();+        timer.schedule(new TimerTask() {+            @Override+            public void run() {+                // 删除session中存的验证码+                session.removeAttribute(attrName);+                timer.cancel();+            }+        }, 5 * 60 * 1000);+    }++    /**+     * 填写跑腿手机号+     * @param SmsCode+     * @param request+     * @param phone+     * @return+     * @throws ClientException+     */+    @RequestMapping("updateDeliveryPhone")+    @ResponseBody+    public int updateDeliveryPhone(String SmsCode,HttpServletRequest request,String phone) throws ClientException {+        HttpSession session=request.getSession();+        String code=(String)session.getAttribute(phone);+        Member user=(Member)session.getAttribute("Delivey");+        if (code.equals(SmsCode)){+            Member member=new Member();+            member.setMemberId(user.getMemberId());+            member.setMemberPhone(phone);+            return memberService.updateDeliveryPhone(member);+        }else {+            return 0;+        }+    }++    /**+     * 跑腿提现+     * @param request+     * @param orderfee+     * @return+     */+    @RequestMapping("deliveyExtract")+    @ResponseBody+    public String deliveyExtract(HttpServletRequest request,String orderfee){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Delivery");+        logger.info(member.toString());+        BigDecimal total=member.getMemberTotal();+        BigDecimal ordertotal=new BigDecimal(orderfee);+        if (total.compareTo(ordertotal)==-1){+            return "0";+        }+        BigDecimal newtotal=total.subtract(ordertotal);+        Member user=new Member();+        user.setMemberTotal(newtotal);+        user.setMemberId(member.getMemberId());+        if (memberService.updateMember(user)==0){+            return "0";+        };+        int msg=wechatPay.WechatExtract(member,orderfee);+        if (msg==0){+            return "0";+        }+        return "1";+    }++    /**+     * 查询跑腿零钱明细+     * @param request+     * @return+     */+    @RequestMapping("selectForDelivery")+    @ResponseBody+    public PageInfo<Transactions> selectForDelivery(HttpServletRequest request,int pageNum){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Delivery");+        PageHelper.startPage(pageNum, 10);+        PageInfo<Transactions> pageInfo = new PageInfo<>(memberService.selectForDelivery(member.getMemberId()));+        if (pageInfo.getPageNum()<=1&pageNum>1){+            return null;+        }+        return pageInfo;+    }++    /**+     * 查询跑腿零钱明细+     * @param request+     * @return+     */+    @RequestMapping("selectExtractForShop")+    @ResponseBody+    public PageInfo<Transactions> selectExtractForShop(HttpServletRequest request,int pageNum){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Shop");+        PageHelper.startPage(pageNum, 10);+        PageInfo<Transactions> pageInfo = new PageInfo<>(memberService.selectForDelivery(member.getMemberId()));+        if (pageInfo.getPageNum()<=1&pageNum>1){+            return null;+        }+        return pageInfo;+    }++    /**+     * 跑腿添加手机号发送验证码+     * @param req+     * @param phone+     * @return+     * @throws ClientException+     */+    @RequestMapping("/ShopSMS.do")+    @ResponseBody+    public int ShopSMS(HttpServletRequest req,String phone) throws ClientException {+        AliDayunSms aliDayunSms=new AliDayunSms();+        String MSgcode= (String) aliDayunSms.getMsgCode();+        HttpSession session = req.getSession();+        session.setAttribute(phone,MSgcode);+        String Message= aliDayunSms.SMS(phone,MSgcode,"SMS_163130007");+        this.removeAttrbute(session,phone);+//        System.out.println(Message);+        logger.info(Message);+        if (Message.equals("=====success====")){+            return 1;+        }+        return 0;+    }++    @RequestMapping("/inspectShopForPhone")+    @ResponseBody+    public int inspectShopForPhone(String phone){+        if (memberService.inspectMemberForPhone(phone)){+            return 1;+        };+        return 0;+    }++    @RequestMapping("/inspectShopForALID")+    @ResponseBody+    public int inspectShopForALID(String alid){+        if (memberService.inspectShopForALID(alid)){+            return 0;+        };+        return 1;+    }++    @RequestMapping("loginShop")+    @ResponseBody+    public int loginShop(String SmsCode,String phone,String alid,HttpServletRequest request,String Wechatcode)throws ClientException {+        HttpSession session=request.getSession();+        String code=(String)session.getAttribute(phone);+        String openid=wechatService.getOpenId(Wechatcode);+        logger.info("code:"+code);+        Member member=new Member();+        member.setMemberPhone(phone);+        Member loginTime=new Member();+        Long memberid=null;+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM dd-mm-ss");+        Date date=new Date();+        String time=sdf.format(date);+        if (!code.equals(SmsCode)){+            return 0;+        }+        if (memberService.inspectMemberForPhone(phone)){+            member.setMemberType("3");+            member.setMemberWechat(openid);+            memberid=memberService.insert(member);+            loginTime.setRegisterTime(time);+            return 2;+        };+        Member shop=memberService.loginShop(member);+        logger.info(shop.toString());+        if (memberid==null){+            memberid=shop.getMemberId();+        }+        session.setAttribute("Shop",shop);+        session.setMaxInactiveInterval(86400*30);+        if (shop.getShopName()==null){+            return 3;+        }+        loginTime.setLastloginTime(time);+        loginTime.setMemberId(memberid);+        memberService.updateMember(loginTime);+        return 1;+    }++    @RequestMapping("updataShop")+    @ResponseBody+    public int updataShop(Member member,HttpServletRequest request){+        HttpSession session=request.getSession();+        Member user=(Member)session.getAttribute("Shop");+        int msg=memberService.updateMember(member);+        memberService.reloadSession(user.getMemberId());+        if (msg==0){+            return 0;+        }+        return 1;+    }++    /**+     * 修改企业头像+     * @return+     */+    @RequestMapping("/updateShopAvatar.do")+    @ResponseBody+    public int updateCompanyAvatar(MultipartFile file, HttpServletRequest request) throws IOException {+        logger.info("图片:"+file);+        HttpSession session=request.getSession();+        Member member=new Member();+        try{+            member=(Member)session.getAttribute("Shop");+        }catch (NullPointerException e){+            logger.info("123:"+e);+        }++        logger.info(member.toString());+        String shopAvatar=member.getMemberAvatar();+        String newName = null;+        String exeName = null;+        // 判断文件是否为空+        if (!file.isEmpty()) {+            logger.info("123");+            // 图片原始名字+            String oldName = file.getOriginalFilename();+            // 图片新名字+            newName = UUID.randomUUID().toString();+            // 后缀名+            // exeName = oldName.substring(oldName.indexOf("."));+            exeName=".png";+//            File pic = new File("/root/armylife/shopAvatar/" + newName + exeName);+            File pic = new File("E:\\Temp\\" + newName + exeName);+            // 保存图片到本地磁盘+            file.transferTo(pic);+            Member user=new Member();+            user.setMemberId(member.getMemberId());+            user.setMemberAvatar(newName + exeName);+            memberService.updateMember(user);+        }+        if(shopAvatar!=null){+            File oldname=new File("http://api.xuthus83.cn:6081/img/" +shopAvatar) ;+            oldname.delete();+        }+        return 1;+    }++    /**+     * 通过memberId查询member+     * @param memberId+     * @return+     */+    @RequestMapping("selectMemberforId")+    @ResponseBody+    public Member selectMemberforId(Long memberId){+        return memberService.selectMemberforId(memberId);+    };++    /**+     * 设置商家的器送价格(total)+     * @param total+     * @return+     */+    @RequestMapping("isdeliver")+    @ResponseBody+    public int isdeliver(String total,HttpServletRequest request){+        HttpSession session=request.getSession();+        Member member=(Member)session.getAttribute("Shop");+        Long shopId=member.getMemberId();+        return memberService.isdeliver(shopId,total);+    };+++}Index: member/src/main/java/cn/armylife/member/Controller/StudentController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/Controller/StudentController.java	(date 1575480307859)
+++ member/src/main/java/cn/armylife/member/Controller/StudentController.java	(date 1575480307859)
@@ -0,0 +1,42 @@
+package cn.armylife.member.Controller;
+
+import cn.armylife.common.Domain.Member;
+import cn.armylife.common.Domain.Product;
+import cn.armylife.member.Service.MemberService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import java.util.List;
+
+@Controller
+public class StudentController {
+    Logger logger= LoggerFactory.getLogger(StudentController.class);
+
+    @Autowired
+    MemberService memberService;
+
+    /**
+     * 通过appId查询商户信息
+     * @param appid
+     * @return
+     */
+    @RequestMapping("ShopNewForAppId")
+    @ResponseBody
+    public Member ShopNewForAppId(String appid){
+        return memberService.ShopNewForAppId(appid);
+    }
+    /**
+     * 通过tagId查找商品
+     * @param tagId
+     * @return
+     */
+    @RequestMapping("productForTag")
+    @ResponseBody
+    public List<Product> productForTag(long shopId){
+        return memberService.productForTag(shopId);
+    };
+}
Index: out/production/integralmall/Mapper/IntegralRecordMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/IntegralRecordMapper.xml	(date 1575859856361)
+++ out/production/integralmall/Mapper/IntegralRecordMapper.xml	(date 1575859856361)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.IntegralRecordMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.IntegralRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="integral_record_id" jdbcType="BIGINT" property="integralRecordId" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="record" jdbcType="VARCHAR" property="record" />
+    <result column="time" jdbcType="TIMESTAMP" property="time" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.IntegralRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="integralRecordId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into integral_record (user_id, record, `time`
+    )
+    values (#{userId,jdbcType=BIGINT}, #{record,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
+    )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select integral_record_id, user_id, record, `time`
+    from integral_record
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/MarketApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/MarketApplication.java	(date 1575808937355)
+++ market/src/main/java/cn/armylife/market/MarketApplication.java	(date 1575808937355)
@@ -0,0 +1,62 @@
+package cn.armylife.market;
+
+import com.netflix.hystrix.contrib.metrics.eventstream.HystrixMetricsStreamServlet;
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+import org.springframework.boot.web.servlet.ServletRegistrationBean;
+import org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;
+import org.springframework.cloud.client.discovery.EnableDiscoveryClient;
+import org.springframework.cloud.client.loadbalancer.LoadBalanced;
+import org.springframework.cloud.netflix.hystrix.EnableHystrix;
+import org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;
+import org.springframework.cloud.openfeign.EnableFeignClients;
+import org.springframework.context.annotation.Bean;
+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;
+import org.springframework.session.web.http.CookieSerializer;
+import org.springframework.session.web.http.DefaultCookieSerializer;
+import org.springframework.transaction.annotation.EnableTransactionManagement;
+import org.springframework.web.client.RestTemplate;
+
+@SpringBootApplication
+@EnableFeignClients
+@EnableDiscoveryClient
+@EnableRedisHttpSession
+@EnableHystrix
+@EnableHystrixDashboard
+@EnableCircuitBreaker
+@EnableTransactionManagement
+public class MarketApplication {
+
+    public static void main(String[] args) {
+        SpringApplication.run(MarketApplication.class, args);
+    }
+
+    @Bean
+    @LoadBalanced
+    public RestTemplate getRestTemplate(){
+        return new RestTemplate();
+    }
+
+    @Bean
+    public ServletRegistrationBean getServlet() {
+        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();
+        ServletRegistrationBean registrationBean = new ServletRegistrationBean(streamServlet);
+        registrationBean.setLoadOnStartup(1);
+        registrationBean.addUrlMappings("/hystrix.stream");
+        registrationBean.setName("HystrixMetricsStreamServlet");
+        return registrationBean;
+    }
+
+    @Bean
+    public CookieSerializer cookieSerializer() {
+        DefaultCookieSerializer defaultCookieSerializer = new DefaultCookieSerializer();
+        //cookie名字
+        defaultCookieSerializer.setCookieName("sessionId");
+        //域
+//        defaultCookieSerializer.setDomainName("xxx.com");
+        //存储路径设为根路径，同一域名下多个项目共享该cookie
+        defaultCookieSerializer.setCookiePath("/");
+        return defaultCookieSerializer;
+    }
+
+}
Index: out/production/integralmall/Mapper/IntegralUserMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/IntegralUserMapper.xml	(date 1575879800091)
+++ out/production/integralmall/Mapper/IntegralUserMapper.xml	(date 1575879800091)
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.IntegralUserMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.IntegralUser">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="integral_user_id" jdbcType="BIGINT" property="integralUserId" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="integral" jdbcType="INTEGER" property="integral" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.IntegralUser">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="integralUserId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into integral_user (user_id, integral)
+    values (#{userId,jdbcType=BIGINT}, #{integral,jdbcType=INTEGER})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select integral_user_id, user_id, integral
+    from integral_user
+  </select>
+
+  <update id="integralChange" >
+    update integral_user set integral=#{integral} where user_id=#{userId}
+  </update>
+  
+  <select id="findUserIntegral" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from integral_user where user_id=#{userId}
+  </select>
+</mapper>
\ No newline at end of file
Index: out/production/integralmall/Mapper/MallAreaMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/MallAreaMapper.xml	(date 1575859932777)
+++ out/production/integralmall/Mapper/MallAreaMapper.xml	(date 1575859932777)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.MallAreaMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.MallArea">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="mall_area_id" jdbcType="BIGINT" property="mallAreaId" />
+    <result column="mall_area_name" jdbcType="VARCHAR" property="mallAreaName" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.MallArea">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="mallAreaId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into mall_area (mall_area_name, adding_time)
+    values (#{mallAreaName,jdbcType=VARCHAR}, #{addingTime,jdbcType=TIMESTAMP})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select mall_area_id, mall_area_name, adding_time
+    from mall_area
+  </select>
+
+</mapper>
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/ServiceImpl/MemberServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/ServiceImpl/MemberServiceImpl.java	(date 1575636661255)
+++ member/src/main/java/cn/armylife/member/ServiceImpl/MemberServiceImpl.java	(date 1575636661255)
@@ -0,0 +1,181 @@
+package cn.armylife.member.ServiceImpl;
+
+//import Users;
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.member.Mapper.*;
+import cn.armylife.member.Service.MemberService;
+import com.github.pagehelper.Page;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+import java.util.logging.Logger;
+
+@Service
+public class MemberServiceImpl implements MemberService {
+    Logger logger=Logger.getLogger("MemberServiceImpl.class");
+
+    @Autowired private TransactionsMapper transactionsMapper;
+    @Autowired private MemberMapper memberMapper;
+    @Autowired private AlidMapper alidMapper;
+    @Autowired private ProductMapper productMapper;
+
+    @Override
+    public Long insert(Member record){
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh-mm-ss");
+        Date date=new Date();
+        String registertime=sdf.format(date);
+        record.setRegisterTime(registertime);
+        record.setLastloginTime(registertime);
+        int users=memberMapper.insert(record);
+        Long id=record.getMemberId();
+        return id;
+    };
+
+    /**
+     * 用户登录
+     * @param users
+     * @return
+     */
+    @Override
+    public Member loginUser(Member users){
+        return memberMapper.loginUser(users);
+    };
+
+    /**
+     * 登录商铺
+     * @param member
+     * @return
+     */
+    public Member loginShop(Member member){
+        return memberMapper.loginShop(member);
+    };
+
+    /**
+     * 重载登录信息
+     * @param memberId
+     * @return
+     */
+    public Member reloadSession(Long memberId){
+        return memberMapper.reloadSession(memberId);
+    };
+
+    /**
+     * 更新用户信息
+     * @param member
+     * @return
+     */
+    public int updateMember(Member member){
+        return memberMapper.updateMember(member);
+    };
+
+    /**
+     * 检查用户openid是否注册
+     * @param openid
+     * @return
+     */
+    public boolean inspectMemberForOpenId(String openid,String type){//验证通过,返回ture.失败返回false
+        Member user=new Member();
+        user.setMemberType(type);
+        user.setMemberWechat(openid);
+        Member member=memberMapper.inspectMemberForOpenId(user);
+        if (member==null){
+            return true;
+        }
+        return false;
+    };
+
+    /**
+     * 检查用户phone是否注册
+     * @param phone
+     * @return
+     */
+    public Boolean inspectMemberForPhone(String phone){
+        Member member=memberMapper.inspectMemberForPhone(phone);
+        if (member==null){
+            return true;
+        }
+        return false;
+    };
+
+    /**
+     * 检验授权码
+     * @param alid
+     * @return
+     */
+    public Boolean inspectShopForALID(String alid){
+        Alid alids=alidMapper.inspectShopForALID(alid);
+        if (alids==null){
+            return true;
+        }
+        return false;
+    };
+
+    /**
+     * 更新跑腿手机号码
+     * @param member
+     * @return
+     */
+    public int updateDeliveryPhone(Member member){
+        return memberMapper.updateDeliveryPhone(member);
+    };
+
+    /**
+     * 添加跑腿提现记录
+     * @param record
+     * @return
+     */
+    public int deliveryinsert(Transactions record){
+        return transactionsMapper.insert(record);
+    };
+
+    /**
+     * 查询零钱明细
+     * @param payUser
+     * @return
+     */
+    public Page<Transactions> selectForDelivery(Long payUser){
+        return transactionsMapper.selectForDelivery(payUser);
+    };
+
+    /**
+     * 通过memberId查询member
+     * @param memberId
+     * @return
+     */
+    public Member selectMemberforId(Long memberId){
+        return memberMapper.selectMemberforId(memberId);
+    };
+
+    /**
+     * 通过appId查询商户信息
+     * @param appId
+     * @return
+     */
+    public Member ShopNewForAppId(String appId){
+        return memberMapper.ShopNewForAppId(appId);
+    };
+
+    /**
+     * 通过tagId查找商品
+     * @param shopId
+     * @return
+     */
+    public List<Product> productForTag(long shopId){
+        return productMapper.productForTag(shopId);
+    };
+
+    /**
+     * 设置商家的器送价格(total)
+     * @param shopId
+     * @param total
+     * @return
+     */
+    public int isdeliver(Long shopId,String total){
+        return memberMapper.isdeliver(shopId,total);
+    };
+
+}
Index: member/src/main/java/cn/armylife/member/FeignService/WechatPay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/FeignService/WechatPay.java	(date 1575274626046)
+++ member/src/main/java/cn/armylife/member/FeignService/WechatPay.java	(date 1575274626046)
@@ -0,0 +1,15 @@
+package cn.armylife.member.FeignService;
+
+import cn.armylife.common.Domain.Member;
+import cn.armylife.member.ServiceHysrix.WechatPayHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "payservice",fallback = WechatPayHystrix.class )
+public interface WechatPay {
+
+    @RequestMapping(value = "WechatExtract",method = RequestMethod.GET)
+    int WechatExtract(@RequestParam Member member,@RequestParam String orderfee);
+}
Index: market/src/main/java/cn/armylife/market/Util/sha1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/sha1.java	(date 1574214225091)
+++ market/src/main/java/cn/armylife/market/Util/sha1.java	(date 1574214225091)
@@ -0,0 +1,31 @@
+package cn.armylife.market.Util;++import java.security.MessageDigest;++public class sha1 {+++    public static String getSha1(String str){+        if(str == null || str.length()==0){+            return null;+        }+        char hexDigits[]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};++        try {+            MessageDigest mdTemp = MessageDigest.getInstance("SHA1");+            mdTemp.update(str.getBytes("UTF-8"));++            byte[] md = mdTemp.digest();+            int j = md.length;+            char buf[] = new char[j*2];+            int k = 0;+            for(int i=0;i<j;i++){+                byte byte0 = md[i];+                buf[k++] = hexDigits[byte0 >>> 4 & 0xf];+                buf[k++] = hexDigits[byte0 & 0xf];+            }+            return new String(buf);+        } catch (Exception e) {+            return null;+        }+    }}
\ No newline at end of file
Index: member/src/main/java/cn/armylife/member/ServiceHysrix/WechatPayHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/java/cn/armylife/member/ServiceHysrix/WechatPayHystrix.java	(date 1575274836627)
+++ member/src/main/java/cn/armylife/member/ServiceHysrix/WechatPayHystrix.java	(date 1575274836627)
@@ -0,0 +1,18 @@
+package cn.armylife.member.ServiceHysrix;
+
+import cn.armylife.common.Domain.Member;
+import cn.armylife.member.FeignService.WechatPay;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.stereotype.Component;
+
+@Component
+public class WechatPayHystrix implements WechatPay {
+    Logger logger = LoggerFactory.getLogger(WechatPayHystrix.class);
+
+    @Override
+    public int WechatExtract(Member member,String orderfee){
+        logger.info("payservice出错");
+        return 0;
+    };
+}
Index: out/production/integralmall/Mapper/PointsExchangeRecordMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/PointsExchangeRecordMapper.xml	(date 1575881851702)
+++ out/production/integralmall/Mapper/PointsExchangeRecordMapper.xml	(date 1575881851702)
@@ -0,0 +1,57 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.PointsExchangeRecordMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.PointsExchangeRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="points_exchange_record_id" jdbcType="BIGINT" property="pointsExchangeRecordId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="exchange_time" jdbcType="TIMESTAMP" property="exchangeTime" />
+    <result column="items_exchanged" jdbcType="VARCHAR" property="itemsExchanged" />
+    <result column="logistics_number" jdbcType="VARCHAR" property="logisticsNumber" />
+    <result column="user_id" jdbcType="BIGINT" property="userId" />
+    <result column="user_name" jdbcType="VARCHAR" property="userName" />
+    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
+    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
+    <result column="product_id" jdbcType="BIGINT" property="productId" />
+    <result column="product_detail_id" jdbcType="BIGINT" property="productDetailId" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.PointsExchangeRecord">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="pointsExchangeRecordId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into points_exchange_record (points_exchange_record_id,using_integral, usage_amount, exchange_time,
+    items_exchanged, logistics_number, user_id,
+    user_name, user_phone, user_address,
+    product_id, product_detail_id)
+    values (#{pointsExchangeRecordId,jdbcType=INTEGER},#{usingIntegral,jdbcType=INTEGER}, #{usageAmount,jdbcType=DECIMAL}, #{exchangeTime,jdbcType=TIMESTAMP},
+    #{itemsExchanged,jdbcType=VARCHAR}, #{logisticsNumber,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT},
+    #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{userAddress,jdbcType=VARCHAR},
+    #{productId,jdbcType=BIGINT}, #{productDetailId,jdbcType=BIGINT})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select points_exchange_record_id, using_integral, usage_amount, exchange_time, items_exchanged,
+    logistics_number, user_id, user_name, user_phone, user_address, product_id, product_detail_id
+    from points_exchange_record
+  </select>
+  
+  <select id="findExchangeRecord" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_exchange_record where user_id=#{userId}
+  </select>
+
+  <select id="findExchangeRecordForId" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_exchange_record where points_exchange_record_id=#{pointsExchangeRecordId}
+  </select>
+
+</mapper>
\ No newline at end of file
Index: out/production/integralmall/Mapper/PointsMallProductsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/Mapper/PointsMallProductsMapper.xml	(date 1575860374622)
+++ out/production/integralmall/Mapper/PointsMallProductsMapper.xml	(date 1575860374622)
@@ -0,0 +1,52 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.integralmall.Mapper.PointsMallProductsMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.PointsMallProducts">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="points_mall_products_id" jdbcType="BIGINT" property="pointsMallProductsId" />
+    <result column="using_integral" jdbcType="INTEGER" property="usingIntegral" />
+    <result column="usage_amount" jdbcType="DECIMAL" property="usageAmount" />
+    <result column="original_price" jdbcType="DECIMAL" property="originalPrice" />
+    <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
+    <result column="commodity_pictures" jdbcType="VARCHAR" property="commodityPictures" />
+    <result column="commodity_details" jdbcType="VARCHAR" property="commodityDetails" />
+    <result column="respective-area" jdbcType="BIGINT" property="respectiveArea" />
+    <result column="adding_time" jdbcType="TIMESTAMP" property="addingTime" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.PointsMallProducts">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="pointsMallProductsId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into points_mall_products (using_integral, usage_amount, original_price,
+    trade_name, commodity_pictures, commodity_details,
+    respective-area, adding_time)
+    values (#{usingIntegral,jdbcType=INTEGER}, #{usageAmount,jdbcType=DECIMAL}, #{originalPrice,jdbcType=DECIMAL},
+    #{tradeName,jdbcType=VARCHAR}, #{commodityPictures,jdbcType=VARCHAR}, #{commodityDetails,jdbcType=VARCHAR},
+    #{respectiveArea,jdbcType=BIGINT}, #{addingTime,jdbcType=TIMESTAMP})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select points_mall_products_id, using_integral, usage_amount, original_price, trade_name,
+    commodity_pictures, commodity_details, respective-area, adding_time
+    from points_mall_products
+  </select>
+  
+  <select id="findMallProducts" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_mall_products where points_mall_products_id=#{pointsMallProductsId}
+  </select>
+  
+  <select id="findProductForArea" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from points_mall_products where respective_area=#{respectiveArea}
+  </select>
+
+</mapper>
\ No newline at end of file
Index: out/production/integralmall/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- out/production/integralmall/application.yml	(date 1575940855308)
+++ out/production/integralmall/application.yml	(date 1575940855308)
@@ -0,0 +1,42 @@
+server:
+  port: 9132
+spring:
+  datasource:
+    driver-class-name: com.mysql.cj.jdbc.Driver
+    url: jdbc:mysql://127.0.0.1:3306/armylife?serverTimezone=UTC
+    username: root
+    password: root
+    hikari:
+      max-lifetime: 0
+  cloud:
+    nacos:
+      discovery:
+        server-addr: 118.31.121.141:8848
+    sentinel:
+      transport:
+        port: 8719
+        dashboard: 127.0.0.1:8718
+  session:
+    redis:
+      namespace: spring:session
+      flush-mode: on_save
+    store-type: Redis
+    timeout: 3600s
+  redis:
+    timeout: 3600s
+    port: 6379
+    host: 127.0.0.1
+  application:
+    name: integralservice
+  aop:
+    auto: true
+  jackson:
+    date-format: yyyy/MM/dd HH:mm:ss
+    time-zone: GMT+8
+mybatis:
+  mapper-locations: classpath*:Mapper/*Mapper.xml
+  config-location: classpath:Mapper/config/sqlMapConfig.xml
+logging:
+  level:
+      cn.armylife.payments.Mapper: debug
+      com.alibaba.nacos.client.naming: error
Index: member/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- member/src/main/resources/bootstrap.properties	(date 1576056330437)
+++ member/src/main/resources/bootstrap.properties	(date 1576056330437)
@@ -0,0 +1,24 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=service+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev+#spring.jndi.ignore=true++######## 企业公众号开发配置中的token(自定义)+wechat.users.token=armylife+######## 应用id+#wechat.company.appId=wx9346f9d095dafc87+wechat.users.appId=wx9e015ae632859f8e+######## 密钥(同token查看地址)+#wechat.company.appSecret=61dd7f22ded29cda049813678c1577b0+wechat.users.appSecret=9dcb718a89ef427d35aa10d69affcde5+######## 静默授权微信回调url+wechat.users.callBackSlientUrl=http://www.oneoffer.cn/companyWxpay/callback+######## 商户Id(支付相关)+wechat.users.MCHID=1516702411+######## 微信下单地址+wechat.users.wxorder=https://api.mch.weixin.qq.com/pay/unifiedorder+######## 支付api密钥+wechat.users.KEY=STFpefEPYK5smME0vleQKoywvo4vTGiG+######## 支付结果回调地址+wechat.users.NOTIFYURL=http://www.oneoffer.cn/MemberWxpay/callback
\ No newline at end of file
Index: out/production/integralmall/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- out/production/integralmall/bootstrap.properties	(date 1575012975921)
+++ out/production/integralmall/bootstrap.properties	(date 1575012975921)
@@ -0,0 +1,4 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=service+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev
\ No newline at end of file
Index: member/src/main/resources/log4j.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- member/src/main/resources/log4j.properties	(date 1575104064081)
+++ member/src/main/resources/log4j.properties	(date 1575104064081)
@@ -0,0 +1,85 @@
+# Global logging configuration
+# 设置logger级别DEBUG、INFO、WRNING、ERROR和输出格式A、B、C或D
+log4j.rootLogger=info,error,CONSOLE,Debug,CONSOLE,FILE
+# MyBatis logging configuration...
+log4j.logger.cn.armylife.member.Mapper=DEBUG
+logging.level.cn.armylife.member.Mapper=debug
+# Console output...
+log4j.appender.stdout=org.apache.log4j.ConsoleAppender
+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
+log4j.appender.stdout.layout.ConversionPattern=[%p] [%d{yyyyMMdd HH\:mm\:ss}][%c]%m%n"
+#<!--日志显示级别,com.project是项目的前缀
+logging.level.cn.armylife=WARN
+#在dao包执行时，输出sql,com.project.sccl.dao就是dao包的全路径
+logging.level.cn.armylife.member.mapper=DEBUG
+#日志的输出位置
+logging.file=logs/spring-boot-logging.log
+logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
+
+log4j.logger.info=info
+log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.info.layout=org.apache.log4j.PatternLayout
+log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.info.datePattern='.'yyyy-MM-dd
+log4j.appender.info.Threshold = info
+log4j.appender.info.append=true
+log4j.appender.info.File=/home/admin/pms-api-services/logs/info/api_services_info
+#log4j.appender.info.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.error=error
+log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.error.layout=org.apache.log4j.PatternLayout
+log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.error.datePattern='.'yyyy-MM-dd
+log4j.appender.error.Threshold = error
+log4j.appender.error.append=true
+log4j.appender.error.File=/home/admin/pms-api-services/logs/error/api_services_error
+#log4j.appender.error.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.DEBUG=DEBUG
+log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
+log4j.appender.DEBUG.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.DEBUG.datePattern='.'yyyy-MM-dd
+log4j.appender.DEBUG.Threshold = DEBUG
+log4j.appender.DEBUG.append=true
+log4j.appender.DEBUG.File=/home/admin/pms-api-services/logs/debug/api_services_debug
+#log4j.appender.DEBUG.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+### Debug
+log4j.logger.com.ibatis=DEBUG
+log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
+log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
+log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
+log4j.logger.java.sql.Connection=DEBUG
+log4j.logger.java.sql.Statement=DEBUG
+log4j.logger.java.sql.PreparedStatement=DEBUG
+
+#
+log4j.rootCategory=INFO, stdout, file
+
+# root日志输出
+log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.file.file=logs/all.log
+log4j.appender.file.DatePattern='.'yyyy-MM-dd
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
+
+# com.didispace包下的日志配置
+log4j.category.cn.armylife.member.Controller=DEBUG, didifile
+
+# com.didispace下的日志输出
+log4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.didifile.file=logs/my.log
+log4j.appender.didifile.DatePattern='.'yyyy-MM-dd
+log4j.appender.didifile.layout=org.apache.log4j.PatternLayout
+log4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n
+#
+#log4j.logger.error=errorfile
+## error日志输出
+#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
+#log4j.appender.errorfile.file=logs/error.log
+#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
+#log4j.appender.errorfile.Threshold = ERROR
+#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
+#log4j.appender.errorfilee.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Util/WXPayUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/WXPayUtil.java	(date 1574215205799)
+++ market/src/main/java/cn/armylife/market/Util/WXPayUtil.java	(date 1574215205799)
@@ -0,0 +1,527 @@
+package cn.armylife.market.Util;
+
+import com.alibaba.csp.sentinel.util.StringUtil;
+import com.alibaba.fastjson.JSONObject;
+import com.github.wxpay.sdk.WXPayConstants;
+import com.github.wxpay.sdk.WXPayConstants.SignType;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+import javax.servlet.http.HttpServletRequest;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import java.io.*;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLEncoder;
+import java.security.MessageDigest;
+import java.security.SecureRandom;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+
+public class WXPayUtil {
+
+    private static final String SYMBOLS = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
+    private static final Random RANDOM = new SecureRandom();
+
+    /**
+     * XML格式字符串转换为Map
+     *
+     * @param strXML XML字符串
+     * @return XML数据转换后的Map
+     * @throws Exception
+     */
+    public static Map<String, String> xmlToMap(String strXML) throws Exception {
+        try {
+            Map<String, String> data = new HashMap<String, String>();
+            DocumentBuilder documentBuilder = WXPayXmlUtil.newDocumentBuilder();
+            InputStream stream = new ByteArrayInputStream(strXML.getBytes("UTF-8"));
+            org.w3c.dom.Document doc = documentBuilder.parse(stream);
+            doc.getDocumentElement().normalize();
+            NodeList nodeList = doc.getDocumentElement().getChildNodes();
+            for (int idx = 0; idx < nodeList.getLength(); ++idx) {
+                Node node = nodeList.item(idx);
+                if (node.getNodeType() == Node.ELEMENT_NODE) {
+                    org.w3c.dom.Element element = (org.w3c.dom.Element) node;
+                    data.put(element.getNodeName(), element.getTextContent());
+                }
+            }
+            try {
+                stream.close();
+            } catch (Exception ex) {
+                // do nothing
+            }
+            return data;
+        } catch (Exception ex) {
+            WXPayUtil.getLogger().warn("Invalid XML, can not convert to map. Error message: {}. XML content: {}", ex.getMessage(), strXML);
+            throw ex;
+        }
+
+    }
+
+    /**
+     * 将Map转换为XML格式的字符串
+     *
+     * @param data Map类型数据
+     * @return XML格式的字符串
+     * @throws Exception
+     */
+    public static String mapToXml(Map<String, String> data) throws Exception {
+        org.w3c.dom.Document document = WXPayXmlUtil.newDocument();
+        org.w3c.dom.Element root = document.createElement("xml");
+        document.appendChild(root);
+        for (String key: data.keySet()) {
+            String value = data.get(key);
+            if (value == null) {
+                value = "";
+            }
+            value = value.trim();
+            org.w3c.dom.Element filed = document.createElement(key);
+            filed.appendChild(document.createTextNode(value));
+            root.appendChild(filed);
+        }
+        TransformerFactory tf = TransformerFactory.newInstance();
+        Transformer transformer = tf.newTransformer();
+        DOMSource source = new DOMSource(document);
+        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
+        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
+        StringWriter writer = new StringWriter();
+        StreamResult result = new StreamResult(writer);
+        transformer.transform(source, result);
+        String output = writer.getBuffer().toString(); //.replaceAll("\n|\r", "");
+        try {
+            writer.close();
+        }
+        catch (Exception ex) {
+        }
+        return output;
+    }
+
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key) throws Exception {
+        return generateSignedXml(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名类型
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key, SignType signType) throws Exception {
+        String sign = generateSignature(data, key, signType);
+        data.put(WXPayConstants.FIELD_SIGN, sign);
+        return mapToXml(data);
+    }
+
+
+    /**
+     * 判断签名是否正确
+     *
+     * @param xmlStr XML格式数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(String xmlStr, String key) throws Exception {
+        Map<String, String> data = xmlToMap(xmlStr);
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key).equals(sign);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。使用MD5签名。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key) throws Exception {
+        return isSignatureValid(data, key, SignType.MD5);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key, SignType signType) throws Exception {
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key, signType).equals(sign);
+    }
+
+    /**
+     * 生成签名
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key) throws Exception {
+        return generateSignature(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成签名. 注意，若含有sign_type字段，必须和signType参数保持一致。
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key, SignType signType) throws Exception {
+        Set<String> keySet = data.keySet();
+        String[] keyArray = keySet.toArray(new String[keySet.size()]);
+        Arrays.sort(keyArray);
+        StringBuilder sb = new StringBuilder();
+        for (String k : keyArray) {
+            if (k.equals(WXPayConstants.FIELD_SIGN)) {
+                continue;
+            }
+            if (data.get(k).trim().length() > 0) // 参数值为空，则不参与签名
+                sb.append(k).append("=").append(data.get(k).trim()).append("&");
+        }
+        sb.append("key=").append(key);
+        if (SignType.MD5.equals(signType)) {
+            return MD5(sb.toString()).toUpperCase();
+        }
+        else if (SignType.HMACSHA256.equals(signType)) {
+            return HMACSHA256(sb.toString(), key);
+        }
+        else {
+            throw new Exception(String.format("Invalid sign_type: %s", signType));
+        }
+    }
+
+
+    /**
+     * 获取随机字符串 Nonce Str
+     *
+     * @return String 随机字符串
+     */
+    public static String generateNonceStr() {
+        char[] nonceChars = new char[32];
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        return new String(nonceChars);
+    }
+
+
+    /**
+     * 生成 MD5
+     *
+     * @param data 待处理数据
+     * @return MD5结果
+     */
+    public static String MD5(String data) throws Exception {
+        MessageDigest md = MessageDigest.getInstance("MD5");
+        byte[] array = md.digest(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 生成 HMACSHA256
+     * @param data 待处理数据
+     * @param key 密钥
+     * @return 加密结果
+     * @throws Exception
+     */
+    public static String HMACSHA256(String data, String key) throws Exception {
+        Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
+        SecretKeySpec secret_key = new SecretKeySpec(key.getBytes("UTF-8"), "HmacSHA256");
+        sha256_HMAC.init(secret_key);
+        byte[] array = sha256_HMAC.doFinal(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 日志
+     * @return
+     */
+    public static Logger getLogger() {
+        Logger logger = LoggerFactory.getLogger("wxpay java sdk");
+        return logger;
+    }
+
+    /**
+     * 获取当前时间戳，单位秒
+     * @return
+     */
+    public static long getCurrentTimestamp() {
+        return System.currentTimeMillis()/1000;
+    }
+
+    /**
+     * 获取当前时间戳，单位毫秒
+     * @return
+     */
+    public static String getCurrentTimestampMs() {
+        return String.valueOf(System.currentTimeMillis());
+    }
+
+    public static String generateOrderId() {
+        char[] nonceChars = new char[6];  //6个随机字符
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");//设置日期格式
+        String orderId1=df.format(new Date());
+
+        String orderI2=new String(nonceChars);
+        String orderId =orderId1+orderI2;
+        return orderId;
+    }
+
+    public static String sendPost(String url, String param) {
+        PrintWriter out = null;
+        BufferedReader in = null;
+        String result = "";
+        try {
+            URL realUrl = new URL(url);
+            // 打开和URL之间的连接
+            URLConnection conn = realUrl.openConnection();
+            // 设置通用的请求属性
+            conn.setRequestProperty("accept", "*/*");
+            conn.setRequestProperty("connection", "Keep-Alive");
+            conn.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            // 发送POST请求必须设置如下两行
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            // 获取URLConnection对象对应的输出流
+            out = new PrintWriter(conn.getOutputStream());
+            // 发送请求参数
+            out.print(param);
+            // flush输出流的缓冲
+            out.flush();
+            // 定义BufferedReader输入流来读取URL的响应
+            in = new BufferedReader(
+                    new InputStreamReader(conn.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            System.out.println("发送 POST 请求出现异常！"+e);
+            e.printStackTrace();
+        }
+        //使用finally块来关闭输出流、输入流
+        finally{
+            try{
+                if(out!=null){
+                    out.close();
+                }
+                if(in!=null){
+                    in.close();
+                }
+            }
+            catch(IOException ex){
+                ex.printStackTrace();
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 返回客户端ip
+     *
+     * @param request
+     * @return
+     */
+    public static String getRemoteAddrIp(HttpServletRequest request) {
+        String ip = request.getHeader("X-Forwarded-For");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            // 多次反向代理后会有多个ip值，第一个ip才是真实ip
+            int index = ip.indexOf(",");
+            if (index != -1) {
+                return ip.substring(0, index);
+            } else {
+
+                return ip;
+            }
+        }
+        ip = request.getHeader("X-Real-IP");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            return ip;
+        }
+        return request.getRemoteAddr();
+    }
+
+
+    /**
+     * 构造签名
+     *
+     * @param params
+     * @param encode
+     * @return
+     * @throws UnsupportedEncodingException
+     */
+    public static String createSign(Map<String, String> params, boolean encode) throws UnsupportedEncodingException {
+        Set<String> keysSet = params.keySet();
+        Object[] keys = keysSet.toArray();
+        Arrays.sort(keys);
+        StringBuffer temp = new StringBuffer();
+        boolean first = true;
+        for (Object key : keys) {
+            if (key == null || StringUtil.isEmpty(params.get(key))) // 参数为空不参与签名
+                continue;
+            if (first) {
+                first = false;
+            } else {
+                temp.append("&");
+            }
+            temp.append(key).append("=");
+            Object value = params.get(key);
+            String valueStr = "";
+            if (null != value) {
+                valueStr = value.toString();
+            }
+            if (encode) {
+                temp.append(URLEncoder.encode(valueStr, "UTF-8"));
+            } else {
+                temp.append(valueStr);
+            }
+        }
+        return temp.toString();
+    }
+
+    /**
+     * 获取服务器的ip地址
+     *
+     * @param request
+     * @return
+     */
+    public static String getLocalIp(HttpServletRequest request) {
+        return request.getLocalAddr();
+    }
+
+    public static final String inputStream2String(InputStream in) throws UnsupportedEncodingException, IOException {
+        if(in == null)
+            return "";
+
+        StringBuffer out = new StringBuffer();
+        byte[] b = new byte[4096];
+        for (int n; (n = in.read(b)) != -1;) {
+            out.append(new String(b, 0, n, "UTF-8"));
+        }
+        return out.toString();
+    }
+
+    //获取token
+    public static String getAccessToken(String AppId, String secret) {
+
+        String access_token = "";
+        String grant_type = "client_credential";//获取access_token填写client_credential
+
+        //这个url链接地址和参数皆不能变
+        String url = "https://api.weixin.qq.com/cgi-bin/token?grant_type="+grant_type+"&appid="+AppId+"&secret="+secret;  //访问链接
+
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            /*System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒 */
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            access_token = demoJson.getString("access_token");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return access_token;
+    }
+
+    //获取ticket
+    public static String getTicket(String access_token) {
+        String ticket = null;
+        String url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token="+ access_token +"&type=jsapi";//这个url链接和参数不能变
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            ticket = demoJson.getString("ticket");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return ticket;
+    }
+
+    public static String getfree(String free) {
+        int index = free.indexOf(".");
+        int length = free.length();
+        Long amLong = 0L;
+        if(index == -1){
+            amLong = Long.valueOf(free+"00");
+        }else if(length - index >= 3){
+            amLong = Long.valueOf((free.substring(0, index+3)).replace(".", ""));
+        }else if(length - index == 2){
+            amLong = Long.valueOf((free.substring(0, index+2)).replace(".", "")+0);
+        }else{
+            amLong = Long.valueOf((free.substring(0, index+1)).replace(".", "")+"00");
+        }
+        return amLong.toString();
+    }
+
+}
Index: market/src/main/java/cn/armylife/market/Util/MemberWXMyConfigUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/MemberWXMyConfigUtil.java	(date 1574214795214)
+++ market/src/main/java/cn/armylife/market/Util/MemberWXMyConfigUtil.java	(date 1574214795214)
@@ -0,0 +1,64 @@
+package cn.armylife.market.Util;++import cn.armylife.market.Domain.WeChatUsers;+import com.github.wxpay.sdk.WXPayConfig;+import org.apache.commons.io.IOUtils;+import org.springframework.stereotype.Component;++import java.io.ByteArrayInputStream;+import java.io.InputStream;++@Component+public class MemberWXMyConfigUtil implements WXPayConfig {+        private byte[] certData;+        WeChatUsers weChatUsers;++//        public MemberWXMyConfigUtil() throws Exception {+//            Resource resource = new ClassPathResource("/apiclient_cert.p12");//"apiclient_cert.p12";//从微信商户平台下载的安全证书存放的目录+//          // String certPath="E:\\javaPicture\\yezz\\apiclient_cert.p12";+//            File file = resource.getFile();+//            InputStream certStream = new FileInputStream(file);+//            this.certData = new byte[(int) file.length()];+//            certStream.read(this.certData);+//            certStream.close();+//        }++        @Override+        public String getAppID() {+            return weChatUsers.getAppId();+        }++        //parnerid+        @Override+        public String getMchID() {+            return weChatUsers.getMCHID();+        }++        @Override+        public String getKey() {+            return weChatUsers.getKEY();+        }++        @Override+        public InputStream getCertStream() {+            try {+                InputStream certStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("apiclient_cert.p12");+                this.certData = IOUtils.toByteArray(certStream);+                certStream.close();+            } catch (Exception e) {+                e.printStackTrace();+            }+            ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);+            return certBis;+        }++        @Override+        public int getHttpConnectTimeoutMs() {+            return 8000;+        }++        @Override+        public int getHttpReadTimeoutMs() {+            return 10000;+        }+    }Index: market/src/main/java/cn/armylife/market/Util/HttpGet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/HttpGet.java	(date 1574214225054)
+++ market/src/main/java/cn/armylife/market/Util/HttpGet.java	(date 1574214225054)
@@ -0,0 +1,51 @@
+package cn.armylife.market.Util;++import org.springframework.stereotype.Service;++import javax.servlet.http.HttpServlet;+import java.io.BufferedReader;+import java.io.IOException;+import java.io.InputStreamReader;+import java.net.URL;+import java.net.URLConnection;++@Service+public class HttpGet extends HttpServlet {+    //HttpGet方法+    public static String HttpGet(String URL, String GetDataStr){++        String getUrl = URL+GetDataStr;+        StringBuffer sb = new StringBuffer();+        InputStreamReader isr = null;+        BufferedReader br = null;+        try+        {+            java.net.URL url = new URL(getUrl);+            URLConnection urlConnection = url.openConnection();+            urlConnection.setAllowUserInteraction(false);+            isr = new InputStreamReader(url.openStream());+            br = new BufferedReader(isr);+            String line;+            while ((line = br.readLine()) != null)+            {+                sb.append(line);+            }+        }+        catch (IOException e)+        {+            e.printStackTrace();+        }+        finally+        {+            try {+                br.close();+                isr.close();+            } catch (IOException e) {+                e.printStackTrace();+            }+        }+        return sb.toString();+    }+++}Index: market/src/main/java/cn/armylife/market/Util/WXPayXmlUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/WXPayXmlUtil.java	(date 1574214225017)
+++ market/src/main/java/cn/armylife/market/Util/WXPayXmlUtil.java	(date 1574214225017)
@@ -0,0 +1,30 @@
+package cn.armylife.market.Util;
+
+import org.w3c.dom.Document;
+
+import javax.xml.XMLConstants;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+/**
+ * 2018/7/3
+ */
+public final class WXPayXmlUtil {
+    public static DocumentBuilder newDocumentBuilder() throws ParserConfigurationException {
+        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+        documentBuilderFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+        documentBuilderFactory.setXIncludeAware(false);
+        documentBuilderFactory.setExpandEntityReferences(false);
+
+        return documentBuilderFactory.newDocumentBuilder();
+    }
+
+    public static Document newDocument() throws ParserConfigurationException {
+        return newDocumentBuilder().newDocument();
+    }
+}
Index: market/src/main/java/cn/armylife/market/Util/NumberID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/NumberID.java	(date 1574214224900)
+++ market/src/main/java/cn/armylife/market/Util/NumberID.java	(date 1574214224900)
@@ -0,0 +1,23 @@
+package cn.armylife.market.Util;
+
+import org.springframework.stereotype.Component;
+
+import java.util.UUID;
+
+@Component
+public class NumberID{
+
+    public static Long nextId(Integer port){
+        int machineId = port;//最大支持1-9个集群机器部署
+        int hashCodeV = UUID.randomUUID().toString().hashCode();
+        if(hashCodeV < 0) {//有可能是负数
+            hashCodeV = - hashCodeV;
+        }
+//         0 代表前面补充0     
+//         4 代表长度为4     
+//         d 代表参数为正数型
+        String num=machineId+ String.format("%010d", hashCodeV);
+        Long number=Long.valueOf(num);
+        return number;
+    }
+}
Index: market/src/main/java/cn/armylife/market/Util/nextId.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Util/nextId.java	(date 1574214224830)
+++ market/src/main/java/cn/armylife/market/Util/nextId.java	(date 1574214224830)
@@ -0,0 +1,25 @@
+package cn.armylife.market.Util;
+
+import org.springframework.beans.factory.annotation.Value;
+
+import java.util.UUID;
+
+public class nextId extends Thread {
+
+    @Value("${server.port}")
+    String port;
+
+    public  void  run(){
+        int machineId = 10001;//最大支持1-9个集群机器部署
+        int hashCodeV = UUID.randomUUID().toString().hashCode();
+        if(hashCodeV < 0) {//有可能是负数
+            hashCodeV = - hashCodeV;
+        }
+//         0 代表前面补充0     
+//         4 代表长度为4     
+//         d 代表参数为正数型
+        String num=machineId+ String.format("%010d", hashCodeV);
+
+        System.out.println(num);
+    }
+}
Index: market/src/main/java/cn/armylife/market/Feign/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Feign/MemberService.java	(date 1575468077747)
+++ market/src/main/java/cn/armylife/market/Feign/MemberService.java	(date 1575468077747)
@@ -0,0 +1,18 @@
+package cn.armylife.market.Feign;
+
+import cn.armylife.common.Domain.Member;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "memberservice")
+public interface MemberService {
+
+    @RequestMapping(value = "selectMemberforId",method = RequestMethod.GET)
+    Member selectMemberforId(@RequestParam Long memberId);
+
+    @RequestMapping(value = "updateMember",method = RequestMethod.GET)
+    int updateMember(@RequestParam Member member);
+
+}
Index: market/src/main/java/cn/armylife/market/Feign/PayMentsService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Feign/PayMentsService.java	(date 1575556796429)
+++ market/src/main/java/cn/armylife/market/Feign/PayMentsService.java	(date 1575556796429)
@@ -0,0 +1,25 @@
+package cn.armylife.market.Feign;
+
+import cn.armylife.common.Domain.Payments;
+import cn.armylife.market.ServiceHysrix.PayMentsServiceHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.math.BigDecimal;
+
+@FeignClient(value = "paymentservice",fallback = PayMentsServiceHystrix.class)
+public interface PayMentsService {
+
+    @RequestMapping(value = "Alipayrefund",method = RequestMethod.GET)
+    int Alipayrefund(@RequestParam String WIDout_trade_no, @RequestParam String WIDsubject, @RequestParam String WIDrefund_amount, @RequestParam String WIDbody);
+
+    @RequestMapping(value = "selectPaments",method = RequestMethod.GET)
+    Payments selectPaments(@RequestParam Long orderId);
+
+    @RequestMapping(value = "WechatPayTransfer",method = RequestMethod.GET)
+    int WechatPayTransfer(@RequestParam Long orderCardId, @RequestParam  BigDecimal refundfree, @RequestParam BigDecimal totalfree, @RequestParam String desc);
+
+}
+
Index: member/src/main/resources/Mapper/OrderDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/OrderDetailMapper.xml	(date 1573869234302)
+++ member/src/main/resources/Mapper/OrderDetailMapper.xml	(date 1573869234302)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.OrderDetailMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.OrderDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="order_detail_id" jdbcType="INTEGER" property="orderDetailId" />
+    <result column="order_id" jdbcType="INTEGER" property="orderId" />
+    <result column="order_detail_name" jdbcType="VARCHAR" property="orderDetailName" />
+    <result column="order_detail_png" jdbcType="VARCHAR" property="orderDetailPng" />
+    <result column="order_detail_total" jdbcType="REAL" property="orderDetailTotal" />
+    <result column="order_detail_num" jdbcType="INTEGER" property="orderDetailNum" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from order_detail
+    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.OrderDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="orderDetailId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into order_detail (order_id, order_detail_name, order_detail_png, 
+      order_detail_total, order_detail_num)
+    values (#{orderId,jdbcType=INTEGER}, #{orderDetailName,jdbcType=VARCHAR}, #{orderDetailPng,jdbcType=VARCHAR}, 
+      #{orderDetailTotal,jdbcType=REAL}, #{orderDetailNum,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.OrderDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update order_detail
+    set order_id = #{orderId,jdbcType=INTEGER},
+      order_detail_name = #{orderDetailName,jdbcType=VARCHAR},
+      order_detail_png = #{orderDetailPng,jdbcType=VARCHAR},
+      order_detail_total = #{orderDetailTotal,jdbcType=REAL},
+      order_detail_num = #{orderDetailNum,jdbcType=INTEGER}
+    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select order_detail_id, order_id, order_detail_name, order_detail_png, order_detail_total, 
+    order_detail_num
+    from order_detail
+    where order_detail_id = #{orderDetailId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select order_detail_id, order_id, order_detail_name, order_detail_png, order_detail_total, 
+    order_detail_num
+    from order_detail
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/MemberMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/MemberMapper.xml	(date 1575484602586)
+++ member/src/main/resources/Mapper/MemberMapper.xml	(date 1575484602586)
@@ -0,0 +1,179 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.member.Mapper.MemberMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Member" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+
+    <result column="member_id" jdbcType="BIGINT" property="memberId" />
+    <result column="member_type" jdbcType="VARCHAR" property="memberType" />
+    <result column="member_idcard" jdbcType="VARCHAR" property="memberIdcard" />
+    <result column="member_wechat" jdbcType="VARCHAR" property="memberWechat" />
+    <result column="member_wechat_token" jdbcType="VARCHAR" property="memberWechatToken" />
+    <result column="member_alinumber" jdbcType="VARCHAR" property="memberAlinumber" />
+    <result column="member_ali_token" jdbcType="VARCHAR" property="memberAliToken" />
+    <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar" />
+    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
+    <result column="member_nickname" jdbcType="VARCHAR" property="memberNickname" />
+    <result column="register_time" jdbcType="VARCHAR" property="registerTime" />
+    <result column="lastlogin_time" jdbcType="VARCHAR" property="lastloginTime" />
+    <result column="member_phone" jdbcType="VARCHAR" property="memberPhone" />
+    <result column="member_total" jdbcType="DECIMAL" property="memberTotal" />
+    <result column="member_status" jdbcType="INTEGER" property="memberStatus" />
+    <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
+    <result column="shop_status" jdbcType="INTEGER" property="shopStatus" />
+    <result column="alid" jdbcType="INTEGER" property="alid" />
+    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
+    <result column="isHot" jdbcType="INTEGER" property="isHot" />
+    <result column="isdeliver" jdbcType="INTEGER" property="isdeliver" />
+  </resultMap>
+  <resultMap id="ShopMap" type="cn.armylife.common.Domain.Member" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+
+    <result column="member_id" jdbcType="BIGINT" property="memberId" />
+    <result column="member_type" jdbcType="VARCHAR" property="memberType" />
+    <result column="member_idcard" jdbcType="VARCHAR" property="memberIdcard" />
+    <result column="member_wechat" jdbcType="VARCHAR" property="memberWechat" />
+    <result column="member_wechat_token" jdbcType="VARCHAR" property="memberWechatToken" />
+    <result column="member_alinumber" jdbcType="VARCHAR" property="memberAlinumber" />
+    <result column="member_ali_token" jdbcType="VARCHAR" property="memberAliToken" />
+    <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar" />
+    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
+    <result column="member_nickname" jdbcType="VARCHAR" property="memberNickname" />
+    <result column="register_time" jdbcType="VARCHAR" property="registerTime" />
+    <result column="lastlogin_time" jdbcType="VARCHAR" property="lastloginTime" />
+    <result column="member_phone" jdbcType="VARCHAR" property="memberPhone" />
+    <result column="member_total" jdbcType="DECIMAL" property="memberTotal" />
+    <result column="member_status" jdbcType="INTEGER" property="memberStatus" />
+    <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
+    <result column="shop_status" jdbcType="INTEGER" property="shopStatus" />
+    <result column="alid" jdbcType="INTEGER" property="alid" />
+    <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
+    <result column="isHot" jdbcType="INTEGER" property="isHot" />
+    <result column="isdeliver" jdbcType="INTEGER" property="isdeliver" />
+    <collection property="shopTag" ofType="cn.armylife.common.Domain.ShopTag">
+      <result column="shop_tag_id" jdbcType="BIGINT" property="shopTagId" />
+      <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
+      <result column="shop_id" jdbcType="BIGINT" property="shopId" />
+      <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    </collection>
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Member">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="memberId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into member (member_type, member_idcard, member_wechat,
+    member_wechat_token, member_alinumber, member_ali_token,
+    member_avatar, member_name, member_nickname,
+    register_time, lastlogin_time, member_phone,
+    member_total, member_status, member_password,
+    shop_status, alid, shop_name
+    )
+    values (#{memberType,jdbcType=VARCHAR}, #{memberIdcard,jdbcType=VARCHAR}, #{memberWechat,jdbcType=VARCHAR},
+    #{memberWechatToken,jdbcType=VARCHAR}, #{memberAlinumber,jdbcType=VARCHAR}, #{memberAliToken,jdbcType=VARCHAR},
+    #{memberAvatar,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{memberNickname,jdbcType=VARCHAR},
+    #{registerTime,jdbcType=VARCHAR}, #{lastloginTime,jdbcType=VARCHAR}, #{memberPhone,jdbcType=VARCHAR},
+    #{memberTotal,jdbcType=DECIMAL}, #{memberStatus,jdbcType=INTEGER}, #{memberPassword,jdbcType=VARCHAR},
+    #{shopStatus,jdbcType=INTEGER}, #{alid,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}
+    )
+  </insert>
+
+
+  <select id="loginUser" parameterType="cn.armylife.common.Domain.Member" resultMap="BaseResultMap">
+    select * from member where member_wechat=#{memberWechat} and member_type=#{memberType};
+  </select>
+
+  <select id="loginShop" parameterType="cn.armylife.common.Domain.Member" resultMap="BaseResultMap">
+    select * from member where member_phone=#{memberPhone} and member_type="3"
+  </select>
+
+  
+  <select id="reloadSession" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from member where member_id=#{memberId}
+  </select>
+
+  <update id="updateMember">
+    update member
+    <set>
+      <if test="memberIdcard!=null">
+      member_idcard=#{memberIdcard},
+      </if>
+      <if test="memberWechat!=null">
+        member_wechat=#{memberWechat},
+      </if>
+      <if test="memberAvatar!=null">
+        member_avatar=#{memberAvatar},
+      </if>
+      <if test="memberName!=null">
+        member_name=#{memberName},
+      </if>
+      <if test="memberNickname!=null">
+        member_nickname=#{memberNickname},
+      </if>
+      <if test="lastloginTime!=null">
+        lastlogin_time=#{lastloginTime},
+      </if>
+      <if test="memberPhone!=null">
+        member_phone=#{memberPhone},
+      </if>
+      <if test="memberTotal!=null">
+        member_total=#{memberTotal},
+      </if>
+      <if test="memberStatus!=null">
+        member_status=#{memberStatus},
+      </if>
+      <if test="memberPassword!=null">
+        member_password=#{memberPassword},
+      </if>
+      <if test="alid!=null">
+        alid=#{alid},
+      </if>
+      <if test="shopStatus!=null">
+        shop_status=#{shopStatus},
+      </if>
+      <if test="shopName!=null">
+        shop_name=#{shopName},
+      </if>
+      <if test="isHot!=null">
+        isHot=#{isHot},
+      </if>
+     armylife=1 where member_id=#{memberId}
+  </set>
+  </update>
+<!--  通过用户的openid验证是否注册-->
+  <select id="inspectMemberForOpenId" parameterType="cn.armylife.common.Domain.Member" resultMap="BaseResultMap">
+    select * from member where member_wechat=#{memberWechat} and member_type=#{memberType}
+  </select>
+
+  <!--  通过用户的openid验证是否注册-->
+  <select id="inspectMemberForPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
+    select * from member where member_phone=#{phone}
+  </select>
+
+  <update id="updateDeliveryPhone">
+    update member set member_phone=#{memberPhone} where member_id=#{memberId}
+  </update>
+
+  <select id="selectMemberforId" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from member where member_id=#{memberId}
+  </select>
+
+  <select id="ShopNewForAppId" parameterType="java.lang.String" resultMap="ShopMap">
+    select * from member m
+    inner join shop_tag st on m.member_id=st.shop_id
+    where armylife=#{appID}
+  </select>
+  <update id="isdeliver">
+    update member set isdeliver=#{total} where member_id=#{shopId}
+  </update>
+
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/DeliveryOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/DeliveryOrderMapper.xml	(date 1573874971505)
+++ member/src/main/resources/Mapper/DeliveryOrderMapper.xml	(date 1573874971505)
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.DeliveryOrderMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="delivery_orders_id" jdbcType="INTEGER" property="deliveryOrdersId" />
+    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
+    <result column="delivery_user_id" jdbcType="INTEGER" property="deliveryUserId" />
+    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
+    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
+    <result column="user_name" jdbcType="VARCHAR" property="userName" />
+    <result column="delivery_total" jdbcType="REAL" property="deliveryTotal" />
+    <result column="status" jdbcType="INTEGER" property="status" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from delivery_order
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="deliveryOrdersId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into delivery_order (orders_id, delivery_user_id, delivery_address, 
+      user_phone, user_name, delivery_total, 
+      `status`)
+    values (#{ordersId,jdbcType=INTEGER}, #{deliveryUserId,jdbcType=INTEGER}, #{deliveryAddress,jdbcType=VARCHAR}, 
+      #{userPhone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{deliveryTotal,jdbcType=REAL}, 
+      #{status,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update delivery_order
+    set orders_id = #{ordersId,jdbcType=INTEGER},
+      delivery_user_id = #{deliveryUserId,jdbcType=INTEGER},
+      delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
+      user_phone = #{userPhone,jdbcType=VARCHAR},
+      user_name = #{userName,jdbcType=VARCHAR},
+      delivery_total = #{deliveryTotal,jdbcType=REAL},
+      `status` = #{status,jdbcType=INTEGER}
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select delivery_orders_id, orders_id, delivery_user_id, delivery_address, user_phone, 
+    user_name, delivery_total, `status`
+    from delivery_order
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select delivery_orders_id, orders_id, delivery_user_id, delivery_address, user_phone, 
+    user_name, delivery_total, `status`
+    from delivery_order
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/PaymentsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/PaymentsMapper.xml	(date 1573869234151)
+++ member/src/main/resources/Mapper/PaymentsMapper.xml	(date 1573869234151)
@@ -0,0 +1,95 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.PaymentsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="payments_id" jdbcType="INTEGER" property="paymentsId" />
+    <result column="pay_name" jdbcType="INTEGER" property="payName" />
+    <result column="receiv_name" jdbcType="INTEGER" property="receivName" />
+    <result column="pay_total" jdbcType="REAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
+    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
+    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+    <result column="pay_refund" jdbcType="INTEGER" property="payRefund" />
+    <result column="refund_desc" jdbcType="VARCHAR" property="refundDesc" />
+    <result column="refund_total" jdbcType="REAL" property="refundTotal" />
+    <result column="refuns_time" jdbcType="VARCHAR" property="refunsTime" />
+    <result column="refunds_bumber" jdbcType="VARCHAR" property="refundsBumber" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from payments
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="paymentsId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into payments (pay_name, receiv_name, pay_total, 
+      pay_desc, pay_status, pay_order, 
+      pay_number, creat_time, end_time, 
+      pay_refund, refund_desc, refund_total, 
+      refuns_time, refunds_bumber)
+    values (#{payName,jdbcType=INTEGER}, #{receivName,jdbcType=INTEGER}, #{payTotal,jdbcType=REAL}, 
+      #{payDesc,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, #{payOrder,jdbcType=INTEGER}, 
+      #{payNumber,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, 
+      #{payRefund,jdbcType=INTEGER}, #{refundDesc,jdbcType=VARCHAR}, #{refundTotal,jdbcType=REAL}, 
+      #{refunsTime,jdbcType=VARCHAR}, #{refundsBumber,jdbcType=VARCHAR})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update payments
+    set pay_name = #{payName,jdbcType=INTEGER},
+      receiv_name = #{receivName,jdbcType=INTEGER},
+      pay_total = #{payTotal,jdbcType=REAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR},
+      pay_status = #{payStatus,jdbcType=VARCHAR},
+      pay_order = #{payOrder,jdbcType=INTEGER},
+      pay_number = #{payNumber,jdbcType=VARCHAR},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      end_time = #{endTime,jdbcType=VARCHAR},
+      pay_refund = #{payRefund,jdbcType=INTEGER},
+      refund_desc = #{refundDesc,jdbcType=VARCHAR},
+      refund_total = #{refundTotal,jdbcType=REAL},
+      refuns_time = #{refunsTime,jdbcType=VARCHAR},
+      refunds_bumber = #{refundsBumber,jdbcType=VARCHAR}
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, pay_order, 
+    pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, refuns_time, 
+    refunds_bumber
+    from payments
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, pay_order, 
+    pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, refuns_time, 
+    refunds_bumber
+    from payments
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/ShopOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/ShopOrderMapper.xml	(date 1575275901812)
+++ member/src/main/resources/Mapper/ShopOrderMapper.xml	(date 1575275901812)
@@ -0,0 +1,97 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.ShopOrderMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.ShopOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+    <result column="orders_type" property="ordersType" jdbcType="INTEGER" />
+    <result column="orders_people" property="ordersPeople" jdbcType="INTEGER" />
+    <result column="appintment" property="appintment" jdbcType="VARCHAR" />
+    <result column="product_id" property="productId" jdbcType="VARCHAR" />
+    <result column="orders_reserve" property="ordersReserve" jdbcType="VARCHAR" />
+    <result column="reserve_number" property="reserveNumber" jdbcType="INTEGER" />
+    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
+    <result column="stu_id" property="stuId" jdbcType="INTEGER" />
+    <result column="isdelivery" property="isdelivery" jdbcType="INTEGER" />
+    <result column="orders_address" property="ordersAddress" jdbcType="VARCHAR" />
+    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
+    <result column="orders_desc" property="ordersDesc" jdbcType="VARCHAR" />
+    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
+    <result column="orders_status" property="ordersStatus" jdbcType="VARCHAR" />
+    <result column="order_total" property="orderTotal" jdbcType="DECIMAL" />
+    <result column="delivery_total" property="deliveryTotal" jdbcType="DECIMAL" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from shop_order
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ShopOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Integer" keyProperty="ordersId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into shop_order (orders_type, product_id, orders_reserve,
+    reserve_number, shop_id, stu_id,
+    orders_address, user_phone, orders_desc,
+    creat_time, end_time, orders_status,
+    order_total)
+    values (#{ordersType,jdbcType=INTEGER}, #{productId,jdbcType=VARCHAR}, #{ordersReserve,jdbcType=VARCHAR},
+    #{reserveNumber,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER}, #{stuId,jdbcType=INTEGER},
+    #{ordersAddress,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{ordersDesc,jdbcType=VARCHAR},
+    #{creatTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{ordersStatus,jdbcType=VARCHAR},
+    #{orderTotal,jdbcType=REAL})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.ShopOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update shop_order
+    set orders_type = #{ordersType,jdbcType=INTEGER},
+    product_id = #{productId,jdbcType=VARCHAR},
+    orders_reserve = #{ordersReserve,jdbcType=VARCHAR},
+    reserve_number = #{reserveNumber,jdbcType=INTEGER},
+    shop_id = #{shopId,jdbcType=INTEGER},
+    stu_id = #{stuId,jdbcType=INTEGER},
+    orders_address = #{ordersAddress,jdbcType=VARCHAR},
+    user_phone = #{userPhone,jdbcType=VARCHAR},
+    orders_desc = #{ordersDesc,jdbcType=VARCHAR},
+    creat_time = #{creatTime,jdbcType=VARCHAR},
+    end_time = #{endTime,jdbcType=VARCHAR},
+    orders_status = #{ordersStatus,jdbcType=VARCHAR},
+    order_total = #{orderTotal,jdbcType=REAL}
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select orders_id, orders_type, product_id, orders_reserve, reserve_number, shop_id,
+    stu_id, orders_address, user_phone, orders_desc, creat_time, end_time, orders_status,
+    order_total
+    from shop_order
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select orders_id, orders_type, product_id, orders_reserve, reserve_number, shop_id,
+    stu_id, orders_address, user_phone, orders_desc, creat_time, end_time, orders_status,
+    order_total
+    from shop_order
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/TransactionsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/TransactionsMapper.xml	(date 1575279977954)
+++ member/src/main/resources/Mapper/TransactionsMapper.xml	(date 1575279977954)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.TransactionsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="tranactions_id" jdbcType="BIGINT" property="tranactionsId" />
+    <result column="pay_total" jdbcType="DECIMAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_user" jdbcType="VARCHAR" property="payUser" />
+    <result column="pay_wechatnum" jdbcType="VARCHAR" property="payWechatnum" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from transactions
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="tranactionsId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into transactions (pay_total, pay_desc)
+    values (#{payTotal,jdbcType=REAL}, #{payDesc,jdbcType=VARCHAR})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update transactions
+    set pay_total = #{payTotal,jdbcType=REAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR}
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select tranactions_id, pay_total, pay_desc
+    from transactions
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select tranactions_id, pay_total, pay_desc
+    from transactions
+  </select>
+
+  <select id="selectForDelivery" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from transactions where pay_user=#{payUser}
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/AlidMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/AlidMapper.xml	(date 1575293532295)
+++ member/src/main/resources/Mapper/AlidMapper.xml	(date 1575293532295)
@@ -0,0 +1,37 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.member.Mapper.AlidMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Alid" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="ALID" property="alid" jdbcType="INTEGER" />
+    <result column="is" property="is" jdbcType="INTEGER" />
+    <result column="ALDesc" property="aldesc" jdbcType="INTEGER" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Alid" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Integer" keyProperty="alid" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into alid (`is`, ALDesc)
+    values (#{is,jdbcType=INTEGER}, #{aldesc,jdbcType=INTEGER})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select ALID, `is`, ALDesc
+    from alid
+  </select>
+
+
+  <select id="inspectShopForALID" parameterType="java.lang.String" resultMap="BaseResultMap">
+        select * from alid where ALID=#{alid}
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/ProductMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/ProductMapper.xml	(date 1575512492279)
+++ member/src/main/resources/Mapper/ProductMapper.xml	(date 1575512492279)
@@ -0,0 +1,87 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.ProductMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Product">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="product_id" jdbcType="INTEGER" property="productId" />
+    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
+    <result column="product_total" jdbcType="DECIMAL" property="productTotal" />
+    <result column="product_name" jdbcType="VARCHAR" property="productName" />
+    <result column="product_type" jdbcType="VARCHAR" property="productType" />
+    <result column="product_desc" jdbcType="VARCHAR" property="productDesc" />
+    <result column="status" jdbcType="INTEGER" property="status" />
+    <result column="product_avator" jdbcType="VARCHAR" property="productAvator" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from product
+    where product_id = #{productId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Product">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="productId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into product (shop_id, product_total, product_name, 
+      product_type, product_desc, `status`, 
+      product_avator)
+    values (#{shopId,jdbcType=INTEGER}, #{productTotal,jdbcType=DECIMAL}, #{productName,jdbcType=VARCHAR}, 
+      #{productType,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
+      #{productAvator,jdbcType=VARCHAR})
+  </insert>
+
+
+
+
+
+  <select id="selectProductForShop" parameterType="cn.armylife.common.Domain.Product" resultMap="BaseResultMap">
+    select * from product where shop_id=#{shopId} and status=0
+  </select>
+
+  <update id="offShelves">
+    update product set status=1 where product_id=#{productId}
+  </update>
+
+  <select id="selectProductNews" parameterType="java.lang.String" resultMap="BaseResultMap">
+    select * from product where product_id =#{product}
+<!--    in-->
+<!--    <foreach collection="array" index="index" item="product" open="(" separator="," close=")">-->
+<!--      #{product}-->
+<!--    </foreach>-->
+  </select>
+
+  <update id="updateProducts">
+    update product
+    <set>
+      <if test="product_name!=null">
+        product_name=#{productName}
+      </if>
+      <if test="product_type!=null">
+        ,product_type=#{productType}
+      </if>
+      <if test="product_desc!=null">
+        ,product_desc=#{productDesc}
+      </if>
+      <if test="status!=null">
+        status=#{status}
+      </if>
+      <if test="product_avator!=null">
+        product_avator=#{productAvator}
+      </if>
+    </set>
+    where product_id=#{productId}
+  </update>
+  <select id="productForTag" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from product where shop_id=#{shopId}
+  </select>
+
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/ProductDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/ProductDetailMapper.xml	(date 1574064651249)
+++ member/src/main/resources/Mapper/ProductDetailMapper.xml	(date 1574064651249)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.ProductDetailMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="product_detail_id" jdbcType="INTEGER" property="productDetailId" />
+    <result column="product_id" jdbcType="INTEGER" property="productId" />
+    <result column="product_tag" jdbcType="INTEGER" property="productTag" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from produvt_detail
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="productDetailId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into produvt_detail (product_id, product_tag)
+    values (#{productId,jdbcType=INTEGER}, #{productTag,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update produvt_detail
+    set product_id = #{productId,jdbcType=INTEGER},
+      product_tag = #{productTag,jdbcType=INTEGER}
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select product_detail_id, product_id, product_tag
+    from produvt_detail
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select product_detail_id, product_id, product_tag
+    from produvt_detail
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/ShopTagMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/ShopTagMapper.xml	(date 1575479124341)
+++ member/src/main/resources/Mapper/ShopTagMapper.xml	(date 1575479124341)
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.member.Mapper.ShopTagMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.ShopTag">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="shop_tag_id" jdbcType="INTEGER" property="shopTagId" />
+    <result column="tag_id" jdbcType="INTEGER" property="tagId" />
+    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from shop_tag
+    where shop_tag_id = #{shopTagId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ShopTag">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="shopTagId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into shop_tag (tag_id, shop_id)
+    values (#{tagId,jdbcType=INTEGER}, #{shopId,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.ShopTag">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update shop_tag
+    set tag_id = #{tagId,jdbcType=INTEGER},
+      shop_id = #{shopId,jdbcType=INTEGER}
+    where shop_tag_id = #{shopTagId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select shop_tag_id, tag_id, shop_id
+    from shop_tag
+    where shop_tag_id = #{shopTagId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select shop_tag_id, tag_id, shop_id
+    from shop_tag
+  </select>
+
+
+
+</mapper>
\ No newline at end of file
Index: out/production/integralmall/log4j.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- out/production/integralmall/log4j.properties	(date 1575104064081)
+++ out/production/integralmall/log4j.properties	(date 1575104064081)
@@ -0,0 +1,85 @@
+# Global logging configuration
+# 设置logger级别DEBUG、INFO、WRNING、ERROR和输出格式A、B、C或D
+log4j.rootLogger=info,error,CONSOLE,Debug,CONSOLE,FILE
+# MyBatis logging configuration...
+log4j.logger.cn.armylife.member.Mapper=DEBUG
+logging.level.cn.armylife.member.Mapper=debug
+# Console output...
+log4j.appender.stdout=org.apache.log4j.ConsoleAppender
+log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
+log4j.appender.stdout.layout.ConversionPattern=[%p] [%d{yyyyMMdd HH\:mm\:ss}][%c]%m%n"
+#<!--日志显示级别,com.project是项目的前缀
+logging.level.cn.armylife=WARN
+#在dao包执行时，输出sql,com.project.sccl.dao就是dao包的全路径
+logging.level.cn.armylife.member.mapper=DEBUG
+#日志的输出位置
+logging.file=logs/spring-boot-logging.log
+logging.pattern.file=%d{yyyy/MM/dd-HH:mm} [%thread] %-5level %logger- %msg%n
+
+log4j.logger.info=info
+log4j.appender.info=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.info.layout=org.apache.log4j.PatternLayout
+log4j.appender.info.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.info.datePattern='.'yyyy-MM-dd
+log4j.appender.info.Threshold = info
+log4j.appender.info.append=true
+log4j.appender.info.File=/home/admin/pms-api-services/logs/info/api_services_info
+#log4j.appender.info.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.error=error
+log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.error.layout=org.apache.log4j.PatternLayout
+log4j.appender.error.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.error.datePattern='.'yyyy-MM-dd
+log4j.appender.error.Threshold = error
+log4j.appender.error.append=true
+log4j.appender.error.File=/home/admin/pms-api-services/logs/error/api_services_error
+#log4j.appender.error.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+log4j.logger.DEBUG=DEBUG
+log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
+log4j.appender.DEBUG.layout.ConversionPattern=%d{yyyy-MM-dd-HH-mm} [%t] [%c] [%p] - %m%n
+log4j.appender.DEBUG.datePattern='.'yyyy-MM-dd
+log4j.appender.DEBUG.Threshold = DEBUG
+log4j.appender.DEBUG.append=true
+log4j.appender.DEBUG.File=/home/admin/pms-api-services/logs/debug/api_services_debug
+#log4j.appender.DEBUG.File=E:\\work\\OneOffer.cn\\logs\\log.log
+
+### Debug
+log4j.logger.com.ibatis=DEBUG
+log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
+log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
+log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
+log4j.logger.java.sql.Connection=DEBUG
+log4j.logger.java.sql.Statement=DEBUG
+log4j.logger.java.sql.PreparedStatement=DEBUG
+
+#
+log4j.rootCategory=INFO, stdout, file
+
+# root日志输出
+log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.file.file=logs/all.log
+log4j.appender.file.DatePattern='.'yyyy-MM-dd
+log4j.appender.file.layout=org.apache.log4j.PatternLayout
+log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
+
+# com.didispace包下的日志配置
+log4j.category.cn.armylife.member.Controller=DEBUG, didifile
+
+# com.didispace下的日志输出
+log4j.appender.didifile=org.apache.log4j.DailyRollingFileAppender
+log4j.appender.didifile.file=logs/my.log
+log4j.appender.didifile.DatePattern='.'yyyy-MM-dd
+log4j.appender.didifile.layout=org.apache.log4j.PatternLayout
+log4j.appender.didifile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n
+#
+#log4j.logger.error=errorfile
+## error日志输出
+#log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
+#log4j.appender.errorfile.file=logs/error.log
+#log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
+#log4j.appender.errorfile.Threshold = ERROR
+#log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
+#log4j.appender.errorfilee.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
\ No newline at end of file
Index: member/src/main/resources/Mapper/AfterOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1574324918489)
+++ member/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1574324918489)
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.member.Mapper.AfterOrderMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="after_order_id" property="afterOrderId" jdbcType="BIGINT" />
+    <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+    <result column="after_order_total" property="afterOrderTotal" jdbcType="DECIMAL" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="afterOrderId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into after_order (orders_id, product_id, creat_time, 
+      after_order_total)
+    values (#{ordersId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{creatTime,jdbcType=VARCHAR}, 
+      #{afterOrderTotal,jdbcType=DECIMAL})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update after_order
+    set orders_id = #{ordersId,jdbcType=BIGINT},
+      product_id = #{productId,jdbcType=BIGINT},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      after_order_total = #{afterOrderTotal,jdbcType=DECIMAL}
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+  </select>
+</mapper>
\ No newline at end of file
Index: member/src/main/resources/Mapper/config/sqlMapConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
+++ member/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+
+</configuration>
\ No newline at end of file
Index: member/src/main/resources/mybatis-generator/generatorConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/main/resources/mybatis-generator/generatorConfig.xml	(date 1573629291669)
+++ member/src/main/resources/mybatis-generator/generatorConfig.xml	(date 1573629291669)
@@ -0,0 +1,102 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE generatorConfiguration
+        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
+        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
+<!-- 配置生成器 -->
+<generatorConfiguration>
+    <!--执行generator插件生成文件的命令： call mvn mybatis-generator:generate -e -->
+    <!-- 引入配置文件 -->
+    <properties resource="application.properties"/>
+    <!--classPathEntry:数据库的JDBC驱动,换成你自己的驱动位置 可选 -->
+    <!--<classPathEntry location="D:\generator_mybatis\mysql-connector-java-5.1.24-bin.jar" /> -->
+
+    <!-- 一个数据库一个context -->
+    <!--defaultModelType="flat" 大数据字段，不分表 -->
+    <context id="MysqlTables" targetRuntime="MyBatis3Simple" defaultModelType="flat">
+        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
+        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
+        <property name="autoDelimitKeywords" value="true" />
+        <!-- 生成的Java文件的编码 -->
+        <property name="javaFileEncoding" value="utf-8" />
+        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
+        <property name="beginningDelimiter" value="`" />
+        <property name="endingDelimiter" value="`" />
+
+        <!-- 格式化java代码 -->
+        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
+        <!-- 格式化XML代码 -->
+        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
+        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
+
+        <plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
+
+        <!-- 注释 -->
+        <commentGenerator >
+            <property name="suppressAllComments" value="false"/><!-- 是否取消注释 -->
+            <property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳-->
+        </commentGenerator>
+
+        <!-- jdbc连接 -->
+        <jdbcConnection driverClass="${spring.datasource.driver-class-name}" connectionURL="${spring.datasource.url}" userId="${spring.datasource.username}" password="${spring.datasource.password}" />
+        <!-- 类型转换 -->
+        <javaTypeResolver>
+            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
+            <property name="forceBigDecimals" value="false"/>
+        </javaTypeResolver>
+
+        <!-- 生成实体类地址 -->
+        <javaModelGenerator targetPackage="cn.armylife.member.Domain" targetProject="${mybatis.project}" >
+            <property name="enableSubPackages" value="false"/>
+            <property name="trimStrings" value="true"/>
+        </javaModelGenerator>
+        <!-- 生成mapxml文件 -->
+        <sqlMapGenerator targetPackage="Mapper" targetProject="${mybatis.resources}" >
+            <property name="enableSubPackages" value="false" />
+        </sqlMapGenerator>
+        <!-- 生成mapxml对应client，也就是接口dao -->
+        <javaClientGenerator targetPackage="cn.armylife.member.Mapper" targetProject="${mybatis.project}" type="XMLMAPPER" >
+            <property name="enableSubPackages" value="false" />
+        </javaClientGenerator>
+        <!-- table可以有多个,每个数据库中的表都可以写一个table，tableName表示要匹配的数据库表,也可以在tableName属性中通过使用%通配符来匹配所有数据库表,只有匹配的表才会自动生成文件 -->
+        <table tableName="delivery_order" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="delivery_orders_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="member" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="member_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="payments" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+        <property name="useActualColumnNames" value="false" />
+        <!-- 数据库表主键 -->
+        <generatedKey column="payments_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="product" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="product_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="produvt_detail" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="product_detail_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="shop_order" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="orders_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="shop_tag" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="shop_tag_id" sqlStatement="Mysql" identity="true" />
+        </table>
+        <table tableName="transactions" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
+            <property name="useActualColumnNames" value="false" />
+            <!-- 数据库表主键 -->
+            <generatedKey column="tranactions_id" sqlStatement="Mysql" identity="true" />
+        </table>
+    </context>
+</generatorConfiguration>
\ No newline at end of file
Index: member/src/test/java/cn/armylife/member/MemberApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/src/test/java/cn/armylife/member/MemberApplicationTests.java	(date 1572342834140)
+++ member/src/test/java/cn/armylife/member/MemberApplicationTests.java	(date 1572342834140)
@@ -0,0 +1,13 @@
+package cn.armylife.member;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class MemberApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: member/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- member/.mvn/wrapper/maven-wrapper.properties	(date 1572342826135)
+++ member/.mvn/wrapper/maven-wrapper.properties	(date 1572342826135)
@@ -0,0 +1,1 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.0/apache-maven-3.6.0-bin.zip
Index: member/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- member/.mvn/wrapper/MavenWrapperDownloader.java	(date 1572342834112)
+++ member/.mvn/wrapper/MavenWrapperDownloader.java	(date 1572342834112)
@@ -0,0 +1,114 @@
+/*
+Licensed to the Apache Software Foundation (ASF) under one
+or more contributor license agreements.  See the NOTICE file
+distributed with this work for additional information
+regarding copyright ownership.  The ASF licenses this file
+to you under the Apache License, Version 2.0 (the
+"License"); you may not use this file except in compliance
+with the License.  You may obtain a copy of the License at
+
+  https://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing,
+software distributed under the License is distributed on an
+"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+KIND, either express or implied.  See the License for the
+specific language governing permissions and limitations
+under the License.
+*/
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.net.URL;
+import java.nio.channels.Channels;
+import java.nio.channels.ReadableByteChannel;
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL =
+            "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.4.2/maven-wrapper-0.4.2.jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: : " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output direcrory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: market/src/main/java/cn/armylife/market/Config/RedisDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Config/RedisDao.java	(date 1575269450392)
+++ market/src/main/java/cn/armylife/market/Config/RedisDao.java	(date 1575269450392)
@@ -0,0 +1,22 @@
+package cn.armylife.market.Config;
+
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.StringRedisTemplate;
+import org.springframework.data.redis.core.ValueOperations;
+import org.springframework.stereotype.Repository;
+
+@Repository
+public class RedisDao {
+    @Autowired
+    private StringRedisTemplate template;
+
+    public  void setKey(String key, String value){
+        ValueOperations<String, String> ops = template.opsForValue();
+        ops.set(key,value);//1分钟过期
+    }
+
+    public String getValue(String key){
+        ValueOperations<String, String> ops = this.template.opsForValue();
+        return ops.get(key);
+    }
+}
Index: market/src/main/java/cn/armylife/market/Config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Config/RedisConfig.java	(date 1575248752593)
+++ market/src/main/java/cn/armylife/market/Config/RedisConfig.java	(date 1575248752593)
@@ -0,0 +1,42 @@
+package cn.armylife.market.Config;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.cache.annotation.EnableCaching;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+@Configuration
+@EnableCaching
+public class RedisConfig {
+    /**
+     * redisTemplate 序列化使用的jdkSerializeable, 存储二进制字节码, 所以自定义序列化类
+     * @param redisConnectionFactory
+     * @return
+     */
+    @Bean
+    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+
+        // 使用Jackson2JsonRedisSerialize 替换默认序列化
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+
+        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
+
+        // 设置value的序列化规则和 key的序列化规则
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+}
Index: market/src/main/java/cn/armylife/market/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Config/SessionConfig.java	(date 1574214225114)
+++ market/src/main/java/cn/armylife/market/Config/SessionConfig.java	(date 1574214225114)
@@ -0,0 +1,9 @@
+package cn.armylife.market.Config;++import org.springframework.context.annotation.Configuration;+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;++@Configuration+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)+public class SessionConfig {+}Index: market/src/main/java/cn/armylife/market/Config/FeignRequestIntercepter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Config/FeignRequestIntercepter.java	(date 1574214224604)
+++ market/src/main/java/cn/armylife/market/Config/FeignRequestIntercepter.java	(date 1574214224604)
@@ -0,0 +1,33 @@
+package cn.armylife.market.Config;++import feign.RequestInterceptor;+import feign.RequestTemplate;+import org.springframework.stereotype.Component;+import org.springframework.web.context.request.RequestAttributes;+import org.springframework.web.context.request.RequestContextHolder;+import org.springframework.web.context.request.ServletRequestAttributes;++import javax.servlet.http.HttpServletRequest;+import java.util.Enumeration;+++@Component+public class FeignRequestIntercepter implements RequestInterceptor {+    @Override+    public void apply(RequestTemplate requestTemplate) {+//通过RequestContextHolder获取本地请求+        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();+        if (requestAttributes == null){+            return;+        }+//获取本地线程绑定的请求对象+        HttpServletRequest request = ((ServletRequestAttributes)requestAttributes).getRequest();+//给请求模板附加本地线程头部信息，主要是cookie信息+        Enumeration headerNames = request.getHeaderNames();+        while (headerNames.hasMoreElements()){+            String name = (String) headerNames.nextElement();+            requestTemplate.header(name,request.getHeader(name));+        }++    }+}Index: market/src/main/java/cn/armylife/market/Domain/RankShop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Domain/RankShop.java	(date 1575447971711)
+++ market/src/main/java/cn/armylife/market/Domain/RankShop.java	(date 1575447971711)
@@ -0,0 +1,45 @@
+package cn.armylife.market.Domain;
+
+import cn.armylife.common.Domain.Product;
+
+import java.util.List;
+
+public class RankShop {
+
+    private String rankDay;
+    private String rankMonth;
+    private List<Product> product;
+
+    public String getRankDay() {
+        return rankDay;
+    }
+
+    public void setRankDay(String rankDay) {
+        this.rankDay = rankDay;
+    }
+
+    public String getRankMonth() {
+        return rankMonth;
+    }
+
+    public void setRankMonth(String rankMonth) {
+        this.rankMonth = rankMonth;
+    }
+
+    public List<Product> getProduct() {
+        return product;
+    }
+
+    public void setProduct(List<Product> product) {
+        this.product = product;
+    }
+
+    @Override
+    public String toString() {
+        return "RankShop{" +
+                "rankDay='" + rankDay + '\'' +
+                ", rankMonth='" + rankMonth + '\'' +
+                ", product=" + product +
+                '}';
+    }
+}
Index: payments/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/mvnw	(date 1574145477081)
+++ payments/mvnw	(date 1574145477081)
@@ -0,0 +1,310 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Maven2 Start Up Batch script
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   M2_HOME - location of maven2's installed home dir
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "`uname`" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        export JAVA_HOME="`/usr/libexec/java_home`"
+      else
+        export JAVA_HOME="/Library/Java/Home"
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=`java-config --jre-home`
+  fi
+fi
+
+if [ -z "$M2_HOME" ] ; then
+  ## resolve links - $0 may be a link to maven's home
+  PRG="$0"
+
+  # need this for relative symlinks
+  while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+      PRG="$link"
+    else
+      PRG="`dirname "$PRG"`/$link"
+    fi
+  done
+
+  saveddir=`pwd`
+
+  M2_HOME=`dirname "$PRG"`/..
+
+  # make it fully qualified
+  M2_HOME=`cd "$M2_HOME" && pwd`
+
+  cd "$saveddir"
+  # echo Using m2 at $M2_HOME
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --unix "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME="`(cd "$M2_HOME"; pwd)`"
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="`which javac`"
+  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=`which readlink`
+    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then
+      if $darwin ; then
+        javaHome="`dirname \"$javaExecutable\"`"
+        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"
+      else
+        javaExecutable="`readlink -f \"$javaExecutable\"`"
+      fi
+      javaHome="`dirname \"$javaExecutable\"`"
+      javaHome=`expr "$javaHome" : '\(.*\)/bin'`
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="`which java`"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=`cd "$wdir/.."; pwd`
+    fi
+    # end of workaround
+  done
+  echo "${basedir}"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    echo "$(tr -s '\n' ' ' < "$1")"
+  fi
+}
+
+BASE_DIR=`find_maven_basedir "$(pwd)"`
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Found .mvn/wrapper/maven-wrapper.jar"
+    fi
+else
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."
+    fi
+    if [ -n "$MVNW_REPOURL" ]; then
+      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    else
+      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    fi
+    while IFS="=" read key value; do
+      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;
+      esac
+    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"
+    if [ "$MVNW_VERBOSE" = true ]; then
+      echo "Downloading from: $jarUrl"
+    fi
+    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"
+    if $cygwin; then
+      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`
+    fi
+
+    if command -v wget > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found wget ... using wget"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget "$jarUrl" -O "$wrapperJarPath"
+        else
+            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Found curl ... using curl"
+        fi
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl -o "$wrapperJarPath" "$jarUrl" -f
+        else
+            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f
+        fi
+        
+    else
+        if [ "$MVNW_VERBOSE" = true ]; then
+          echo "Falling back to using Java to download"
+        fi
+        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaClass=`cygpath --path --windows "$javaClass"`
+        fi
+        if [ -e "$javaClass" ]; then
+            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Compiling MavenWrapperDownloader.java ..."
+                fi
+                # Compiling the Java class
+                ("$JAVA_HOME/bin/javac" "$javaClass")
+            fi
+            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then
+                # Running the downloader
+                if [ "$MVNW_VERBOSE" = true ]; then
+                  echo " - Running MavenWrapperDownloader.java ..."
+                fi
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}
+if [ "$MVNW_VERBOSE" = true ]; then
+  echo $MAVEN_PROJECTBASEDIR
+fi
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$M2_HOME" ] &&
+    M2_HOME=`cygpath --path --windows "$M2_HOME"`
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: payments/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/mvnw.cmd	(date 1574145477082)
+++ payments/mvnw.cmd	(date 1574145477082)
@@ -0,0 +1,182 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Maven2 Start Up Batch script
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM M2_HOME - location of maven2's installed home dir
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_pre.bat" call "%HOME%\mavenrc_pre.bat"
+if exist "%HOME%\mavenrc_pre.cmd" call "%HOME%\mavenrc_pre.cmd"
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set DOWNLOAD_URL="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+
+FOR /F "tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET DOWNLOAD_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET DOWNLOAD_URL="%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %DOWNLOAD_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%HOME%\mavenrc_post.bat" call "%HOME%\mavenrc_post.bat"
+if exist "%HOME%\mavenrc_post.cmd" call "%HOME%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%" == "on" pause
+
+if "%MAVEN_TERMINATE_CMD%" == "on" exit %ERROR_CODE%
+
+exit /B %ERROR_CODE%
Index: payments/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/.gitignore	(date 1574145477101)
+++ payments/.gitignore	(date 1574145477101)
@@ -0,0 +1,31 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**
+!**/src/test/**
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+
+### VS Code ###
+.vscode/
Index: market/src/main/java/cn/armylife/market/Domain/WeChatUsers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Domain/WeChatUsers.java	(date 1574214224647)
+++ market/src/main/java/cn/armylife/market/Domain/WeChatUsers.java	(date 1574214224647)
@@ -0,0 +1,101 @@
+package cn.armylife.market.Domain;++import org.springframework.boot.context.properties.ConfigurationProperties;+import org.springframework.context.annotation.PropertySource;+import org.springframework.stereotype.Component;++/**+ *+ * @author jiony+ *+ * @Description: 微信相关常量+ */+@Component+@ConfigurationProperties(prefix = "wechat.users")+@PropertySource(value = "classpath:application.yml")+public class WeChatUsers {+    /**+     * token+     */+    private String token;+    /**+     * app id+     */+    private String appId;+    /**+     * app secret+     */+    private String appSecret;+    /**+     * 静默授权回调地址+     */+    private String callBackSlientUrl;+    /**+     * 商户id+     */+    private String MCHID;+    /**+     * 异步回调地址+     */+    private String NOTIFYURL;+    /**+     * 微信统一下单地址+     */+    private String wxorder;++    //证书路径+//    public static final String SSLCERT_PATH = "apiclient_cert.p12";+   // public static final String SSLCERT_PATH = "E:\\javaPicture\\yezz\\apiclient_cert.p12";++    /**+     * key+     */+    private String KEY;+    public String getToken() {+        return token;+    }+    public void setToken(String token) {+        this.token = token;+    }+    public String getAppId() {+        return appId;+    }+    public void setAppId(String appId) {+        this.appId = appId;+    }+    public String getAppSecret() {+        return appSecret;+    }+    public void setAppSecret(String appSecret) {+        this.appSecret = appSecret;+    }+    public String getCallBackSlientUrl() {+        return callBackSlientUrl;+    }+    public void setCallBackSlientUrl(String callBackSlientUrl) {+        this.callBackSlientUrl = callBackSlientUrl;+    }+    public String getMCHID() {+        return MCHID;+    }+    public void setMCHID(String MCHID) {+        this.MCHID = MCHID;+    }+    public String getNOTIFYURL() {+        return NOTIFYURL;+    }+    public void setNOTIFYURL(String NOTIFYURL) {+        this.NOTIFYURL = NOTIFYURL;+    }+    public String getWxorder() {+        return wxorder;+    }+    public void setWxorder(String wxorder) {+        this.wxorder = wxorder;+    }+    public String getKEY() {+        return KEY;+    }+    public void setKEY(String KEY) {+        this.KEY = KEY;+    }}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Domain/WXtemplate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Domain/WXtemplate.java	(date 1574214224693)
+++ market/src/main/java/cn/armylife/market/Domain/WXtemplate.java	(date 1574214224693)
@@ -0,0 +1,85 @@
+package cn.armylife.market.Domain;++public class WXtemplate {+    private String openid;+    private String first;+    private String key1;+    private String key2;+    private String key3;+    private String key4;+    private String remark1;+    private String template;+    private String url;++    public String getKey4() {+        return key4;+    }++    public void setKey4(String key4) {+        this.key4 = key4;+    }++    public String getOpenid() {+        return openid;+    }++    public void setOpenid(String openid) {+        this.openid = openid;+    }++    public String getFirst() {+        return first;+    }++    public void setFirst(String first) {+        this.first = first;+    }++    public String getKey1() {+        return key1;+    }++    public void setKey1(String key1) {+        this.key1 = key1;+    }++    public String getKey2() {+        return key2;+    }++    public void setKey2(String key2) {+        this.key2 = key2;+    }++    public String getKey3() {+        return key3;+    }++    public void setKey3(String key3) {+        this.key3 = key3;+    }++    public String getRemark1() {+        return remark1;+    }++    public void setRemark1(String remark1) {+        this.remark1 = remark1;+    }++    public String getTemplate() {+        return template;+    }++    public void setTemplate(String template) {+        this.template = template;+    }++    public String getUrl() {+        return url;+    }++    public void setUrl(String url) {+        this.url = url;+    }+}Index: payments/src/main/java/cn/armylife/payments/Utils/sha1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/sha1.java	(date 1574843449974)
+++ payments/src/main/java/cn/armylife/payments/Utils/sha1.java	(date 1574843449974)
@@ -0,0 +1,31 @@
+package cn.armylife.payments.Utils;++import java.security.MessageDigest;++public class sha1 {+++    public static String getSha1(String str){+        if(str == null || str.length()==0){+            return null;+        }+        char hexDigits[]={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};++        try {+            MessageDigest mdTemp = MessageDigest.getInstance("SHA1");+            mdTemp.update(str.getBytes("UTF-8"));++            byte[] md = mdTemp.digest();+            int j = md.length;+            char buf[] = new char[j*2];+            int k = 0;+            for(int i=0;i<j;i++){+                byte byte0 = md[i];+                buf[k++] = hexDigits[byte0 >>> 4 & 0xf];+                buf[k++] = hexDigits[byte0 & 0xf];+            }+            return new String(buf);+        } catch (Exception e) {+            return null;+        }+    }}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Utils/WXPayUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/WXPayUtil.java	(date 1574843450284)
+++ payments/src/main/java/cn/armylife/payments/Utils/WXPayUtil.java	(date 1574843450284)
@@ -0,0 +1,527 @@
+package cn.armylife.payments.Utils;
+
+import com.alibaba.csp.sentinel.util.StringUtil;
+import com.alibaba.fastjson.JSONObject;
+import com.github.wxpay.sdk.WXPayConstants;
+import com.github.wxpay.sdk.WXPayConstants.SignType;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.w3c.dom.Node;
+import org.w3c.dom.NodeList;
+
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+import javax.servlet.http.HttpServletRequest;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.dom.DOMSource;
+import javax.xml.transform.stream.StreamResult;
+import java.io.*;
+import java.net.HttpURLConnection;
+import java.net.URL;
+import java.net.URLConnection;
+import java.net.URLEncoder;
+import java.security.MessageDigest;
+import java.security.SecureRandom;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+
+public class WXPayUtil {
+
+    private static final String SYMBOLS = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
+
+    private static final Random RANDOM = new SecureRandom();
+
+    /**
+     * XML格式字符串转换为Map
+     *
+     * @param strXML XML字符串
+     * @return XML数据转换后的Map
+     * @throws Exception
+     */
+    public static Map<String, String> xmlToMap(String strXML) throws Exception {
+        try {
+            Map<String, String> data = new HashMap<String, String>();
+            DocumentBuilder documentBuilder = WXPayXmlUtil.newDocumentBuilder();
+            InputStream stream = new ByteArrayInputStream(strXML.getBytes("UTF-8"));
+            org.w3c.dom.Document doc = documentBuilder.parse(stream);
+            doc.getDocumentElement().normalize();
+            NodeList nodeList = doc.getDocumentElement().getChildNodes();
+            for (int idx = 0; idx < nodeList.getLength(); ++idx) {
+                Node node = nodeList.item(idx);
+                if (node.getNodeType() == Node.ELEMENT_NODE) {
+                    org.w3c.dom.Element element = (org.w3c.dom.Element) node;
+                    data.put(element.getNodeName(), element.getTextContent());
+                }
+            }
+            try {
+                stream.close();
+            } catch (Exception ex) {
+                // do nothing
+            }
+            return data;
+        } catch (Exception ex) {
+            WXPayUtil.getLogger().warn("Invalid XML, can not convert to map. Error message: {}. XML content: {}", ex.getMessage(), strXML);
+            throw ex;
+        }
+
+    }
+
+    /**
+     * 将Map转换为XML格式的字符串
+     *
+     * @param data Map类型数据
+     * @return XML格式的字符串
+     * @throws Exception
+     */
+    public static String mapToXml(Map<String, String> data) throws Exception {
+        org.w3c.dom.Document document = WXPayXmlUtil.newDocument();
+        org.w3c.dom.Element root = document.createElement("xml");
+        document.appendChild(root);
+        for (String key: data.keySet()) {
+            String value = data.get(key);
+            if (value == null) {
+                value = "";
+            }
+            value = value.trim();
+            org.w3c.dom.Element filed = document.createElement(key);
+            filed.appendChild(document.createTextNode(value));
+            root.appendChild(filed);
+        }
+        TransformerFactory tf = TransformerFactory.newInstance();
+        Transformer transformer = tf.newTransformer();
+        DOMSource source = new DOMSource(document);
+        transformer.setOutputProperty(OutputKeys.ENCODING, "UTF-8");
+        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
+        StringWriter writer = new StringWriter();
+        StreamResult result = new StreamResult(writer);
+        transformer.transform(source, result);
+        String output = writer.getBuffer().toString(); //.replaceAll("\n|\r", "");
+        try {
+            writer.close();
+        }
+        catch (Exception ex) {
+        }
+        return output;
+    }
+
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key) throws Exception {
+        return generateSignedXml(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成带有 sign 的 XML 格式字符串
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名类型
+     * @return 含有sign字段的XML
+     */
+    public static String generateSignedXml(final Map<String, String> data, String key, SignType signType) throws Exception {
+        String sign = generateSignature(data, key, signType);
+        data.put(WXPayConstants.FIELD_SIGN, sign);
+        return mapToXml(data);
+    }
+
+
+    /**
+     * 判断签名是否正确
+     *
+     * @param xmlStr XML格式数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(String xmlStr, String key) throws Exception {
+        Map<String, String> data = xmlToMap(xmlStr);
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key).equals(sign);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。使用MD5签名。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key) throws Exception {
+        return isSignatureValid(data, key, SignType.MD5);
+    }
+
+    /**
+     * 判断签名是否正确，必须包含sign字段，否则返回false。
+     *
+     * @param data Map类型数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名是否正确
+     * @throws Exception
+     */
+    public static boolean isSignatureValid(Map<String, String> data, String key, SignType signType) throws Exception {
+        if (!data.containsKey(WXPayConstants.FIELD_SIGN) ) {
+            return false;
+        }
+        String sign = data.get(WXPayConstants.FIELD_SIGN);
+        return generateSignature(data, key, signType).equals(sign);
+    }
+
+    /**
+     * 生成签名
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key) throws Exception {
+        return generateSignature(data, key, SignType.MD5);
+    }
+
+    /**
+     * 生成签名. 注意，若含有sign_type字段，必须和signType参数保持一致。
+     *
+     * @param data 待签名数据
+     * @param key API密钥
+     * @param signType 签名方式
+     * @return 签名
+     */
+    public static String generateSignature(final Map<String, String> data, String key, SignType signType) throws Exception {
+        Set<String> keySet = data.keySet();
+        String[] keyArray = keySet.toArray(new String[keySet.size()]);
+        Arrays.sort(keyArray);
+        StringBuilder sb = new StringBuilder();
+        for (String k : keyArray) {
+            if (k.equals(WXPayConstants.FIELD_SIGN)) {
+                continue;
+            }
+            if (data.get(k).trim().length() > 0) // 参数值为空，则不参与签名
+                sb.append(k).append("=").append(data.get(k).trim()).append("&");
+        }
+        sb.append("key=").append(key);
+        if (SignType.MD5.equals(signType)) {
+            return MD5(sb.toString()).toUpperCase();
+        }
+        else if (SignType.HMACSHA256.equals(signType)) {
+            return HMACSHA256(sb.toString(), key);
+        }
+        else {
+            throw new Exception(String.format("Invalid sign_type: %s", signType));
+        }
+    }
+
+
+    /**
+     * 获取随机字符串 Nonce Str
+     *
+     * @return String 随机字符串
+     */
+    public static String generateNonceStr() {
+        char[] nonceChars = new char[32];
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        return new String(nonceChars);
+    }
+
+
+    /**
+     * 生成 MD5
+     *
+     * @param data 待处理数据
+     * @return MD5结果
+     */
+    public static String MD5(String data) throws Exception {
+        MessageDigest md = MessageDigest.getInstance("MD5");
+        byte[] array = md.digest(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 生成 HMACSHA256
+     * @param data 待处理数据
+     * @param key 密钥
+     * @return 加密结果
+     * @throws Exception
+     */
+    public static String HMACSHA256(String data, String key) throws Exception {
+        Mac sha256_HMAC = Mac.getInstance("HmacSHA256");
+        SecretKeySpec secret_key = new SecretKeySpec(key.getBytes("UTF-8"), "HmacSHA256");
+        sha256_HMAC.init(secret_key);
+        byte[] array = sha256_HMAC.doFinal(data.getBytes("UTF-8"));
+        StringBuilder sb = new StringBuilder();
+        for (byte item : array) {
+            sb.append(Integer.toHexString((item & 0xFF) | 0x100).substring(1, 3));
+        }
+        return sb.toString().toUpperCase();
+    }
+
+    /**
+     * 日志
+     * @return
+     */
+    public static Logger getLogger() {
+        Logger logger = LoggerFactory.getLogger("wxpay java sdk");
+        return logger;
+    }
+
+    /**
+     * 获取当前时间戳，单位秒
+     * @return
+     */
+    public static long getCurrentTimestamp() {
+        return System.currentTimeMillis()/1000;
+    }
+
+    /**
+     * 获取当前时间戳，单位毫秒
+     * @return
+     */
+    public static String getCurrentTimestampMs() {
+        return String.valueOf(System.currentTimeMillis());
+    }
+
+    public static String generateOrderId() {
+        char[] nonceChars = new char[6];  //6个随机字符
+        for (int index = 0; index < nonceChars.length; ++index) {
+            nonceChars[index] = SYMBOLS.charAt(RANDOM.nextInt(SYMBOLS.length()));
+        }
+        SimpleDateFormat df = new SimpleDateFormat("yyyyMMddHHmmss");//设置日期格式
+        String orderId1=df.format(new Date());
+
+        String orderI2=new String(nonceChars);
+        String orderId =orderId1+orderI2;
+        return orderId;
+    }
+
+    public static String sendPost(String url, String param) {
+        PrintWriter out = null;
+        BufferedReader in = null;
+        String result = "";
+        try {
+            URL realUrl = new URL(url);
+            // 打开和URL之间的连接
+            URLConnection conn = realUrl.openConnection();
+            // 设置通用的请求属性
+            conn.setRequestProperty("accept", "*/*");
+            conn.setRequestProperty("connection", "Keep-Alive");
+            conn.setRequestProperty("user-agent",
+                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
+            // 发送POST请求必须设置如下两行
+            conn.setDoOutput(true);
+            conn.setDoInput(true);
+            // 获取URLConnection对象对应的输出流
+            out = new PrintWriter(conn.getOutputStream());
+            // 发送请求参数
+            out.print(param);
+            // flush输出流的缓冲
+            out.flush();
+            // 定义BufferedReader输入流来读取URL的响应
+            in = new BufferedReader(
+                    new InputStreamReader(conn.getInputStream()));
+            String line;
+            while ((line = in.readLine()) != null) {
+                result += line;
+            }
+        } catch (Exception e) {
+            System.out.println("发送 POST 请求出现异常！"+e);
+            e.printStackTrace();
+        }
+        //使用finally块来关闭输出流、输入流
+        finally{
+            try{
+                if(out!=null){
+                    out.close();
+                }
+                if(in!=null){
+                    in.close();
+                }
+            }
+            catch(IOException ex){
+                ex.printStackTrace();
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 返回客户端ip
+     *
+     * @param request
+     * @return
+     */
+    public static String getRemoteAddrIp(HttpServletRequest request) {
+        String ip = request.getHeader("X-Forwarded-For");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            // 多次反向代理后会有多个ip值，第一个ip才是真实ip
+            int index = ip.indexOf(",");
+            if (index != -1) {
+                return ip.substring(0, index);
+            } else {
+
+                return ip;
+            }
+        }
+        ip = request.getHeader("X-Real-IP");
+        if (StringUtil.isNotEmpty(ip) && !"unKnown".equalsIgnoreCase(ip)) {
+            return ip;
+        }
+        return request.getRemoteAddr();
+    }
+
+
+    /**
+     * 构造签名
+     *
+     * @param params
+     * @param encode
+     * @return
+     * @throws UnsupportedEncodingException
+     */
+    public static String createSign(Map<String, String> params, boolean encode) throws UnsupportedEncodingException {
+        Set<String> keysSet = params.keySet();
+        Object[] keys = keysSet.toArray();
+        Arrays.sort(keys);
+        StringBuffer temp = new StringBuffer();
+        boolean first = true;
+        for (Object key : keys) {
+            if (key == null || StringUtil.isEmpty(params.get(key))) // 参数为空不参与签名
+                continue;
+            if (first) {
+                first = false;
+            } else {
+                temp.append("&");
+            }
+            temp.append(key).append("=");
+            Object value = params.get(key);
+            String valueStr = "";
+            if (null != value) {
+                valueStr = value.toString();
+            }
+            if (encode) {
+                temp.append(URLEncoder.encode(valueStr, "UTF-8"));
+            } else {
+                temp.append(valueStr);
+            }
+        }
+        return temp.toString();
+    }
+
+    /**
+     * 获取服务器的ip地址
+     *
+     * @param request
+     * @return
+     */
+    public static String getLocalIp(HttpServletRequest request) {
+        return request.getLocalAddr();
+    }
+
+    public static final String inputStream2String(InputStream in) throws UnsupportedEncodingException, IOException {
+        if(in == null)
+            return "";
+
+        StringBuffer out = new StringBuffer();
+        byte[] b = new byte[4096];
+        for (int n; (n = in.read(b)) != -1;) {
+            out.append(new String(b, 0, n, "UTF-8"));
+        }
+        return out.toString();
+    }
+
+    //获取token
+    public static String getAccessToken(String AppId, String secret) {
+
+        String access_token = "";
+        String grant_type = "client_credential";//获取access_token填写client_credential
+
+        //这个url链接地址和参数皆不能变
+        String url = "https://api.weixin.qq.com/cgi-bin/token?grant_type="+grant_type+"&appid="+AppId+"&secret="+secret;  //访问链接
+
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            /*System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒 */
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            access_token = demoJson.getString("access_token");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return access_token;
+    }
+
+    //获取ticket
+    public static String getTicket(String access_token) {
+        String ticket = null;
+        String url = "https://api.weixin.qq.com/cgi-bin/ticket/getticket?access_token="+ access_token +"&type=jsapi";//这个url链接和参数不能变
+        try {
+            URL urlGet = new URL(url);
+            HttpURLConnection http = (HttpURLConnection) urlGet.openConnection();
+            http.setRequestMethod("GET"); // 必须是get方式请求
+            http.setRequestProperty("Content-Type","application/x-www-form-urlencoded");
+            http.setDoOutput(true);
+            http.setDoInput(true);
+            System.setProperty("sun.net.client.defaultConnectTimeout", "30000");// 连接超时30秒
+            System.setProperty("sun.net.client.defaultReadTimeout", "30000"); // 读取超时30秒
+            http.connect();
+            InputStream is = http.getInputStream();
+            int size = is.available();
+            byte[] jsonBytes = new byte[size];
+            is.read(jsonBytes);
+            String message = new String(jsonBytes, "UTF-8");
+            JSONObject demoJson = JSONObject.parseObject(message);
+            ticket = demoJson.getString("ticket");
+            is.close();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return ticket;
+    }
+
+    public static String getfree(String free) {
+        int index = free.indexOf(".");
+        int length = free.length();
+        Long amLong = 0L;
+        if(index == -1){
+            amLong = Long.valueOf(free+"00");
+        }else if(length - index >= 3){
+            amLong = Long.valueOf((free.substring(0, index+3)).replace(".", ""));
+        }else if(length - index == 2){
+            amLong = Long.valueOf((free.substring(0, index+2)).replace(".", "")+0);
+        }else{
+            amLong = Long.valueOf((free.substring(0, index+1)).replace(".", "")+"00");
+        }
+        return amLong.toString();
+    }
+
+}
Index: payments/src/main/java/cn/armylife/payments/Utils/MemberWXMyConfigUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/MemberWXMyConfigUtil.java	(date 1574843450030)
+++ payments/src/main/java/cn/armylife/payments/Utils/MemberWXMyConfigUtil.java	(date 1574843450030)
@@ -0,0 +1,64 @@
+package cn.armylife.payments.Utils;++import cn.armylife.payments.Domain.WeChatUsers;+import com.github.wxpay.sdk.WXPayConfig;+import org.apache.commons.io.IOUtils;+import org.springframework.stereotype.Component;++import java.io.ByteArrayInputStream;+import java.io.InputStream;++@Component+public class MemberWXMyConfigUtil implements WXPayConfig {+        private byte[] certData;+        WeChatUsers weChatUsers;++//        public MemberWXMyConfigUtil() throws Exception {+//            Resource resource = new ClassPathResource("/apiclient_cert.p12");//"apiclient_cert.p12";//从微信商户平台下载的安全证书存放的目录+//          // String certPath="E:\\javaPicture\\yezz\\apiclient_cert.p12";+//            File file = resource.getFile();+//            InputStream certStream = new FileInputStream(file);+//            this.certData = new byte[(int) file.length()];+//            certStream.read(this.certData);+//            certStream.close();+//        }++        @Override+        public String getAppID() {+            return weChatUsers.getAppId();+        }++        //parnerid+        @Override+        public String getMchID() {+            return weChatUsers.getMCHID();+        }++        @Override+        public String getKey() {+            return weChatUsers.getKEY();+        }++        @Override+        public InputStream getCertStream() {+            try {+                InputStream certStream = Thread.currentThread().getContextClassLoader().getResourceAsStream("apiclient_cert.p12");+                this.certData = IOUtils.toByteArray(certStream);+                certStream.close();+            } catch (Exception e) {+                e.printStackTrace();+            }+            ByteArrayInputStream certBis = new ByteArrayInputStream(this.certData);+            return certBis;+        }++        @Override+        public int getHttpConnectTimeoutMs() {+            return 8000;+        }++        @Override+        public int getHttpReadTimeoutMs() {+            return 10000;+        }+    }Index: payments/src/main/java/cn/armylife/payments/Utils/HttpGet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/HttpGet.java	(date 1574843450313)
+++ payments/src/main/java/cn/armylife/payments/Utils/HttpGet.java	(date 1574843450313)
@@ -0,0 +1,51 @@
+package cn.armylife.payments.Utils;++import org.springframework.stereotype.Service;++import javax.servlet.http.HttpServlet;+import java.io.BufferedReader;+import java.io.IOException;+import java.io.InputStreamReader;+import java.net.URL;+import java.net.URLConnection;++@Service+public class HttpGet extends HttpServlet {+    //HttpGet方法+    public static String HttpGet(String URL, String GetDataStr){++        String getUrl = URL+GetDataStr;+        StringBuffer sb = new StringBuffer();+        InputStreamReader isr = null;+        BufferedReader br = null;+        try+        {+            java.net.URL url = new URL(getUrl);+            URLConnection urlConnection = url.openConnection();+            urlConnection.setAllowUserInteraction(false);+            isr = new InputStreamReader(url.openStream());+            br = new BufferedReader(isr);+            String line;+            while ((line = br.readLine()) != null)+            {+                sb.append(line);+            }+        }+        catch (IOException e)+        {+            e.printStackTrace();+        }+        finally+        {+            try {+                br.close();+                isr.close();+            } catch (IOException e) {+                e.printStackTrace();+            }+        }+        return sb.toString();+    }+++}Index: payments/src/main/java/cn/armylife/payments/Utils/NumberID.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/NumberID.java	(date 1574843450093)
+++ payments/src/main/java/cn/armylife/payments/Utils/NumberID.java	(date 1574843450093)
@@ -0,0 +1,23 @@
+package cn.armylife.payments.Utils;
+
+import org.springframework.stereotype.Component;
+
+import java.util.UUID;
+
+@Component
+public class NumberID {
+
+    public static Long nextId(Integer port){
+        int machineId = port;//最大支持1-9个集群机器部署
+        int hashCodeV = UUID.randomUUID().toString().hashCode();
+        if(hashCodeV < 0) {//有可能是负数
+            hashCodeV = - hashCodeV;
+        }
+//         0 代表前面补充0     
+//         4 代表长度为4     
+//         d 代表参数为正数型
+        String num=machineId+ String.format("%010d", hashCodeV);
+        Long number=Long.valueOf(num);
+        return number;
+    }
+}
Index: payments/src/main/java/cn/armylife/payments/Utils/WXPayXmlUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Utils/WXPayXmlUtil.java	(date 1574843450079)
+++ payments/src/main/java/cn/armylife/payments/Utils/WXPayXmlUtil.java	(date 1574843450079)
@@ -0,0 +1,30 @@
+package cn.armylife.payments.Utils;
+
+import org.w3c.dom.Document;
+
+import javax.xml.XMLConstants;
+import javax.xml.parsers.DocumentBuilder;
+import javax.xml.parsers.DocumentBuilderFactory;
+import javax.xml.parsers.ParserConfigurationException;
+
+/**
+ * 2018/7/3
+ */
+public final class WXPayXmlUtil {
+    public static DocumentBuilder newDocumentBuilder() throws ParserConfigurationException {
+        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-general-entities", false);
+        documentBuilderFactory.setFeature("http://xml.org/sax/features/external-parameter-entities", false);
+        documentBuilderFactory.setFeature("http://apache.org/xml/features/nonvalidating/load-external-dtd", false);
+        documentBuilderFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
+        documentBuilderFactory.setXIncludeAware(false);
+        documentBuilderFactory.setExpandEntityReferences(false);
+
+        return documentBuilderFactory.newDocumentBuilder();
+    }
+
+    public static Document newDocument() throws ParserConfigurationException {
+        return newDocumentBuilder().newDocument();
+    }
+}
Index: payments/src/main/java/cn/armylife/payments/Config/SessionConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Config/SessionConfig.java	(date 1574843450165)
+++ payments/src/main/java/cn/armylife/payments/Config/SessionConfig.java	(date 1574843450165)
@@ -0,0 +1,9 @@
+package cn.armylife.payments.Config;++import org.springframework.context.annotation.Configuration;+import org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession;++@Configuration+@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 86400*30)+public class SessionConfig {+}Index: payments/src/main/java/cn/armylife/payments/Config/AlipayConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Config/AlipayConfig.java	(date 1574843449947)
+++ payments/src/main/java/cn/armylife/payments/Config/AlipayConfig.java	(date 1574843449947)
@@ -0,0 +1,25 @@
+package cn.armylife.payments.Config;
+
+public class AlipayConfig {
+	// 商户appid
+	public static String APPID = "2016101500690081";
+	// 私钥 pkcs8格式的
+	public static String RSA_PRIVATE_KEY = "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCOk98S/OmMaTvicn5YbcuP1ZzdhCbXnk8/tvJKgKq7zpH6o0v6pwl8V6jV6ybH/4kT2c0nHlJwRzJkRXSJt0L8onvpooLaXnkEOvJAxe8MLBh4z4hjyDzsUinSf7cKAcYOw4xRoR8W0fhYUBThfkC9vE1CMH289CKCkU4EdgW/XWksFBfyJu9PBhBYPc4J5gAnIzxuNoaCbJX7qyRNe2UuvP6gWmaV5tRwkaAMNellRwS7o25AGPT4oIMfR+RVni2YY5di4dDEmvNfeE02Mjiux+eYzlfBWtm1moqKOAhBj47FYvj48dO+2qSn6hLUthuqHDNPyPwHCimDNZ/JcTe7AgMBAAECggEBAIcvZ7R+PwcWBGTKQEeiGv+O/8P8+EM65FM6KHNBmiCmVT07NeA8Hr9Z8kiaRNQe0x8SRPWRR4MTzpDKVhv5ujcF7M1ye/WG2+GJ7oZB5k05Rh7OT7ikdDdyFBt1YtzHH76B5PrE9VBS19EMZTAE4GfGMc7PYXkWVd5M3ZdXPE3bWpCOZFCDWbddG8arZJ3WKI8KGGlGf/RDVESDTermKD7j2aMY34RZAL11i6H4eiJypUb+1nCvucfECotCjStn4EWTlIDoBOTLC73gJ/YU69xomrX58FaOQLqxXJMG+36Gokh1rMv9XQkF9NfbdJ2RYXTqvOPxQLjdfZlhXPCX75kCgYEA3WDao6qqqT0WQu/oUcMGD6m43+s/62sQ7tjOQYjir5/hK4TykWqTBwpF/rnEoGuOiqT/VQWt7RvGH9OmlZNxmUNdHli1/esspRsyy4AE8+yeZoVFomyXlwLUmfN7xQaITVVH1wVnHGdLblimsQqWnw2uyII3N3zbBTFryHE0200CgYEApOAi/l3wkP1fFfIac6QMivX5eAfAwDtwImJ4Wk+tKMazvr49Ca//xk2rlG/zwSNLXHKvXUj6DTdnHmtgeg25B1nRNSflwUVcjjGiTCpou+SySxWAJ4JbszbcmgjPbP62yNBj0S8iUPrgXD3JKpJi5AEcPMcojbvQgACAO0IViycCgYA+TV+65/EXqAV32SS8vfIavl01R3O5wWwGjCWf8/I4Evq/0K6jlibCuHVydr2LmDmJc14Yg3yrWkGr+1jKh7BUvcybGcQ+Lc1mufzVoLXEIDeECsXKLF2NNlK28PtIO8poWTPao76dE8T6zSA8ewpgwO0LqPn5N747++ilhJankQKBgG1T1sB3CCsMZ73EoTenQ03t1zN5aJ3PjAaw5v9zr+3G/K9xtEW1N9SF8k1mgurB/Znazl/8IRscbrtkFkA400WFkE1AHICw/rOnQ+hfgr1846EYK7eHIElRCqz1RJ4QtKGqVVYDfCzYfmeL7NXW5c4s0k2W/lQlgxctvdoNcv2nAoGACiTZfAMbGHJHztjsltergOB0O9YfpO/kHuzJ+G0Shj9kqXFld93t544sL5K8kLqHtwWjAfQ5rC1R/c+A11Yl/jopmNmJWXH7rF8zxrZOP/ELKoj3U2EQyiN9kiMi3kVq0/WWLMylHb0RB7HP3Qmwm1ZUlLQnJ+BEMXaas8+XH8g=";
+	// 服务器异步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
+	public static String notify_url = "http://www.xuthus83.cn:6081/Pays/AlipayCallback";
+	// 页面跳转同步通知页面路径 需http://或者https://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问 商户可以自定义同步跳转地址
+	public static String return_url = "http://www.xuthus83.cn:6081/kdn/OneOffer-admin/wechat.html";
+	// 请求网关地址
+	public static String URL = "https://openapi.alipaydev.com/gateway.do";
+	// 编码
+	public static String CHARSET = "UTF-8";
+	// 返回格式
+	public static String FORMAT = "json";
+	// 支付宝公钥
+	public static String ALIPAY_PUBLIC_KEY = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAjpPfEvzpjGk74nJ+WG3Lj9Wc3YQm155PP7bySoCqu86R+qNL+qcJfFeo1esmx/+JE9nNJx5ScEcyZEV0ibdC/KJ76aKC2l55BDryQMXvDCwYeM+IY8g87FIp0n+3CgHGDsOMUaEfFtH4WFAU4X5AvbxNQjB9vPQigpFOBHYFv11pLBQX8ibvTwYQWD3OCeYAJyM8bjaGgmyV+6skTXtlLrz+oFpmlebUcJGgDDXpZUcEu6NuQBj0+KCDH0fkVZ4tmGOXYuHQxJrzX3hNNjI4rsfnmM5XwVrZtZqKijgIQY+OxWL4+PHTvtqkp+oS1LYbqhwzT8j8BwopgzWfyXE3uwIDAQAB";
+	// 日志记录目录
+	public static String log_path = "/log";
+	// RSA2
+	public static String SIGNTYPE = "RSA2";
+
+}
Index: payments/src/main/java/cn/armylife/payments/Config/RedisConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Config/RedisConfig.java	(date 1574843449931)
+++ payments/src/main/java/cn/armylife/payments/Config/RedisConfig.java	(date 1574843449931)
@@ -0,0 +1,40 @@
+package cn.armylife.payments.Config;
+
+import com.fasterxml.jackson.annotation.JsonAutoDetect;
+import com.fasterxml.jackson.annotation.PropertyAccessor;
+import com.fasterxml.jackson.databind.ObjectMapper;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.redis.connection.RedisConnectionFactory;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;
+import org.springframework.data.redis.serializer.StringRedisSerializer;
+
+@Configuration
+public class RedisConfig {
+    /**
+     * redisTemplate 序列化使用的jdkSerializeable, 存储二进制字节码, 所以自定义序列化类
+     * @param redisConnectionFactory
+     * @return
+     */
+    @Bean
+    public RedisTemplate<Object, Object> redisTemplate(RedisConnectionFactory redisConnectionFactory) {
+        RedisTemplate<Object, Object> redisTemplate = new RedisTemplate<>();
+        redisTemplate.setConnectionFactory(redisConnectionFactory);
+
+        // 使用Jackson2JsonRedisSerialize 替换默认序列化
+        Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class);
+
+        ObjectMapper objectMapper = new ObjectMapper();
+        objectMapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);
+        objectMapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);
+
+        jackson2JsonRedisSerializer.setObjectMapper(objectMapper);
+
+        // 设置value的序列化规则和 key的序列化规则
+        redisTemplate.setKeySerializer(new StringRedisSerializer());
+        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);
+        redisTemplate.afterPropertiesSet();
+        return redisTemplate;
+    }
+}
Index: payments/src/main/java/cn/armylife/payments/Config/FeignRequestIntercepter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Config/FeignRequestIntercepter.java	(date 1574843450251)
+++ payments/src/main/java/cn/armylife/payments/Config/FeignRequestIntercepter.java	(date 1574843450251)
@@ -0,0 +1,33 @@
+package cn.armylife.payments.Config;++import feign.RequestInterceptor;+import feign.RequestTemplate;+import org.springframework.stereotype.Component;+import org.springframework.web.context.request.RequestAttributes;+import org.springframework.web.context.request.RequestContextHolder;+import org.springframework.web.context.request.ServletRequestAttributes;++import javax.servlet.http.HttpServletRequest;+import java.util.Enumeration;+++@Component+public class FeignRequestIntercepter implements RequestInterceptor {+    @Override+    public void apply(RequestTemplate requestTemplate) {+//通过RequestContextHolder获取本地请求+        RequestAttributes requestAttributes = RequestContextHolder.getRequestAttributes();+        if (requestAttributes == null){+            return;+        }+//获取本地线程绑定的请求对象+        HttpServletRequest request = ((ServletRequestAttributes)requestAttributes).getRequest();+//给请求模板附加本地线程头部信息，主要是cookie信息+        Enumeration headerNames = request.getHeaderNames();+        while (headerNames.hasMoreElements()){+            String name = (String) headerNames.nextElement();+            requestTemplate.header(name,request.getHeader(name));+        }++    }+}Index: market/src/main/java/cn/armylife/market/Mapper/PaymentsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/PaymentsMapper.java	(date 1574214225030)
+++ market/src/main/java/cn/armylife/market/Mapper/PaymentsMapper.java	(date 1574214225030)
@@ -0,0 +1,50 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.Payments;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface PaymentsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int insert(Payments record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    Payments selectByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    List<Payments> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Payments record);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/ProductMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/ProductMapper.java	(date 1575512569585)
+++ market/src/main/java/cn/armylife/market/Mapper/ProductMapper.java	(date 1575512569585)
@@ -0,0 +1,64 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.Product;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface ProductMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer productId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int insert(Product record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    Product selectByPrimaryKey(Integer productId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    List<Product> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table product
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Product record);
+
+    List<Product> selectProductForShop(Product product);
+
+    int offShelves(Long productId);
+
+    Product selectProductNews(String product);
+
+    int updateProducts(Product product);
+
+    /**
+     * 当日商品统计
+     * @param shopId
+     * @return
+     */
+    List<Product> rankForProduct(Long shopId);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/TransactionsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/TransactionsMapper.java	(date 1574214225126)
+++ market/src/main/java/cn/armylife/market/Mapper/TransactionsMapper.java	(date 1574214225126)
@@ -0,0 +1,49 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.Transactions;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface TransactionsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer tranactionsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int insert(Transactions record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    Transactions selectByPrimaryKey(Integer tranactionsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    List<Transactions> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Transactions record);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/AfterOrderDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/AfterOrderDetailMapper.java	(date 1575797523845)
+++ market/src/main/java/cn/armylife/market/Mapper/AfterOrderDetailMapper.java	(date 1575797523845)
@@ -0,0 +1,23 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.AfterOrderDetail;
+
+import java.util.List;
+
+public interface AfterOrderDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order_detail
+     *
+     * @mbggenerated
+     */
+    int insert(AfterOrderDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order_detail
+     *
+     * @mbggenerated
+     */
+    List<AfterOrderDetail> selectAll();
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/MemberMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/MemberMapper.java	(date 1574214224874)
+++ market/src/main/java/cn/armylife/market/Mapper/MemberMapper.java	(date 1574214224874)
@@ -0,0 +1,49 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.Member;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface MemberMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer memberId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int insert(Member record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    Member selectByPrimaryKey(Integer memberId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    List<Member> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table member
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Member record);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/ProductDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/ProductDetailMapper.java	(date 1574214224884)
+++ market/src/main/java/cn/armylife/market/Mapper/ProductDetailMapper.java	(date 1574214224884)
@@ -0,0 +1,50 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.ProductDetail;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface ProductDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer productDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int insert(ProductDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    ProductDetail selectByPrimaryKey(Integer productDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    List<ProductDetail> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table produvt_detail
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(ProductDetail record);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/ShopOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/ShopOrderMapper.java	(date 1576287304963)
+++ market/src/main/java/cn/armylife/market/Mapper/ShopOrderMapper.java	(date 1576287304963)
@@ -0,0 +1,147 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.DeliveryOrder;
+import cn.armylife.common.Domain.ShopOrder;
+import com.github.pagehelper.Page;
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Param;
+
+import java.math.BigDecimal;
+import java.util.List;
+
+@Mapper
+public interface ShopOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer ordersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int insert(ShopOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    ShopOrder selectByPrimaryKey(Integer ordersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    List<ShopOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(ShopOrder record);
+
+
+
+
+    /**
+     * 查询用户的订单(可查询用户,商铺)
+     * @param shopOrder
+     * @return
+     */
+    Page<ShopOrder> selectAllForMember(ShopOrder shopOrder);
+
+    /**
+     * 可查询跑腿订单
+     * @param deliveryOrder
+     * @return
+     */
+    Page<DeliveryOrder> selectAlldeliveryForMember(DeliveryOrder deliveryOrder);
+
+    /**
+     * 可查询跑腿订单
+     * @return
+     */
+    Page<DeliveryOrder> selectAlldelivery();
+
+    /**
+     * 更新订单状态
+     * @param shopOrder
+     * @return
+     */
+    int updateShopOrder(ShopOrder shopOrder);
+
+    /**
+     * 通过orderid查找订单
+     * @param orderId
+     * @return
+     */
+    ShopOrder selectOrder(Long orderId);
+
+    /**
+     * 月销
+     * @param shopId
+     * @return
+     */
+    String rankMonthPayForShop(Long shopId);
+
+    /**
+     * 日销
+     * @param shopId
+     * @return
+     */
+    String rankDayPayForShop(Long shopId);
+
+    /**
+     * 确认接单
+     * @param orderId
+     * @return
+     */
+    int confirmOrder(Long orderId);
+
+    /**
+     * 拒绝退款
+     * @param orderId
+     * @return
+     */
+    int rejectRefund(Long orderId);
+
+    /**
+     * 确认退款
+     * @param orderId
+     * @return
+     */
+    int confirmRefund(Long orderId);
+
+    /**
+     * 完成订单
+     * @param shopOrder
+     * @return
+     */
+    int endOrder(ShopOrder shopOrder);
+
+    /**
+     * 查询已结束订单
+     * @param stuId
+     * @return
+     */
+    Page<ShopOrder> selectEndOrder(Long stuId);
+
+    /**
+     * 更新用户金额
+     * @param memberTotal
+     * @param memberId
+     * @return
+     */
+    int orderFulfillment(@Param("memberTotal" )BigDecimal memberTotal,@Param("memberId")Long memberId);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/OrderDetailMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/OrderDetailMapper.java	(date 1574214225042)
+++ market/src/main/java/cn/armylife/market/Mapper/OrderDetailMapper.java	(date 1574214225042)
@@ -0,0 +1,49 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.OrderDetail;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface OrderDetailMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer orderDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int insert(OrderDetail record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    OrderDetail selectByPrimaryKey(Integer orderDetailId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    List<OrderDetail> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table order_detail
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(OrderDetail record);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/HairvipMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/HairvipMapper.java	(date 1575640033143)
+++ market/src/main/java/cn/armylife/market/Mapper/HairvipMapper.java	(date 1575640033143)
@@ -0,0 +1,40 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.Hairvip;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface HairvipMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table hairvip
+     *
+     * @mbggenerated
+     */
+    int insert(Hairvip record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table hairvip
+     *
+     * @mbggenerated
+     */
+    List<Hairvip> selectAll();
+
+    /**
+     * 查找理发店会员
+     * @param memberId
+     * @return
+     */
+    Hairvip selectHairvip(Long memberId);
+
+    /**
+     * 续费会员
+     * @param hairvip
+     * @return
+     */
+    int updateHair(Hairvip hairvip);
+}
+
Index: market/src/main/java/cn/armylife/market/Mapper/AfterOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/AfterOrderMapper.java	(date 1575797663669)
+++ market/src/main/java/cn/armylife/market/Mapper/AfterOrderMapper.java	(date 1575797663669)
@@ -0,0 +1,51 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.AfterOrder;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface AfterOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Long afterOrderId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int insert(AfterOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    AfterOrder selectByPrimaryKey(Long afterOrderId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    List<AfterOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(AfterOrder record);
+
+    AfterOrder SelectAfterOrder(Long ordersId);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/ShopTagMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/ShopTagMapper.java	(date 1575367140126)
+++ market/src/main/java/cn/armylife/market/Mapper/ShopTagMapper.java	(date 1575367140126)
@@ -0,0 +1,41 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.ShopTag;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface ShopTagMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    int insert(ShopTag record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table shop_tag
+     *
+     * @mbggenerated
+     */
+    List<ShopTag> selectAll();
+
+
+
+    /**
+     * 查询店铺商品分类
+     * @param shopId
+     * @return
+     */
+    List<ShopTag> FindShopTag(Long shopId);
+
+    /**
+     * 查询店铺所有商品
+     * @param shopId
+     * @return
+     */
+    List<ShopTag> selectShopProduct(Long shopId);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Mapper/DeliveryOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Mapper/DeliveryOrderMapper.java	(date 1575467129129)
+++ market/src/main/java/cn/armylife/market/Mapper/DeliveryOrderMapper.java	(date 1575467129129)
@@ -0,0 +1,56 @@
+package cn.armylife.market.Mapper;
+
+import cn.armylife.common.Domain.DeliveryOrder;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface DeliveryOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer deliveryOrdersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int insert(DeliveryOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    DeliveryOrder selectByPrimaryKey(Integer deliveryOrdersId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    List<DeliveryOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table delivery_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(DeliveryOrder record);
+
+    /**
+     *通过订单查询跑腿订单
+     * @param orderId
+     * @return
+     */
+    DeliveryOrder selectDeliveryFororderId(Long orderId);
+}
\ No newline at end of file
Index: market/src/main/java/cn/armylife/market/Service/ProductService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Service/ProductService.java	(date 1575808977293)
+++ market/src/main/java/cn/armylife/market/Service/ProductService.java	(date 1575808977293)
@@ -0,0 +1,122 @@
+package cn.armylife.market.Service;
+
+import cn.armylife.common.Domain.*;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+@Service
+@Transactional
+public interface ProductService {
+
+
+    /**
+     * 查询全部商品
+     * @param product
+     * @return
+     */
+    List<Product> selectProductForShop(Product product);
+
+    /**
+     * 商品下架
+     * @param productId
+     * @return
+     */
+    int offShelves(Long productId);
+
+    /**
+     * 商品信息
+     * @param product
+     * @return
+     */
+    Product selectProductNews(String product);
+
+    /**
+     * 上架商品
+     * @param record
+     * @return
+     */
+    int insert(Product record);
+
+    /**
+     * 更新商品信息
+     * @param product
+     * @return
+     */
+    int updateProducts(Product product);
+
+    /**
+     * 添加商铺分类
+     * @param record
+     * @return
+     */
+    int TagInsert(ShopTag record);
+
+    /**
+     * 查询店铺商品分类
+     * @param shopId
+     * @return
+     */
+    List<ShopTag> selectShopTag(Long shopId);
+
+    /**
+     * 添加商品详细信息
+     * @param record
+     * @return
+     */
+    int detailinsert(ProductDetail record);
+
+    /**
+     * 查询店铺所有商品
+     * @param shopId
+     * @return
+     */
+    List<ShopTag> selectShopProduct(Long shopId);
+
+    /**
+     * 当日商品统计
+     * @param shopId
+     * @return
+     */
+    List<Product> rankForProduct(Long shopId);
+
+    /**
+     * 添加商品至购物车
+     * @param productIds
+     * @param shopId
+     * @param total
+     * @param member
+     * @return
+     */
+    int AddShoppingCarts(String[] productIds, String shopId, String total, Long member);
+
+
+
+    /**
+     * 理发店会员加入
+     * @param record
+     * @return
+     */
+    int hairInsert(Hairvip record);
+
+    /**
+     * 是否有会员信息
+     * @param memberId
+     * @return
+     */
+    boolean checkHairvip(long memberId);
+
+    Hairvip selectHairvip(long memberId);
+
+
+    /**
+     * 续费会员
+     * @param hairvip
+     * @return
+     */
+    int updateHair(Hairvip hairvip);
+
+    int orderdetailinsert(OrderDetail record);
+
+}
Index: market/src/main/java/cn/armylife/market/Service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Service/OrderService.java	(date 1576287012534)
+++ market/src/main/java/cn/armylife/market/Service/OrderService.java	(date 1576287012534)
@@ -0,0 +1,144 @@
+package cn.armylife.market.Service;
+
+import cn.armylife.common.Domain.*;
+import com.github.pagehelper.Page;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import java.math.BigDecimal;
+import java.util.List;
+
+@Service
+@Transactional
+public interface OrderService {
+
+
+    int insert(ShopOrder record, List<Product> productList,String orderExpress);
+
+    int VIPinsert(ShopOrder shopOrder);
+
+    /**
+     * 查询用户的订单(可查询用户,商铺)
+     * @param shopOrder
+     * @return
+     */
+    Page<ShopOrder> selectAllForMember(ShopOrder shopOrder);
+
+    /**
+     * 可查询跑腿订单
+     * @param deliveryOrder
+     * @return
+     */
+    Page<DeliveryOrder> selectAlldeliveryForMember(DeliveryOrder deliveryOrder);
+
+
+    /**
+     * 更新订单状态
+     * @param shopOrder
+     * @return
+     */
+    @RequestMapping("updateOrderStatus")
+    int endOrders(ShopOrder shopOrder);
+
+    /**
+     * 通过orderid查找订单
+     * @param orderId
+     * @return
+     */
+    ShopOrder selectOrder(Long orderId);
+
+    /**
+     * 在订单结算后,增加物品,新建子订单
+     * @param afterOrder
+     * @return
+     */
+    int AddAfterOrder(AfterOrder afterOrder);
+
+    /**
+     * 查询子订单
+     * @param ordersId
+     * @return
+     */
+    AfterOrder SelectAfterOrder(Long ordersId);
+
+    /**
+     * 可查询跑腿订单
+     * @return
+     */
+    Page<DeliveryOrder> selectAlldelivery();
+
+    /**
+     * 得到当前商铺排队人数
+     * @return
+     */
+    int getShopPeople(String shopId);
+    //增加店铺排队人数
+    void upShopPeople(String shopId);
+    //减少店铺排队人数
+    void downShopPeople(String shopId);
+
+    /**
+     * 月销
+     * @param shopId
+     * @return
+     */
+    String rankMonthPayForShop(Long shopId);
+
+    /**
+     * 日销
+     * @param shopId
+     * @return
+     */
+    String rankDayPayForShop(Long shopId);
+
+    /**
+     * 确认接单
+     * @param orderId
+     * @return
+     */
+    int confirmOrder(Long orderId);
+
+    /**
+     * 拒绝退款
+     * @param orderId
+     * @return
+     */
+    int rejectRefund(Long orderId);
+
+    /**
+     * 确认退款
+     * @param orderId
+     * @return
+     */
+    int confirmRefund(Long orderId);
+
+    /**
+     * 餐后结算
+     * @param orderId
+     * @return
+     */
+    int afterOrderRefund(Long orderId, BigDecimal total);
+
+    /**
+     *订单信息添加
+     * @param record
+     * @return
+     */
+    int orderdatailinsert(OrderDetail record);
+
+    /**
+     * 查询已结束订单
+     * @param stuId
+     * @return
+     */
+    Page<ShopOrder> selectEndOrder(Long stuId);
+
+    /**
+     * 外卖结束订单
+     * @param orderID
+     * @return
+     */
+    int orderFulfillment(Long orderID);
+
+}
Index: market/src/main/java/cn/armylife/market/Service/WechatService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Service/WechatService.java	(date 1575809003693)
+++ market/src/main/java/cn/armylife/market/Service/WechatService.java	(date 1575809003693)
@@ -0,0 +1,15 @@
+package cn.armylife.market.Service;
+
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.Map;
+
+@Service
+@Transactional
+public interface WechatService {
+
+    String getOpenId(String code);
+
+    Map<Integer,String> getUserInfo(String code);
+}
Index: market/src/main/java/cn/armylife/market/Controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Controller/OrderController.java	(date 1576287012504)
+++ market/src/main/java/cn/armylife/market/Controller/OrderController.java	(date 1576287012504)
@@ -0,0 +1,447 @@
+package cn.armylife.market.Controller;
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.market.Feign.MemberService;
+import cn.armylife.market.Mapper.DeliveryOrderMapper;
+import cn.armylife.market.Service.OrderService;
+import cn.armylife.market.Service.ProductService;
+import cn.armylife.market.Util.NumberID;
+import com.github.pagehelper.PageHelper;
+import com.github.pagehelper.PageInfo;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.data.redis.core.ListOperations;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.bind.annotation.RestController;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.*;
+import java.util.logging.Logger;
+
+@RestController
+public class OrderController {
+    Logger logger=Logger.getLogger("OrderController.class");
+
+    @Autowired
+    MemberService memberService;
+
+    @Autowired
+    OrderService orderService;
+
+    @Autowired
+    ProductService productService;
+
+    @Autowired
+    DeliveryOrderMapper deliveryOrderMapper;
+
+    @Autowired
+    RedisTemplate redisTemplate;
+
+
+    @Value("${server.port}")
+    int port;
+
+    /**
+     * 添加订单
+     * @param shopOrder
+     * @return
+     */
+    @RequestMapping("creatShopOrder")
+    @ResponseBody
+    public Long creatShopOrder(ShopOrder shopOrder,String orderExpress, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
+        Date date=new Date();
+        String creatime=sdf.format(date);
+        shopOrder.setCreatTime(creatime);
+        shopOrder.setOrdersStatus("0");
+        Long int1= NumberID.nextId(port);
+        shopOrder.setOrdersId(int1);
+        shopOrder.setStuId(member.getMemberId());
+        logger.info("SopOrder:"+shopOrder);
+        List<Product> productList=new ArrayList<>();
+        List<OrderDetail> expressList=new ArrayList<>();
+        ListOperations<String, Object> lo = redisTemplate.opsForList();
+        productList=(List<Product>) lo.index("userId-"+member.getMemberId()+shopOrder.getShopId(), 0);
+        logger.info("orderExpress:"+orderExpress);
+        try {
+            if (orderExpress.equals("1")){
+            ListOperations<String, OrderDetail> ll = redisTemplate.opsForList();
+            for (int i=0;i<ll.size("userId-"+member.getMemberId());i++){
+                shopOrder.setIsdelivery(1);
+                expressList.add(ll.index("userId-"+member.getMemberId(), i));
+            }
+            for (int i=0;i<expressList.size();i++){
+                OrderDetail orderDetail=expressList.get(i);
+                orderDetail.setOrderId(int1);
+                orderService.orderdatailinsert(orderDetail);
+            }
+        }else {
+                logger.info("不是快递");
+            orderExpress="0";
+        }
+    }catch (NullPointerException e){
+            logger.info(""+e);
+            orderExpress="0";
+        }
+        int msg =orderService.insert(shopOrder,productList,orderExpress);
+        if (msg==0){
+            return 0l;
+        }
+        lo.rightPop("userId-"+member.getMemberId()+shopOrder.getShopId());
+        lo.rightPop("userId-"+member.getMemberId());
+        return int1;
+    }
+
+    /**
+     * 查询学员与商铺的订单
+     * @param shopOrder
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectAllForMember")
+    @ResponseBody
+    public PageInfo<ShopOrder> selectAllForMember(ShopOrder shopOrder, int pageNum,int type, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        PageHelper.startPage(pageNum, 10);
+        Member member=new Member();
+        switch (type){
+            case 1:
+                member=(Member) session.getAttribute("Student");
+                shopOrder.setStuId(member.getMemberId());
+                break;
+            case 2:
+                member=(Member) session.getAttribute("Shop");
+                shopOrder.setShopId(member.getMemberId());
+                break;
+        }
+        if (member==null){
+            return null;
+        }
+
+        PageInfo<ShopOrder> pageInfo = new PageInfo<>(orderService.selectAllForMember(shopOrder));
+        if (pageInfo.getPageNum()==1&pageNum>1){
+            return null;
+        }
+        return pageInfo;
+    };
+
+    /**
+     * 查询跑腿订单
+     * @param deliveryOrder
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectAlldeliveryForMember")
+    @ResponseBody
+    public PageInfo<DeliveryOrder> selectAlldeliveryForMember(DeliveryOrder deliveryOrder,int pageNum,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        PageHelper.startPage(pageNum, 10);
+        Member member=(Member)session.getAttribute("Delivery");
+        if (member==null||!member.getMemberType().equals("2")){
+            logger.info("用户未登录,阻止进行");
+            return null;
+        }
+        switch (member.getMemberType()){
+            case "1":
+                deliveryOrder.setDeliveryUserId(member.getMemberId());
+                break;
+            case "2":
+                deliveryOrder.setDeliveryUserId(member.getMemberId());
+                break;
+            default:
+                return null;
+        }
+        PageInfo<DeliveryOrder> pageInfo = new PageInfo<>(orderService.selectAlldeliveryForMember(deliveryOrder));
+        if (pageInfo.getPageNum()==1&pageNum>1){
+            return null;
+        }
+        return pageInfo;
+    };
+
+    /**
+     * 更新订单信息
+     * @param shopOrder
+     * @return
+     */
+    @RequestMapping("updateShopOrder")
+    @ResponseBody
+    public int updateShopOrder(ShopOrder shopOrder){
+        return 1;
+    }
+
+    /**
+     * 跑腿点击取货
+     * @param ordersId
+     * @return
+     */
+    @RequestMapping("getShopOrder")
+    @ResponseBody
+    public int getShopOrder(Long ordersId){
+        ShopOrder shopOrder=new ShopOrder();
+        shopOrder.setOrdersId(ordersId);
+        shopOrder.setOrdersStatus("2");
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh-mm-ss");
+        Date date=new Date();
+        String creattime=sdf.format(date);
+        shopOrder.setCreatTime(creattime);
+        int msg=orderService.endOrders(shopOrder);
+        return msg;
+    }
+
+    /**
+     * 跑腿点击送达
+     * @param ordersId
+     * @return
+     */
+    @RequestMapping("endShopOrder")
+    @ResponseBody
+    public int endShopOrder(Long ordersId){
+        return orderService.orderFulfillment(ordersId);
+    }
+
+    /**
+     * 跑腿点击接单,向跑腿订单表插入订单数据,更新订单状态
+     * @param ordersId
+     * @param request
+     * @return
+     */
+    @RequestMapping("EnableOrder")
+    @ResponseBody
+    public int EnableOrder(Long ordersId,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Delivery");
+        ShopOrder shopOrder=orderService.selectOrder(ordersId);
+        DeliveryOrder deliveryOrder=new DeliveryOrder();
+        deliveryOrder.setOrdersId(ordersId);
+        deliveryOrder.setDeliveryAddress(shopOrder.getOrdersAddress());
+        deliveryOrder.setDeliveryUserId(member.getMemberId());
+        deliveryOrder.setDeliveryTotal(shopOrder.getDeliveryTotal());
+        deliveryOrder.setUserPhone(shopOrder.getUserPhone());
+        deliveryOrder.setUserName(member.getMemberName());
+        deliveryOrder.setDeliveryTotal(shopOrder.getDeliveryTotal());
+        ShopOrder order=new ShopOrder();
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh-mm-ss");
+        Date date=new Date();
+        String creattime=sdf.format(date);
+        order.setOrdersStatus("1");
+        order.setCreatTime(creattime);
+        order.setOrdersId(ordersId);
+        orderService.endOrders(order);
+        return deliveryOrderMapper.insert(deliveryOrder);
+    }
+
+    /**
+     * 在订单结算后,增加物品,新建子订单
+     * @param afterOrder
+     * @param request
+     * @return
+     */
+    @RequestMapping("AddAfterOrder")
+    @ResponseBody
+    public int AddAfterOrder(AfterOrder afterOrder,Long ordersId, @RequestParam(value = "productIds[]") String[] productIds, String people, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
+        Date date=new Date();
+        String creatime=sdf.format(date);
+        BigDecimal total=BigDecimal.ZERO;
+        Product product=new Product();
+        Map<Product,String> productMap=new HashMap<>();
+        try{
+            for (int i=0;i<productIds.length;i++) {
+                String[] str2 = productIds[i].split("\\*");
+                product = productService.selectProductNews(str2[0]);
+                product.setOrderNum(str2[1]);
+                OrderDetail orderDetail=new OrderDetail();
+                orderDetail.setOrderId(ordersId);
+                orderDetail.setOrderDetailNum(Integer.valueOf(str2[1]));
+                orderDetail.setOrderDetailName(product.getProductName());
+                orderDetail.setOrderDetailPng(product.getProductAvator());
+                orderDetail.setOrderDetailTotal(product.getProductTotal());
+                productService.orderdetailinsert(orderDetail);
+            }
+        afterOrder.setCreatTime(creatime);
+        afterOrder.setAfterOrderId(NumberID.nextId(port));
+        ShopOrder order=orderService.selectOrder(ordersId);
+        ShopOrder shopOrder=new ShopOrder();
+        shopOrder.setOrdersId(ordersId);
+        shopOrder.setOrdersPeople(order.getOrdersPeople()+Integer.valueOf(people));
+        orderService.endOrders(shopOrder);
+        }catch (NullPointerException e){
+            logger.info("空指针:"+e);
+        }
+        if (member==null){
+            logger.info("用户未登录,阻止进行");
+            return 2;
+        }
+        return orderService.AddAfterOrder(afterOrder);
+    }
+
+    /**
+     * 查询子订单
+     * @param orderId
+     * @return
+     */
+    @RequestMapping("SelectAfterOrder")
+    @ResponseBody
+    public AfterOrder SelectAfterOrder(Long orderId){
+        return orderService.SelectAfterOrder(orderId);
+    }
+
+    /**
+     * 通过ordersId查询订单
+     * @param orderIds
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectOrder")
+    @ResponseBody
+    public ShopOrder selectOrder(Long orderIds,HttpServletRequest request){
+        HttpSession session=request.getSession();
+//        Member member=(Member)session.getAttribute("Student");
+        return orderService.selectOrder(orderIds);
+    }
+
+    /**
+     * 查询需要跑腿的订单
+     * @param pageNum
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectAlldelivery")
+    @ResponseBody
+    public PageInfo<DeliveryOrder> selectAlldelivery(int pageNum,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        PageHelper.startPage(pageNum, 10);
+        Member member=new Member();
+        try{
+            member=(Member)session.getAttribute("Delivery");
+        }catch (NullPointerException e){
+            logger.info("空指针异常"+e);
+        }
+        logger.info(member.toString());
+        if (member==null||!member.getMemberType().equals("2")){
+            logger.info("用户未登录,阻止进行");
+            return null;
+        }
+        PageInfo<DeliveryOrder> pageInfo = new PageInfo<>(orderService.selectAlldelivery());
+        return pageInfo;
+    }
+
+    /**
+     * 得到当前商铺的排队人数
+     * @param request
+     * @param shopId
+     * @return
+     */
+    @RequestMapping("getShopPeople")
+    @ResponseBody
+    public int getShopPeople(HttpServletRequest request,String shopId){
+        return orderService.getShopPeople(shopId);
+    }
+
+    /**
+     * 确认接单
+     * @param orderId
+     * @return
+     */
+    @RequestMapping("confirmOrder")
+    @ResponseBody
+    public int confirmOrder(Long orderId){
+        return orderService.confirmOrder(orderId);
+    }
+
+    /**
+     * 拒绝退款
+     * @param orderId
+     * @return
+     */
+    @RequestMapping("rejectRefund")
+    @ResponseBody
+    public int rejectRefund(Long orderId){
+        return orderService.rejectRefund(orderId);
+    }
+
+    /**
+     * 确认退款
+     * @param orderId
+     * @return
+     */
+    @RequestMapping("confirmRefund")
+    @ResponseBody
+    public int confirmRefund(Long orderId){
+        return orderService.confirmRefund(orderId);
+    }
+
+    /**
+     * 餐后结算
+     * @param total
+     * @param orderId
+     * @param request
+     * @return
+     */
+    @RequestMapping("afterOrderRefund")
+    @ResponseBody
+    public int afterOrderRefund(BigDecimal total,Long orderId,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        return orderService.afterOrderRefund(orderId,total);
+    }
+
+    /**
+     * 订单状态改为退款
+     * @param ordersId
+     * @param request
+     * @return
+     */
+    @RequestMapping("goRefund")
+    @ResponseBody
+    public int goRefund(Long ordersId,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        ShopOrder shopOrder=new ShopOrder();
+        shopOrder.setOrdersStatus("5");
+        shopOrder.setOrdersId(ordersId);
+        return orderService.endOrders(shopOrder);
+    }
+
+    /**
+     * 取货
+     * @param ordersId
+     * @param request
+     * @return
+     */
+    @RequestMapping("getProduct")
+    @ResponseBody
+    public int getProduct(Long ordersId,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        ShopOrder shopOrder=new ShopOrder();
+        shopOrder.setOrdersStatus("6");
+        shopOrder.setOrdersId(ordersId);
+        return orderService.endOrders(shopOrder);
+    }
+
+    /**
+     * 查询已结束订单
+     * @param pageNum
+     * @return
+     */
+    @RequestMapping("selectEndOrder")
+    @ResponseBody
+    public PageInfo<ShopOrder> selectEndOrder(int pageNum,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        Long stuId=member.getMemberId();
+        return null;
+    };
+
+}
Index: market/src/main/java/cn/armylife/market/Controller/ProductController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/Controller/ProductController.java	(date 1575685426839)
+++ market/src/main/java/cn/armylife/market/Controller/ProductController.java	(date 1575685426839)
@@ -0,0 +1,393 @@
+package cn.armylife.market.Controller;
+
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.common.Util.NumberID;
+import cn.armylife.market.Config.RedisDao;
+import cn.armylife.market.Domain.RankShop;
+import cn.armylife.market.Service.OrderService;
+import cn.armylife.market.Service.ProductService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.data.redis.core.ListOperations;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.ResponseBody;
+import org.springframework.web.multipart.MultipartFile;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpSession;
+import java.io.File;
+import java.io.IOException;
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.*;
+
+@Controller
+public class ProductController {
+
+    Logger logger= LoggerFactory.getLogger(ProductController.class);
+
+    @Autowired private ProductService productService;
+    @Autowired
+    RedisDao redisDao;
+
+    @Autowired
+    RedisTemplate redisTemplate;
+
+    @Autowired
+    OrderService orderService;
+
+
+    @Value("${server.port}")
+    int port;
+
+    /**
+     * 查询商铺商品
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectProductForShop")
+    @ResponseBody
+    public List<Product> selectProductForShop(HttpServletRequest request){
+        Product product=new Product();
+        HttpSession session=request.getSession();
+        Member member=(Member) session.getAttribute("Shop");
+        product.setShopId(member.getMemberId());
+        if (member==null){
+            logger.info("当前未登录帐号,请前往登录页面!");
+            return null;
+        }
+        return productService.selectProductForShop(product);
+    }
+
+    /**
+     * 下架商品
+     * @param product
+     * @return
+     */
+    @RequestMapping("offShelves")
+    @ResponseBody
+    public int offShelves(Product product, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member) session.getAttribute("Shop");
+        if (member==null){
+            logger.info("当前未登录帐号,请前往登录页面!");
+            return 0;
+        }
+        return productService.offShelves(product.getProductId());
+    }
+
+    /**
+     * 查询商品信息
+     * @param productId
+     * @return
+     */
+    @RequestMapping("selectProductNews")
+    @ResponseBody
+    public Map<Product, String> selectProductNews(List<String> productId, HttpServletRequest request) {
+        HttpSession session = request.getSession();
+        Member member = (Member) session.getAttribute("Shop");
+        if (member == null) {
+            logger.info("当前未登录帐号,请前往登录页面!");
+            return null;
+        }
+        Map<Product, String> productMap = new HashMap<>();
+        for (int i = 0; i < productId.size(); i++) {
+            String[] productIds = productId.get(i).split(",");
+            Product products = productService.selectProductNews(productIds[1]);
+            productMap.put(products, productIds[2]);
+        }
+        return productMap;
+    }
+    /**
+     * 通过分类查询得到全部商品
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectShopProduct")
+    @ResponseBody
+    public List<ShopTag> selectShopProduct(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        return productService.selectShopProduct(member.getMemberId());
+
+    };
+
+
+
+    /**
+     * 添加商铺商品分类
+     * @param shopTag
+     * @param request
+     * @return
+     */
+    @RequestMapping("/AddProductTag")
+    @ResponseBody
+    public int AddProductTag(ShopTag shopTag,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd hh/mm/ss");
+        Date date=new Date();
+        String creatTime=sdf.format(date);
+        shopTag.setCreatTime(creatTime);
+        shopTag.setShopId(member.getMemberId());
+        return productService.TagInsert(shopTag);
+    }
+
+    /**
+     * 查询店铺商品分类
+     * @param request
+     * @return
+     */
+    @RequestMapping("selectShopTag")
+    @ResponseBody
+    public List<ShopTag> selectShopTag(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        logger.info(member.toString());
+        return productService.selectShopTag(member.getMemberId());
+    };
+
+    /**
+     * 上架商品
+     * @param product
+     * @return
+     */
+    @RequestMapping("grounding")
+    @ResponseBody
+    public int grounding(MultipartFile file, Product product, HttpServletRequest request) throws IOException {
+        HttpSession session=request.getSession();
+        Member member=(Member) session.getAttribute("Shop");
+        product.setShopId(member.getMemberId());
+        if (member==null){
+            logger.info("当前未登录帐号,请前往登录页面!");
+            return 2;
+        }
+        String newName = null;
+        String exeName = null;
+        // 判断文件是否为空
+        if (!file.isEmpty()) {
+            logger.info("123");
+            // 图片原始名字
+            String oldName = file.getOriginalFilename();
+            // 图片新名字
+            newName = UUID.randomUUID().toString();
+            // 后缀名
+            // exeName = oldName.substring(oldName.indexOf("."));
+            exeName=".png";
+//            File pic = new File("/root/armylife/shopAvatar/" + newName + exeName);
+            File pic = new File("E:\\Temp\\" + newName + exeName);
+            // 保存图片到本地磁盘
+            file.transferTo(pic);
+            product.setProductAvator("http://api.xuthus83.cn:6081/img/"+newName + exeName);
+        }
+
+        return productService.insert(product);
+    }
+
+    /**
+     * 更新商品
+     * @param product
+     * @return
+     */
+    @RequestMapping("updateProducts")
+    @ResponseBody
+    public int updateProducts(Product product, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member) session.getAttribute("Shop");
+        if (member==null){
+            logger.info("当前未登录帐号,请前往登录页面!");
+            return 2;
+        }
+        return productService.updateProducts(product);
+    };
+
+//    @RequestMapping("AddShoppingCarts")
+//    @ResponseBody
+
+
+    /**
+     * 添加购物车
+     * @param request
+     * @return
+     */
+    @RequestMapping("/AddShoppingCart")
+    @ResponseBody
+    public int AddShoppingCart(@RequestParam(value = "productIds[]") String[] productIds, String shopId, String total, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        for (int i=0;i<productIds.length;i++){
+            logger.info("product"+productIds[i]);//.get(i));
+        }
+        return productService.AddShoppingCarts(productIds,shopId,total,member.getMemberId());
+    }
+
+    /**
+     * 添加快递购物车
+     * @param request
+     * @return
+     */
+    @RequestMapping("/AddExpressCart")
+    @ResponseBody
+    public int AddExpresspingCart(OrderDetail orderDetail,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        ListOperations<String, OrderDetail> lo = redisTemplate.opsForList();
+        lo.leftPush("userId-"+member.getMemberId(),orderDetail);
+        return 1;
+    }
+
+    /**
+     * 查询快递里的商品
+     * @param request
+     * @return
+     */
+    @RequestMapping("SelectExpressCart")
+    @ResponseBody
+    public List<OrderDetail> SelectExpressCart(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        List<OrderDetail> expressList=new ArrayList<>();
+        ListOperations<String, OrderDetail> lo = redisTemplate.opsForList();
+        for (int i=0;i<lo.size("userId-"+member.getMemberId());i++){
+            expressList.add(lo.index("userId-"+member.getMemberId(), i));
+        }
+        return expressList;
+    }
+
+    /**
+     * 查询购物车里的商品
+     * @param request
+     * @return
+     */
+    @RequestMapping("SelectShoppingCart")
+    @ResponseBody
+    public List<Product> SelectShoppingCart(Long shopId,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        ListOperations<String, Object> lo = redisTemplate.opsForList();
+        List<Product> productList=(List<Product>) lo.index("userId-"+member.getMemberId()+shopId, 0);
+        return productList;
+    }
+
+    /**
+     * 统计
+     * @param request
+     * @return
+     */
+    @RequestMapping("rankForProduct")
+    @ResponseBody
+    public RankShop rankForProduct(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        Long shopId=member.getMemberId();
+        Map<String,String> map=new HashMap<>();
+        RankShop rankShop=new RankShop();
+        try{
+            List<Product> products=productService.rankForProduct(shopId);
+            String day=orderService.rankDayPayForShop(shopId);
+            String month=orderService.rankMonthPayForShop(shopId);
+            rankShop.setRankDay(day);
+            rankShop.setRankMonth(month);
+            rankShop.setProduct(products);
+        }catch (NullPointerException e){
+            logger.info("空指针异常:"+e);
+        }
+
+        return rankShop;
+    };
+
+
+    /**
+     * 创建理发店会员(未生效,支付)
+     * @param request
+     * @param shopOrder
+     * @return
+     */
+    @RequestMapping("JoinBarberMember")
+    @ResponseBody
+        public Long hairVip(HttpServletRequest request, ShopOrder shopOrder){
+            HttpSession session=request.getSession();
+            Member member=(Member) session.getAttribute("Student");
+            if(productService.checkHairvip(member.getMemberId())){
+                return 0L;
+            }
+            //创建未生效的理发店会员信息
+            Hairvip hairvip=new Hairvip();
+            hairvip.setVipId(member.getMemberId());
+            hairvip.setHairvipNum("11");
+            hairvip.setIs(0);
+            hairvip.setHairvipName(member.getMemberName());
+            hairvip.setHairvipPhone(shopOrder.getUserPhone());
+            productService.hairInsert(hairvip);
+            SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
+            Date date=new Date();
+            String creatime=sdf.format(date);
+            shopOrder.setCreatTime(creatime);
+            shopOrder.setOrdersStatus("0");
+            Long int1= NumberID.nextId(port);
+            shopOrder.setOrdersId(int1);
+            shopOrder.setStuId(member.getMemberId());
+            BigDecimal total=new BigDecimal(100);
+            shopOrder.setOrderTotal(total);
+            logger.info("SopOrder:"+shopOrder);
+            orderService.VIPinsert(shopOrder);
+            return int1;
+    }
+
+    @RequestMapping("goVipHairOrder")
+    @ResponseBody
+    public int goVipHairOrder(ShopOrder shopOrder,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
+        Date date=new Date();
+        String creatime=sdf.format(date);
+        shopOrder.setOrdersStatus("4");
+        Long int1= NumberID.nextId(port);
+        shopOrder.setOrdersId(int1);
+        shopOrder.setStuId(member.getMemberId());
+        BigDecimal total=new BigDecimal(0);
+        shopOrder.setOrderTotal(total);
+        shopOrder.setCreatTime(creatime);
+        Hairvip hairvip=productService.selectHairvip(member.getMemberId());
+        String num=hairvip.getHairvipNum();
+        Hairvip vip=new Hairvip();
+        int oldnum=Integer.valueOf(num);
+        int newnum = oldnum-1;
+        vip.setHairvipNum(String.valueOf(newnum));
+        vip.setVipId(member.getMemberId());
+        productService.updateHair(vip);
+        return orderService.VIPinsert(shopOrder);
+    }
+
+    @RequestMapping("plusVipHairOrder")
+    @ResponseBody
+    public int plusVipHairOrder(HttpServletRequest request,String out_trade_no){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd");
+        Date date=new Date();
+        String creatime=sdf.format(date);
+        Hairvip hairvip=productService.selectHairvip(member.getMemberId());
+        String num=hairvip.getHairvipNum();
+        Hairvip vip=new Hairvip();
+        vip.setHairvipNum(num+"11");
+        vip.setVipId(member.getMemberId());
+        return productService.updateHair(vip);
+    }
+
+    @RequestMapping("selecthairVip")
+    @ResponseBody
+    public Hairvip selecthairVip(HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        Hairvip uservip=productService.selectHairvip(member.getMemberId());
+        return uservip;
+    }
+}
Index: market/src/main/java/cn/armylife/market/ServiceImpl/WechatServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/ServiceImpl/WechatServiceImpl.java	(date 1574214795198)
+++ market/src/main/java/cn/armylife/market/ServiceImpl/WechatServiceImpl.java	(date 1574214795198)
@@ -0,0 +1,64 @@
+package cn.armylife.market.ServiceImpl;
+
+import cn.armylife.market.Domain.WeChatUsers;
+import cn.armylife.market.Service.WechatService;
+import cn.armylife.market.Util.HttpGet;
+import com.alibaba.fastjson.JSONObject;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.HashMap;
+import java.util.Map;
+import java.util.logging.Logger;
+
+@Service
+public class WechatServiceImpl implements WechatService {
+    Logger logger=Logger.getLogger("WecechatService.service");
+
+    @Autowired
+    WeChatUsers weChatUsers;
+
+    @Override
+    public String getOpenId(String code) {
+        String result=null;
+        try {
+            String URL = "https://api.weixin.qq.com/sns/oauth2/access_token?grant_type=authorization_code";
+            String getDataStr = "&appid=" + weChatUsers.getAppId() + "&secret=" + weChatUsers.getAppSecret() + "&code="+code;
+            String str = HttpGet.HttpGet(URL, getDataStr);
+            JSONObject json= JSONObject.parseObject(str);
+            String openid=(String) json.get("openid");
+//            openid=json.toString();
+            if (openid!=null){
+                result=openid;
+            }else {
+                result="获取失败";
+            }
+
+        }catch (Exception e){
+            logger.info(e+"");
+        }
+        logger.info(result);
+        return result;
+    }
+
+    @Override
+    public Map<Integer, String> getUserInfo(String code) {
+        String URL = "https://api.weixin.qq.com/sns/oauth2/access_token?grant_type=authorization_code";
+        String getDataStr = "&appid=" + weChatUsers.getAppId() + "&secret=" + weChatUsers.getAppSecret() + "&code=" + code;
+        String str = HttpGet.HttpGet(URL, getDataStr);
+        JSONObject json = JSONObject.parseObject(str);
+        String access_token=(String) json.get("access_token");
+        String openid=(String) json.get("openid");
+        String URL2 = "https://api.weixin.qq.com/cgi-bin/user/info??";
+        String getDataStr2 = "&access_token=" + access_token + "&openid=" + openid+"&lang="+"zh_CN";
+        String str2 = HttpGet.HttpGet(URL2, getDataStr2);
+        JSONObject json2 = JSONObject.parseObject(str2);
+        String user1=(String) json2.get("headimgurl");//toString();
+        String user2=user1.replaceFirst("http://","https://");
+        Map<Integer,String> msg=new HashMap<>();
+        msg.put(1,user2);
+        msg.put(2,openid);
+        msg.put(3,str2);
+        return msg;
+    }
+}
Index: market/src/main/java/cn/armylife/market/ServiceImpl/OrderServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/ServiceImpl/OrderServiceImpl.java	(date 1576287875048)
+++ market/src/main/java/cn/armylife/market/ServiceImpl/OrderServiceImpl.java	(date 1576287875048)
@@ -0,0 +1,339 @@
+package cn.armylife.market.ServiceImpl;
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.market.Config.RedisDao;
+import cn.armylife.market.Feign.MemberService;
+import cn.armylife.market.Feign.PayMentsService;
+import cn.armylife.market.Mapper.*;
+import cn.armylife.market.Service.OrderService;
+import com.github.pagehelper.Page;
+import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.web.client.RestTemplate;
+
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+
+@Service
+public class OrderServiceImpl implements OrderService {
+
+    Logger logger= LoggerFactory.getLogger(OrderServiceImpl.class);
+
+    @Autowired
+    ShopOrderMapper shopOrderMapper;
+    @Autowired
+    ProductMapper productMapper;
+    @Autowired
+    OrderDetailMapper orderDetailMapper;
+    @Autowired DeliveryOrderMapper deliveryOrderMapper;
+    @Autowired
+    AfterOrderMapper afterOrderMapper;
+    @Autowired
+    PayMentsService payMentsService;
+    @Autowired
+    MemberService memberService;
+
+    @Autowired HairvipMapper hairvipMapper;
+
+
+    @Autowired
+    RedisDao redisDao;
+
+    @Autowired
+    RestTemplate restTemplate;
+
+    @HystrixCommand(fallbackMethod = "hiError")
+    public String hiService(String name) {
+        return restTemplate.getForObject("http://SERVICE-HI/hi?name="+name,String.class);
+    }
+
+    @Override
+    public int insert(ShopOrder shopOrder,List<Product> productLists,String orderExpress){
+        OrderDetail orderDetail=new OrderDetail();
+        Product product=new Product();
+        String productIds="";
+        String firstproduct="";
+        logger.info("orderExpress:"+orderExpress);
+        if (!orderExpress.equals("1")){
+        for (int i=0;i<productLists.size();i++) {
+            logger.info("执行获取商品");
+            product=productLists.get(i);
+            firstproduct=String.valueOf(productLists.get(0).getProductId());
+            orderDetail.setOrderDetailName(product.getProductName());
+            orderDetail.setOrderDetailPng(product.getProductAvator());
+            orderDetail.setOrderDetailTotal(product.getProductTotal());
+            orderDetail.setOrderId(shopOrder.getOrdersId());
+            orderDetail.setOrderDetailNum(Integer.valueOf(product.getOrderNum()));
+            productIds=productIds+","+product.getProductId();
+            orderDetailMapper.insert(orderDetail);
+        }}
+        shopOrder.setFirstProduct(firstproduct);
+        shopOrder.setProductId(productIds);
+        return shopOrderMapper.insert(shopOrder);
+    }
+
+    @Override
+    public int VIPinsert(ShopOrder shopOrder){
+        return shopOrderMapper.insert(shopOrder);
+    }
+
+    /**
+     * 查询用户的订单(可查询用户,商铺)
+     * @param shopOrder
+     * @return
+     */
+    public Page<ShopOrder> selectAllForMember(ShopOrder shopOrder){
+        return shopOrderMapper.selectAllForMember(shopOrder);
+    };
+
+    /**
+     * 可查询跑腿订单
+     * @param deliveryOrder
+     * @return
+     */
+    public Page<DeliveryOrder> selectAlldeliveryForMember(DeliveryOrder deliveryOrder){
+        return shopOrderMapper.selectAlldeliveryForMember(deliveryOrder);
+    };
+
+    /**
+     * 更新订单状态
+     * @param shopOrder
+     * @return
+     */
+    public int endOrders(ShopOrder shopOrder){
+        return shopOrderMapper.updateShopOrder(shopOrder);
+    };
+
+    /**
+     * 外卖结束订单
+     * @param orderID
+     * @return
+     */
+    public int orderFulfillment(Long orderID){
+        ShopOrder shopOrder=shopOrderMapper.selectOrder(orderID);
+
+        //获取商家Id,更新商家金额
+        Long shopId=shopOrder.getShopId();
+        Member shop=memberService.selectMemberforId(shopId);
+        BigDecimal oldAmount=shop.getMemberTotal();
+        BigDecimal addAmount=shopOrder.getOrderTotal();
+        BigDecimal newAmount=oldAmount.add(addAmount);
+        shopOrderMapper.orderFulfillment(newAmount,shopId);
+
+        //获取跑腿Id,更新跑腿金额
+        Long deliveryId=shopOrder.getDeliveryOrder().getDeliveryUserId();
+        Member delivery=memberService.selectMemberforId(deliveryId);
+        BigDecimal oldTotal=delivery.getMemberTotal();
+        BigDecimal addTotal=shopOrder.getDeliveryTotal();
+        BigDecimal newTotal=oldTotal.add(addTotal);
+        shopOrderMapper.orderFulfillment(newTotal,deliveryId);
+
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy/MM/dd hh:mm:ss");
+        ShopOrder order=new ShopOrder();
+        order.setOrdersId(orderID);
+        order.setCreatTime(sdf.format(new Date()));
+        order.setOrdersStatus("3");
+        return shopOrderMapper.updateShopOrder(order);
+    };
+
+    /**
+     * 通过orderid查找订单
+     * @param orderId
+     * @return
+     */
+    @Override
+    public ShopOrder selectOrder(Long orderId){
+        ShopOrder shopOrder=shopOrderMapper.selectOrder(orderId);
+        AfterOrder afterOrder=afterOrderMapper.SelectAfterOrder(orderId);
+            if (afterOrder!=null) {
+                shopOrder.setAfterOrder(afterOrder);
+            }
+        return shopOrder;
+    };
+
+    /**
+     * 在订单结算后,增加物品,新建子订单
+     * @param afterOrder
+     * @return
+     */
+    public int AddAfterOrder(AfterOrder afterOrder){
+        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd hh-mm-ss");
+        Date date=new Date();
+        String creatTime=sdf.format(date);
+        afterOrder.setCreatTime(creatTime);
+        return afterOrderMapper.insert(afterOrder);
+    };
+
+    /**
+     * 查询子订单
+     * @param ordersId
+     * @return
+     */
+    public AfterOrder SelectAfterOrder(Long ordersId){
+        AfterOrder afterOrder=afterOrderMapper.SelectAfterOrder(ordersId);
+        return afterOrder;
+    };
+
+
+    /**
+     * 可查询跑腿订单
+     * @return
+     */
+    public Page<DeliveryOrder> selectAlldelivery(){
+        return shopOrderMapper.selectAlldelivery();
+    };
+
+    /**
+     * 得到当前商铺排队人数
+     * @return
+     */
+    public int getShopPeople(String shopId){
+        String number=redisDao.getValue(shopId);
+        return Integer.valueOf(number);
+    };
+    //增加店铺排队人数
+    public void upShopPeople(String shopId){
+        String number=redisDao.getValue(shopId);
+        int num=Integer.valueOf(number)+1;
+        redisDao.setKey(shopId,String.valueOf(num));
+    };
+    //减少店铺排队人数
+    public void downShopPeople(String shopId){
+        String number=redisDao.getValue(shopId);
+        int num=Integer.valueOf(number)-1;
+        redisDao.setKey(shopId,String.valueOf(num));
+    };
+
+    /**
+     * 月销
+     * @param shopId
+     * @return
+     */
+    public String rankMonthPayForShop(Long shopId){
+        return shopOrderMapper.rankMonthPayForShop(shopId);
+    };
+
+    /**
+     * 日销
+     * @param shopId
+     * @return
+     */
+    public String rankDayPayForShop(Long shopId){
+       return shopOrderMapper.rankDayPayForShop(shopId);
+    };
+
+    /**
+     * 确认接单
+     * @param orderId
+     * @return
+     */
+    public int confirmOrder(Long orderId){
+        return shopOrderMapper.confirmOrder(orderId);
+    };
+
+    /**
+     * 拒绝退款
+     * @param orderId
+     * @return
+     */
+    public int rejectRefund(Long orderId){
+        return shopOrderMapper.rejectRefund(orderId);
+    };
+
+    /**
+     * 确认退款
+     * @param orderId
+     * @return
+     */
+    public int confirmRefund(Long orderId){
+        ShopOrder shopOrder=shopOrderMapper.selectOrder(orderId);
+        BigDecimal totalfee=shopOrder.getOrderTotal().add(shopOrder.getDeliveryTotal());
+        String desc="订单退款";
+        String refundOrderId=String.valueOf(shopOrder.getOrdersId());
+        BigDecimal orderTotal=shopOrder.getOrderTotal().add(shopOrder.getDeliveryTotal());
+        String order=String.valueOf(shopOrder.getOrdersId());
+        String total=orderTotal.toString();
+        String body="申请退款";
+        Payments payments=payMentsService.selectPaments(orderId);
+        int msg=1;
+        switch (payments.getPayApp()){
+            case "1":
+                msg=payMentsService.Alipayrefund(order,desc,total,body);
+                break;
+            case "2":
+                msg=payMentsService.WechatPayTransfer(Long.getLong(order),totalfee,orderTotal,"取消订单");
+                break;
+        }
+        if (msg==0){
+            return 0;
+        }
+        if (payMentsService.Alipayrefund(refundOrderId,desc,total,body)==0){
+            return 0;
+        };
+        return shopOrderMapper.confirmOrder(orderId);
+    };
+
+    /**
+     * 餐后结算
+     * @param orderId
+     * @return
+     */
+    public int afterOrderRefund(Long orderId, BigDecimal total){
+        ShopOrder shopOrder=shopOrderMapper.selectOrder(orderId);
+        Member member=shopOrder.getMember();
+        BigDecimal totalfee=shopOrder.getOrderTotal().add(shopOrder.getDeliveryTotal());
+        Payments payments=payMentsService.selectPaments(orderId);
+        String order=String.valueOf(orderId);
+        String desc="订单退款";
+        String body="餐后结算";
+        String amount=total.toString();
+        int msg=1;
+        switch (payments.getPayApp()){
+            case "1":
+                msg=payMentsService.Alipayrefund(order,desc,amount,body);
+                break;
+            case "2":
+                msg=payMentsService.WechatPayTransfer(Long.getLong(order),totalfee,total,"餐后结算");
+                break;
+        }
+        if (msg==0){
+            return 0;
+        }
+        ShopOrder endOrder=new ShopOrder();
+        SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
+        Date date=new Date();
+        endOrder.setEndTime(date);
+        endOrder.setOrdersId(orderId);
+        DeliveryOrder deliveryOrder=deliveryOrderMapper.selectDeliveryFororderId(orderId);
+        Member delivery=memberService.selectMemberforId(deliveryOrder.getDeliveryUserId());
+        BigDecimal deliverytotal=delivery.getMemberTotal();
+        BigDecimal newtotel=deliverytotal.add(total);
+        Member newdelivery=new Member();
+        newdelivery.setMemberId(delivery.getMemberId());
+        newdelivery.setMemberTotal(newtotel);
+        int message=memberService.updateMember(newdelivery);
+        return shopOrderMapper.endOrder(shopOrder);
+
+    };
+
+    @Override
+    public int orderdatailinsert(OrderDetail record){
+        return orderDetailMapper.insert(record);
+    };
+
+    /**
+     * 查询已结束订单
+     * @param stuId
+     * @return
+     */
+    @Override
+    public Page<ShopOrder> selectEndOrder(Long stuId){
+        return shopOrderMapper.selectEndOrder(stuId);
+    };
+
+}
Index: market/src/main/java/cn/armylife/market/ServiceImpl/ProductServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/ServiceImpl/ProductServiceImpl.java	(date 1575795845067)
+++ market/src/main/java/cn/armylife/market/ServiceImpl/ProductServiceImpl.java	(date 1575795845067)
@@ -0,0 +1,191 @@
+package cn.armylife.market.ServiceImpl;
+
+import cn.armylife.common.Domain.*;
+import cn.armylife.market.Mapper.*;
+import cn.armylife.market.Service.ProductService;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.data.redis.core.ListOperations;
+import org.springframework.data.redis.core.RedisTemplate;
+import org.springframework.stereotype.Service;
+
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+public class ProductServiceImpl implements ProductService {
+
+
+    Logger logger= LoggerFactory.getLogger(ProductServiceImpl.class);
+
+    @Autowired
+    RedisTemplate redisTemplate;
+
+    @Autowired private ProductMapper productMapper;
+    @Autowired private ShopTagMapper shopTagMapper;
+    @Autowired private ProductDetailMapper productDetailMapper;
+    @Autowired private HairvipMapper hairvipMapper;
+    @Autowired
+    OrderDetailMapper orderDetailMapper;
+
+    /**
+     * 查询全部商品
+     * @param product
+     * @return
+     */
+    @Override
+    public List<Product> selectProductForShop(Product product){
+        return productMapper.selectProductForShop(product);
+    };
+
+    /**
+     * 商品下架
+     * @param productId
+     * @return
+     */
+    @Override
+    public int offShelves(Long productId){
+        return productMapper.offShelves(productId);
+    };
+
+    /**
+     * 商品信息
+     * @param product
+     * @return
+     */
+    @Override
+    public Product selectProductNews(String product){
+        return productMapper.selectProductNews(product);
+    };
+
+
+    /**
+     * 上架商品
+     * @param record
+     * @return
+     */
+    @Override
+    public int insert(Product record){
+        return productMapper.insert(record);
+    };
+
+
+    @Override
+    public int updateProducts(Product product){
+        return productMapper.updateProducts(product);
+    };
+
+    /**
+     * 添加商铺分类
+     * @param record
+     * @return
+     */
+    public int TagInsert(ShopTag record){
+        return shopTagMapper.insert(record);
+    };
+
+    /**
+     * 查询店铺商品分类
+     * @param shopId
+     * @return
+     */
+    public List<ShopTag> selectShopTag(Long shopId){
+        return shopTagMapper.FindShopTag(shopId);
+    };
+
+    /**
+     * 添加商品详细信息
+     * @param record
+     * @return
+     */
+    public int detailinsert(ProductDetail record){
+        return productDetailMapper.insert(record);
+    };
+
+    /**
+     * 查询店铺所有商品
+     * @param shopId
+     * @return
+     */
+    public List<ShopTag> selectShopProduct(Long shopId){
+        return shopTagMapper.selectShopProduct(shopId);
+    };
+
+    /**
+     * 当日商品统计
+     * @param shopId
+     * @return
+     */
+    public List<Product> rankForProduct(Long shopId){
+        List<Product> products=productMapper.rankForProduct(shopId);
+        return products;
+    };
+
+    /**
+     *
+     * @param productIds
+     * @param shopId
+     * @param total
+     * @param member
+     * @return
+     */
+    public int AddShoppingCarts(String[] productIds, String shopId, String total, Long member){
+        Product product=new Product();
+        List<Product> lp=new ArrayList<>();
+        for (int i=0;i<productIds.length;i++) {
+            String[] str2 = productIds[i].split("\\*");
+            product = productMapper.selectProductNews(str2[0]);
+            product.setOrderNum(str2[1]);
+            logger.info(product.toString());
+            lp.add(product);
+        }
+        ListOperations<String, Object> lo = redisTemplate.opsForList();
+        lo.leftPop("userId-" +member+shopId);
+        lo.rightPush("userId-" +member+shopId,lp);
+        return 1;
+    }
+
+
+
+    /**
+     * 理发店会员加入
+     * @param record
+     * @return
+     */
+    public int hairInsert(Hairvip record){
+        return hairvipMapper.insert(record);
+    };
+
+    /**
+     * 是否有会员信息
+     * @param memberId
+     * @return
+     */
+    public boolean checkHairvip(long memberId){
+        Hairvip hairvip= hairvipMapper.selectHairvip(memberId);
+        if (hairvip==null){
+            return false;
+        }
+        return true;
+    };
+
+    public Hairvip selectHairvip(long memberId){
+       return hairvipMapper.selectHairvip(memberId);
+    };
+
+
+
+    /**
+     * 续费会员
+     * @param hairvip
+     * @return
+     */
+    public int updateHair(Hairvip hairvip){
+        return hairvipMapper.updateHair(hairvip);
+    };
+
+    public int orderdetailinsert(OrderDetail record){
+        return orderDetailMapper.insert(record);
+    };
+}
Index: market/src/main/java/cn/armylife/market/ServiceHysrix/MemberSerivceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/ServiceHysrix/MemberSerivceHystrix.java	(date 1575468081048)
+++ market/src/main/java/cn/armylife/market/ServiceHysrix/MemberSerivceHystrix.java	(date 1575468081048)
@@ -0,0 +1,20 @@
+package cn.armylife.market.ServiceHysrix;++import cn.armylife.common.Domain.Member;+import cn.armylife.market.Feign.MemberService;+import org.springframework.stereotype.Component;+import org.springframework.web.bind.annotation.RequestParam;++@Component+public class MemberSerivceHystrix implements MemberService {++    @Override+    public Member selectMemberforId(Long memberId) {+        return null;+    }++    @Override+    public int updateMember(Member member){+        return 0;+    };+}Index: market/src/main/java/cn/armylife/market/ServiceHysrix/PayMentsServiceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/java/cn/armylife/market/ServiceHysrix/PayMentsServiceHystrix.java	(date 1575477735957)
+++ market/src/main/java/cn/armylife/market/ServiceHysrix/PayMentsServiceHystrix.java	(date 1575477735957)
@@ -0,0 +1,24 @@
+package cn.armylife.market.ServiceHysrix;
+
+import cn.armylife.common.Domain.Payments;
+import cn.armylife.market.Feign.PayMentsService;
+
+import java.math.BigDecimal;
+
+public class PayMentsServiceHystrix implements PayMentsService {
+
+    @Override
+    public int Alipayrefund(String WIDout_trade_no, String WIDsubject,String WIDrefund_amount,String WIDbody){
+        return 0;
+    };
+
+    @Override
+    public int WechatPayTransfer(Long orderCardId, BigDecimal refundfree, BigDecimal totalfree, String desc){
+        return 0;
+    }
+
+    @Override
+    public Payments selectPaments( Long orderId){
+        return null;
+    };
+}
Index: market/src/main/resources/bootstrap.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- market/src/main/resources/bootstrap.properties	(date 1575012957625)
+++ market/src/main/resources/bootstrap.properties	(date 1575012957625)
@@ -0,0 +1,4 @@
+spring.cloud.nacos.config.server-addr=118.31.121.141:8848+spring.cloud.nacos.config.prefix=service+spring.cloud.nacos.config.file-extension=yaml+spring.profiles.active=dev
\ No newline at end of file
Index: market/src/main/resources/Mapper/HairvipMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/HairvipMapper.xml	(date 1575687953807)
+++ market/src/main/resources/Mapper/HairvipMapper.xml	(date 1575687953807)
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.HairvipMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Hairvip">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="hairvip_id" jdbcType="BIGINT" property="hairvipId" />
+    <result column="vip_id" jdbcType="BIGINT" property="vipId" />
+    <result column="hairvip_name" jdbcType="VARCHAR" property="hairvipName" />
+    <result column="hairvip_phone" jdbcType="VARCHAR" property="hairvipPhone" />
+    <result column="hairvip_num" jdbcType="VARCHAR" property="hairvipNum" />
+    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
+    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
+    <result column="is" jdbcType="INTEGER" property="is" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Hairvip">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="hairvipId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into hairvip (vip_id, hairvip_name, hairvip_phone, 
+      hairvip_num, creat_time, end_time, 
+      `is`)
+    values (#{vipId,jdbcType=BIGINT}, #{hairvipName,jdbcType=VARCHAR}, #{hairvipPhone,jdbcType=VARCHAR}, 
+      #{hairvipNum,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
+      #{is,jdbcType=INTEGER})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select hairvip_id, vip_id, hairvip_name, hairvip_phone, hairvip_num, creat_time, 
+    end_time, `is`
+    from hairvip
+  </select>
+
+    <select id="selectHairvip" parameterType="java.lang.Long" resultMap="BaseResultMap">
+        select * from hairvip where vip_id=#{memerId}
+    </select>
+
+  <update id="updateHair" >
+    update hairvip set hairvip_num=#{hairvipNum} where vip_id=#{vipId}
+  </update>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/MemberMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/MemberMapper.xml	(date 1574238673036)
+++ market/src/main/resources/Mapper/MemberMapper.xml	(date 1574238673036)
@@ -0,0 +1,94 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.MemberMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Member">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+
+    <id column="member_id" property="memberId" jdbcType="INTEGER" />
+    <result column="member_type" property="memberType" jdbcType="VARCHAR" />
+    <result column="member_idcard" property="memberIdcard" jdbcType="VARCHAR" />
+    <result column="member_wechat" property="memberWechat" jdbcType="VARCHAR" />
+    <result column="member_avatar" property="memberAvatar" jdbcType="VARCHAR" />
+    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
+    <result column="member_nickname" property="memberNickname" jdbcType="VARCHAR" />
+    <result column="register_time" property="registerTime" jdbcType="VARCHAR" />
+    <result column="lastlogin_time" property="lastloginTime" jdbcType="VARCHAR" />
+    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
+    <result column="member_total" property="memberTotal" jdbcType="DECIMAL" />
+    <result column="member_status" property="memberStatus" jdbcType="INTEGER" />
+    <result column="member_password" property="memberPassword" jdbcType="VARCHAR" />
+    <result column="shop_status" property="shopStatus" jdbcType="INTEGER" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from member
+    where member_id = #{memberId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Member" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Integer" keyProperty="memberId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into member (member_type, member_idcard, member_wechat,
+    member_avatar, member_name, member_nickname,
+    register_time, lastlogin_time, member_phone,
+    member_total, member_status, member_password,
+    shop_status)
+    values (#{memberType,jdbcType=VARCHAR}, #{memberIdcard,jdbcType=VARCHAR}, #{memberWechat,jdbcType=VARCHAR},
+    #{memberAvatar,jdbcType=VARCHAR}, #{memberName,jdbcType=VARCHAR}, #{memberNickname,jdbcType=VARCHAR},
+    #{registerTime,jdbcType=VARCHAR}, #{lastloginTime,jdbcType=VARCHAR}, #{memberPhone,jdbcType=VARCHAR},
+    #{memberTotal,jdbcType=DECIMAL}, #{memberStatus,jdbcType=INTEGER}, #{memberPassword,jdbcType=VARCHAR},
+    #{shopStatus,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Member" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update member
+    set member_type = #{memberType,jdbcType=VARCHAR},
+    member_idcard = #{memberIdcard,jdbcType=VARCHAR},
+    member_wechat = #{memberWechat,jdbcType=VARCHAR},
+    member_avatar = #{memberAvatar,jdbcType=VARCHAR},
+    member_name = #{memberName,jdbcType=VARCHAR},
+    member_nickname = #{memberNickname,jdbcType=VARCHAR},
+    register_time = #{registerTime,jdbcType=VARCHAR},
+    lastlogin_time = #{lastloginTime,jdbcType=VARCHAR},
+    member_phone = #{memberPhone,jdbcType=VARCHAR},
+    member_total = #{memberTotal,jdbcType=DECIMAL},
+    member_status = #{memberStatus,jdbcType=INTEGER},
+    member_password = #{memberPassword,jdbcType=VARCHAR},
+    shop_status = #{shopStatus,jdbcType=INTEGER}
+    where member_id = #{memberId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select member_id, member_type, member_idcard, member_wechat, member_avatar, member_name,
+    member_nickname, register_time, lastlogin_time, member_phone, member_total, member_status,
+    member_password, shop_status
+    from member
+    where member_id = #{memberId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select member_id, member_type, member_idcard, member_wechat, member_avatar, member_name,
+    member_nickname, register_time, lastlogin_time, member_phone, member_total, member_status,
+    member_password, shop_status
+    from member
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/TransactionsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/TransactionsMapper.xml	(date 1574214330300)
+++ market/src/main/resources/Mapper/TransactionsMapper.xml	(date 1574214330300)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.TransactionsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="tranactions_id" jdbcType="INTEGER" property="tranactionsId" />
+    <result column="pay_total" jdbcType="REAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from transactions
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="tranactionsId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into transactions (pay_total, pay_desc)
+    values (#{payTotal,jdbcType=REAL}, #{payDesc,jdbcType=VARCHAR})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Transactions">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update transactions
+    set pay_total = #{payTotal,jdbcType=REAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR}
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select tranactions_id, pay_total, pay_desc
+    from transactions
+    where tranactions_id = #{tranactionsId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select tranactions_id, pay_total, pay_desc
+    from transactions
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/DeliveryOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/DeliveryOrderMapper.xml	(date 1575466906380)
+++ market/src/main/resources/Mapper/DeliveryOrderMapper.xml	(date 1575466906380)
@@ -0,0 +1,79 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.DeliveryOrderMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="delivery_orders_id" jdbcType="INTEGER" property="deliveryOrdersId" />
+    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
+    <result column="delivery_user_id" jdbcType="INTEGER" property="deliveryUserId" />
+    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
+    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
+    <result column="user_name" jdbcType="VARCHAR" property="userName" />
+    <result column="delivery_total" jdbcType="REAL" property="deliveryTotal" />
+    <result column="status" jdbcType="INTEGER" property="status" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from delivery_order
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="deliveryOrdersId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into delivery_order (orders_id, delivery_user_id, delivery_address, 
+      user_phone, user_name, delivery_total, 
+      `status`)
+    values (#{ordersId,jdbcType=INTEGER}, #{deliveryUserId,jdbcType=INTEGER}, #{deliveryAddress,jdbcType=VARCHAR}, 
+      #{userPhone,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{deliveryTotal,jdbcType=REAL}, 
+      #{status,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update delivery_order
+    set orders_id = #{ordersId,jdbcType=INTEGER},
+      delivery_user_id = #{deliveryUserId,jdbcType=INTEGER},
+      delivery_address = #{deliveryAddress,jdbcType=VARCHAR},
+      user_phone = #{userPhone,jdbcType=VARCHAR},
+      user_name = #{userName,jdbcType=VARCHAR},
+      delivery_total = #{deliveryTotal,jdbcType=REAL},
+      `status` = #{status,jdbcType=INTEGER}
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select delivery_orders_id, orders_id, delivery_user_id, delivery_address, user_phone, 
+    user_name, delivery_total, `status`
+    from delivery_order
+    where delivery_orders_id = #{deliveryOrdersId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select delivery_orders_id, orders_id, delivery_user_id, delivery_address, user_phone, 
+    user_name, delivery_total, `status`
+    from delivery_order
+  </select>
+
+  <select id="selectDeliveryFororderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * delivery_order where orders_id=#{orderId}
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/PaymentsMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575442263937)
+++ market/src/main/resources/Mapper/PaymentsMapper.xml	(date 1575442263937)
@@ -0,0 +1,99 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.PaymentsMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="payments_id" jdbcType="INTEGER" property="paymentsId" />
+    <result column="pay_name" jdbcType="INTEGER" property="payName" />
+    <result column="receiv_name" jdbcType="INTEGER" property="receivName" />
+    <result column="pay_total" jdbcType="REAL" property="payTotal" />
+    <result column="pay_desc" jdbcType="VARCHAR" property="payDesc" />
+    <result column="pay_status" jdbcType="VARCHAR" property="payStatus" />
+    <result column="pay_order" jdbcType="INTEGER" property="payOrder" />
+    <result column="pay_number" jdbcType="VARCHAR" property="payNumber" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <result column="end_time" jdbcType="VARCHAR" property="endTime" />
+    <result column="pay_refund" jdbcType="INTEGER" property="payRefund" />
+    <result column="refund_desc" jdbcType="VARCHAR" property="refundDesc" />
+    <result column="refund_total" jdbcType="REAL" property="refundTotal" />
+    <result column="refuns_time" jdbcType="VARCHAR" property="refunsTime" />
+    <result column="refunds_bumber" jdbcType="VARCHAR" property="refundsBumber" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from payments
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="paymentsId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into payments (pay_name, receiv_name, pay_total, 
+      pay_desc, pay_status, pay_order, 
+      pay_number, creat_time, end_time, 
+      pay_refund, refund_desc, refund_total, 
+      refuns_time, refunds_bumber)
+    values (#{payName,jdbcType=INTEGER}, #{receivName,jdbcType=INTEGER}, #{payTotal,jdbcType=REAL}, 
+      #{payDesc,jdbcType=VARCHAR}, #{payStatus,jdbcType=VARCHAR}, #{payOrder,jdbcType=INTEGER}, 
+      #{payNumber,jdbcType=VARCHAR}, #{creatTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, 
+      #{payRefund,jdbcType=INTEGER}, #{refundDesc,jdbcType=VARCHAR}, #{refundTotal,jdbcType=REAL}, 
+      #{refunsTime,jdbcType=VARCHAR}, #{refundsBumber,jdbcType=VARCHAR})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.Payments">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update payments
+    set pay_name = #{payName,jdbcType=INTEGER},
+      receiv_name = #{receivName,jdbcType=INTEGER},
+      pay_total = #{payTotal,jdbcType=REAL},
+      pay_desc = #{payDesc,jdbcType=VARCHAR},
+      pay_status = #{payStatus,jdbcType=VARCHAR},
+      pay_order = #{payOrder,jdbcType=INTEGER},
+      pay_number = #{payNumber,jdbcType=VARCHAR},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      end_time = #{endTime,jdbcType=VARCHAR},
+      pay_refund = #{payRefund,jdbcType=INTEGER},
+      refund_desc = #{refundDesc,jdbcType=VARCHAR},
+      refund_total = #{refundTotal,jdbcType=REAL},
+      refuns_time = #{refunsTime,jdbcType=VARCHAR},
+      refunds_bumber = #{refundsBumber,jdbcType=VARCHAR}
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, pay_order, 
+    pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, refuns_time, 
+    refunds_bumber
+    from payments
+    where payments_id = #{paymentsId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select payments_id, pay_name, receiv_name, pay_total, pay_desc, pay_status, pay_order, 
+    pay_number, creat_time, end_time, pay_refund, refund_desc, refund_total, refuns_time, 
+    refunds_bumber
+    from payments
+  </select>
+
+  <select id="rankPayForShop" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select count(total) from payments where receiv_name=#{shopId} order by end_time desc
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/ShopOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/ShopOrderMapper.xml	(date 1576287211327)
+++ market/src/main/resources/Mapper/ShopOrderMapper.xml	(date 1576287211327)
@@ -0,0 +1,290 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.ShopOrderMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.ShopOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+    <result column="orders_type" property="ordersType" jdbcType="INTEGER" />
+    <result column="orders_people" property="ordersPeople" jdbcType="INTEGER" />
+    <result column="appintment" property="appintment" jdbcType="VARCHAR" />
+    <result column="product_id" property="productId" jdbcType="VARCHAR" />
+    <result column="orders_reserve" property="ordersReserve" jdbcType="VARCHAR" />
+    <result column="reserve_number" property="reserveNumber" jdbcType="INTEGER" />
+    <result column="shop_id" property="shopId" jdbcType="INTEGER" />
+    <result column="stu_id" property="stuId" jdbcType="INTEGER" />
+    <result column="isdelivery" property="isdelivery" jdbcType="INTEGER" />
+    <result column="orders_address" property="ordersAddress" jdbcType="VARCHAR" />
+    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
+    <result column="orders_desc" property="ordersDesc" jdbcType="VARCHAR" />
+    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
+    <result column="orders_status" property="ordersStatus" jdbcType="VARCHAR" />
+    <result column="order_total" property="orderTotal" jdbcType="DECIMAL" />
+    <result column="delivery_total" property="deliveryTotal" jdbcType="DECIMAL" />
+    <result column="avator" property="avator" jdbcType="VARCHAR" />
+    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
+    <result column="isexpress" property="isexpress" jdbcType="VARCHAR" />
+    <association property="afterOrder" javaType="cn.armylife.common.Domain.AfterOrder">
+      <result column="after_order_id" property="afterOrderId" jdbcType="BIGINT" />
+      <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+      <result column="product_id" property="productId" jdbcType="BIGINT" />
+      <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+      <result column="after_order_total" property="afterOrderTotal" jdbcType="DECIMAL" />
+    </association>
+    <association property="member" javaType="cn.armylife.common.Domain.Member">
+      <result column="member_id" jdbcType="BIGINT" property="memberId" />
+      <result column="member_type" jdbcType="VARCHAR" property="memberType" />
+      <result column="member_idcard" jdbcType="VARCHAR" property="memberIdcard" />
+      <result column="member_wechat" jdbcType="VARCHAR" property="memberWechat" />
+      <result column="member_wechat_token" jdbcType="VARCHAR" property="memberWechatToken" />
+      <result column="member_alinumber" jdbcType="VARCHAR" property="memberAlinumber" />
+      <result column="member_ali_token" jdbcType="VARCHAR" property="memberAliToken" />
+      <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar" />
+      <result column="member_name" jdbcType="VARCHAR" property="memberName" />
+      <result column="member_nickname" jdbcType="VARCHAR" property="memberNickname" />
+      <result column="register_time" jdbcType="VARCHAR" property="registerTime" />
+      <result column="lastlogin_time" jdbcType="VARCHAR" property="lastloginTime" />
+      <result column="member_phone" jdbcType="VARCHAR" property="memberPhone" />
+      <result column="member_total" jdbcType="DECIMAL" property="memberTotal" />
+      <result column="member_status" jdbcType="INTEGER" property="memberStatus" />
+      <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
+      <result column="shop_status" jdbcType="INTEGER" property="shopStatus" />
+      <result column="alid" jdbcType="INTEGER" property="alid" />
+      <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
+      <result column="isHot" jdbcType="INTEGER" property="isHot" />
+      <result column="armylife" jdbcType="INTEGER" property="armylife" />
+    </association>
+    <collection property="orderDetail" ofType="cn.armylife.common.Domain.OrderDetail">
+      <result column="order_detail_id" jdbcType="BIGINT" property="orderDetailId" />
+      <result column="order_id" jdbcType="BIGINT" property="orderId" />
+      <result column="order_detail_name" jdbcType="VARCHAR" property="orderDetailName" />
+      <result column="order_detail_png" jdbcType="VARCHAR" property="orderDetailPng" />
+      <result column="order_detail_total" jdbcType="DECIMAL" property="orderDetailTotal" />
+      <result column="order_detail_num" jdbcType="INTEGER" property="orderDetailNum" />
+      <result column="order_express_name" jdbcType="VARCHAR" property="orderExpressName" />
+      <result column="order_express_phone" jdbcType="VARCHAR" property="orderExpressPhone" />
+      <result column="order_express_num" jdbcType="VARCHAR" property="orderExpressNum" />
+      <result column="order_express_desc" jdbcType="VARCHAR" property="orderExpressDesc" />
+    </collection>
+  </resultMap>
+  <resultMap id="deliveryMap" type="cn.armylife.common.Domain.DeliveryOrder">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="delivery_orders_id" jdbcType="INTEGER" property="deliveryOrdersId" />
+    <result column="orders_id" jdbcType="INTEGER" property="ordersId" />
+    <result column="delivery_user_id" jdbcType="INTEGER" property="deliveryUserId" />
+    <result column="delivery_address" jdbcType="VARCHAR" property="deliveryAddress" />
+    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
+    <result column="user_name" jdbcType="VARCHAR" property="userName" />
+    <result column="delivery_total" jdbcType="REAL" property="deliveryTotal" />
+    <result column="status" jdbcType="INTEGER" property="status" />
+    <association property="shopOrder" javaType="cn.armylife.common.Domain.ShopOrder">
+      <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+      <result column="orders_type" property="ordersType" jdbcType="INTEGER" />
+      <result column="orders_people" property="ordersPeople" jdbcType="INTEGER" />
+      <result column="appintment" property="appintment" jdbcType="VARCHAR" />
+      <result column="product_id" property="productId" jdbcType="VARCHAR" />
+      <result column="orders_reserve" property="ordersReserve" jdbcType="VARCHAR" />
+      <result column="reserve_number" property="reserveNumber" jdbcType="INTEGER" />
+      <result column="shop_id" property="shopId" jdbcType="INTEGER" />
+      <result column="stu_id" property="stuId" jdbcType="INTEGER" />
+      <result column="isdelivery" property="isdelivery" jdbcType="INTEGER" />
+      <result column="orders_address" property="ordersAddress" jdbcType="VARCHAR" />
+      <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
+      <result column="orders_desc" property="ordersDesc" jdbcType="VARCHAR" />
+      <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+      <result column="end_time" property="endTime" jdbcType="VARCHAR" />
+      <result column="orders_status" property="ordersStatus" jdbcType="VARCHAR" />
+      <result column="order_total" property="orderTotal" jdbcType="DECIMAL" />
+      <result column="delivery_total" property="deliveryTotal" jdbcType="DECIMAL" />
+      <result column="member_name" property="memberName" jdbcType="VARCHAR" />
+      <result column="isexpress" property="isexpress" jdbcType="VARCHAR" />
+    </association>
+    <association property="member" javaType="cn.armylife.common.Domain.Member" >
+      <result column="member_id" jdbcType="BIGINT" property="memberId" />
+      <result column="member_type" jdbcType="VARCHAR" property="memberType" />
+      <result column="member_idcard" jdbcType="VARCHAR" property="memberIdcard" />
+      <result column="member_wechat" jdbcType="VARCHAR" property="memberWechat" />
+      <result column="member_wechat_token" jdbcType="VARCHAR" property="memberWechatToken" />
+      <result column="member_alinumber" jdbcType="VARCHAR" property="memberAlinumber" />
+      <result column="member_ali_token" jdbcType="VARCHAR" property="memberAliToken" />
+      <result column="member_avatar" jdbcType="VARCHAR" property="memberAvatar" />
+      <result column="member_name" jdbcType="VARCHAR" property="memberName" />
+      <result column="member_nickname" jdbcType="VARCHAR" property="memberNickname" />
+      <result column="register_time" jdbcType="VARCHAR" property="registerTime" />
+      <result column="lastlogin_time" jdbcType="VARCHAR" property="lastloginTime" />
+      <result column="member_phone" jdbcType="VARCHAR" property="memberPhone" />
+      <result column="member_total" jdbcType="DECIMAL" property="memberTotal" />
+      <result column="member_status" jdbcType="INTEGER" property="memberStatus" />
+      <result column="member_password" jdbcType="VARCHAR" property="memberPassword" />
+      <result column="shop_status" jdbcType="INTEGER" property="shopStatus" />
+      <result column="alid" jdbcType="INTEGER" property="alid" />
+      <result column="shop_name" jdbcType="VARCHAR" property="shopName" />
+      <result column="isHot" jdbcType="INTEGER" property="isHot" />
+      <result column="isdeliver" jdbcType="INTEGER" property="isdeliver" />
+      <result column="armylife" jdbcType="INTEGER" property="armylife" />
+    </association>
+  </resultMap>
+
+
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from shop_order
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ShopOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="ordersId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into shop_order (orders_id,orders_type, orders_people, appintment,
+    product_id, orders_reserve, reserve_number,
+    shop_id, stu_id, isdelivery,
+    orders_address, user_phone, orders_desc,
+    creat_time, end_time, orders_status,
+    order_total, delivery_total,member_name)
+    values (#{ordersId,jdbcType=BIGINT},#{ordersType,jdbcType=INTEGER}, #{ordersPeople,jdbcType=INTEGER}, #{appintment,jdbcType=VARCHAR},
+    #{productId,jdbcType=VARCHAR}, #{ordersReserve,jdbcType=VARCHAR}, #{reserveNumber,jdbcType=INTEGER},
+    #{shopId,jdbcType=BIGINT}, #{stuId,jdbcType=BIGINT}, #{isdelivery,jdbcType=INTEGER},
+    #{ordersAddress,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, #{ordersDesc,jdbcType=VARCHAR},
+    #{creatTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{ordersStatus,jdbcType=VARCHAR},
+    #{orderTotal,jdbcType=DECIMAL}, #{deliveryTotal,jdbcType=DECIMAL}, #{memberName,jdbcType=VARCHAR})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.ShopOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update shop_order
+    set orders_type = #{ordersType,jdbcType=INTEGER},
+    product_id = #{productId,jdbcType=VARCHAR},
+    orders_reserve = #{ordersReserve,jdbcType=VARCHAR},
+    reserve_number = #{reserveNumber,jdbcType=INTEGER},
+    shop_id = #{shopId,jdbcType=INTEGER},
+    stu_id = #{stuId,jdbcType=INTEGER},
+    orders_address = #{ordersAddress,jdbcType=VARCHAR},
+    user_phone = #{userPhone,jdbcType=VARCHAR},
+    orders_desc = #{ordersDesc,jdbcType=VARCHAR},
+    creat_time = #{creatTime,jdbcType=VARCHAR},
+    end_time = #{endTime,jdbcType=VARCHAR},
+    orders_status = #{ordersStatus,jdbcType=VARCHAR},
+    order_total = #{orderTotal,jdbcType=REAL}
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select orders_id, orders_type, product_id, orders_reserve, reserve_number, shop_id,
+    stu_id, orders_address, user_phone, orders_desc, creat_time, end_time, orders_status,
+    order_total
+    from shop_order
+    where orders_id = #{ordersId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select orders_id, orders_type, product_id, orders_reserve, reserve_number, shop_id,
+    stu_id, orders_address, user_phone, orders_desc, creat_time, end_time, orders_status,
+    order_total
+    from shop_order
+  </select>
+
+  <select id="selectAllForMember" parameterType="cn.armylife.common.Domain.ShopOrder" resultMap="BaseResultMap">
+    SELECT *,p.product_avator as avator from shop_order so
+    left join product p on p.product_id=so.first_product
+    <if test="stuId!=null">
+     inner join member m on m.member_id=so.shop_id where so.stu_id=#{stuId}
+    </if>
+    <if test="shopId!=null">
+      inner join member m on m.member_id=so.stu_id where so.shop_id=#{shopId}
+    </if>
+    <if test="ordersStatus!=null" >
+      and so.orders_status=#{ordersStatus}
+    </if>
+  </select>
+  
+  <select id="selectAlldeliveryForMember" parameterType="cn.armylife.common.Domain.DeliveryOrder" resultMap="deliveryMap">
+    select *, from shop_order so
+     inner join delivery_order do on do.orders_id=so.orders_id
+     inner join member m  on m.member_id=so.shop_id
+     where delivery_user_id=#{deliveryUserId}
+  </select>
+  <select id="selectAlldelivery" resultMap="BaseResultMap">
+    select * from shop_order so inner join member m on m.member_id=so.shop_id  where isdelivery=1
+  </select>
+
+  <update id="updateShopOrder" >
+    UPDATE shop_order
+    <set>
+        <if test="ordersPeople!=null">
+            orders_people=#{ordersPeople}
+        </if>
+      <if test="ordersStatus!=null">
+        orders_status=#{ordersStatus},
+      </if>
+      <if test="creatTime!=null">
+        creat_time=#{creatTime},
+      </if>
+    </set>
+    where orders_id=#{ordersId}
+  </update>
+
+  <select id="selectOrder" resultMap="BaseResultMap" parameterType="java.lang.Long">
+   select * from shop_order so
+    inner join after_order ao on ao.orders_id=so.orders_id
+   inner join order_detail od on so.orders_id=od.order_id
+   inner join member m on so.stu_id=m.member_id
+   where so.orders_id=#{orderId}
+  </select>
+<!--  -->
+  <select id="SelectOrderForState" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from shop_order so left join after_order ao on so.orders_id=ao.orders_id where
+  </select>
+<!--统计每月金额-->
+  <select id="rankMonthPayForShop" parameterType="java.lang.Long" resultType="java.lang.String">
+    select sum(order_total) from shop_order where shop_id=#{Shop} and TO_DAYS(NOW()) - TO_DAYS(end_time) <![CDATA[ <= 31]]>;
+  </select>
+<!--统计每天金额-->
+  <select id="rankDayPayForShop" parameterType="java.lang.Long" resultType="java.lang.String">
+    select sum(order_total) from shop_order where shop_id=#{Shop} and TO_DAYS(NOW()) - TO_DAYS(end_time) <![CDATA[ = 0]]>;
+  </select>
+<!--确认接单-->
+  <update id="confirmOrder" parameterType="java.lang.Long">
+    update shop_order set orders_status=3 where orders_id=#{orderId}
+  </update>
+<!--  拒绝退款-->
+  <update id="rejectRefund" parameterType="java.lang.Long">
+    update shop_order set is_refund=3 where orders_id=#{ordersId}
+  </update>
+  <!--  确认退款-->
+  <update id="confirmRefund" parameterType="java.lang.Long">
+    update shop_order set is_refund=1 where orders_id=#{ordersId}
+  </update>
+<!--  更新为已结束订单-->
+  <update id="endOrder" >
+    update shop_order set orders_status=6 and end_time=#{endTime} where orders_id=#{ordersId}
+  </update>
+<!--  查询已完成订单-->
+  <select id="selectEndOrder" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from shop_order where stu_id=#{stuId} and orders_status=6
+  </select>
+<!--  更新用户金额-->
+  <update id="orderFulfillment">
+    update member set member_total=#{memberTotal} where member_id=#{memberId}
+  </update>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/ShopTagMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/ShopTagMapper.xml	(date 1575366747755)
+++ market/src/main/resources/Mapper/ShopTagMapper.xml	(date 1575366747755)
@@ -0,0 +1,70 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.ShopTagMapper">
+  <resultMap id="ShopMap" type="cn.armylife.common.Domain.ShopTag">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="shop_tag_id" jdbcType="BIGINT" property="shopTagId" />
+    <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
+    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
+    <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+  </resultMap>
+  <resultMap id="ShopProductMap" type="cn.armylife.common.Domain.ShopTag">
+  <!--
+    WARNING - @mbggenerated
+    This element is automatically generated by MyBatis Generator, do not modify.
+  -->
+  <result column="shop_tag_id" jdbcType="BIGINT" property="shopTagId" />
+  <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
+  <result column="shop_id" jdbcType="BIGINT" property="shopId" />
+  <result column="creat_time" jdbcType="VARCHAR" property="creatTime" />
+    <collection property="product" ofType="cn.armylife.common.Domain.Product">
+      <id column="product_id" property="productId" jdbcType="BIGINT" />
+      <result column="shop_id" property="shopId" jdbcType="BIGINT" />
+      <result column="tag_id" property="tagId" jdbcType="BIGINT" />
+      <result column="product_total" property="productTotal" jdbcType="DECIMAL" />
+      <result column="product_name" property="productName" jdbcType="VARCHAR" />
+      <result column="product_type" property="productType" jdbcType="VARCHAR" />
+      <result column="product_desc" property="productDesc" jdbcType="VARCHAR" />
+      <result column="status" property="status" jdbcType="INTEGER" />
+      <result column="product_avator" property="productAvator" jdbcType="VARCHAR" />
+    </collection>
+</resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ShopTag">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="shopTagId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into shop_tag (tag_name, shop_id, creat_time
+      )
+    values (#{tagName,jdbcType=VARCHAR}, #{shopId,jdbcType=BIGINT}, #{creatTime,jdbcType=VARCHAR}
+      )
+  </insert>
+  <select id="selectAll" resultMap="ShopMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select shop_tag_id, tag_name, shop_id, creat_time
+    from shop_tag
+  </select>
+
+
+
+  <!--查询店铺商品分类-->
+  <select id="FindShopTag" parameterType="java.lang.Long" resultMap="ShopMap">
+    select * from shop_tag where shop_id=#{shopId}
+  </select>
+  
+  <select id="selectShopProduct" parameterType="java.lang.Long" resultMap="ShopProductMap">
+    SELECT * FROM shop_tag st
+    LEFT JOIN  product_detail pd ON st.shop_tag_id=pd.product_tag
+    LEFT JOIN product p on pd.product_id=p.product_id
+    WHERE st.shop_id=#{shopId} AND p.shop_id=#{shopId}
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/OrderDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/OrderDetailMapper.xml	(date 1575564779848)
+++ market/src/main/resources/Mapper/OrderDetailMapper.xml	(date 1575564779848)
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.market.Mapper.OrderDetailMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.OrderDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="order_detail_id" jdbcType="BIGINT" property="orderDetailId" />
+    <result column="order_id" jdbcType="BIGINT" property="orderId" />
+    <result column="order_detail_name" jdbcType="VARCHAR" property="orderDetailName" />
+    <result column="order_detail_png" jdbcType="VARCHAR" property="orderDetailPng" />
+    <result column="order_detail_total" jdbcType="DECIMAL" property="orderDetailTotal" />
+    <result column="order_detail_num" jdbcType="INTEGER" property="orderDetailNum" />
+    <result column="order_express_name" jdbcType="VARCHAR" property="orderExpressName" />
+    <result column="order_express_phone" jdbcType="VARCHAR" property="orderExpressPhone" />
+    <result column="order_express_num" jdbcType="VARCHAR" property="orderExpressNum" />
+    <result column="order_express_desc" jdbcType="VARCHAR" property="orderExpressDesc" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.OrderDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="orderDetailId" order="AFTER" resultType="java.lang.Long">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into order_detail (order_id, order_detail_name, order_detail_png,
+    order_detail_total, order_detail_num, order_express_name,
+    order_express_phone, order_express_num, order_express_desc
+    )
+    values (#{orderId,jdbcType=BIGINT}, #{orderDetailName,jdbcType=VARCHAR}, #{orderDetailPng,jdbcType=VARCHAR},
+    #{orderDetailTotal,jdbcType=DECIMAL}, #{orderDetailNum,jdbcType=INTEGER}, #{orderExpressName,jdbcType=VARCHAR},
+    #{orderExpressPhone,jdbcType=VARCHAR}, #{orderExpressNum,jdbcType=VARCHAR}, #{orderExpressDesc,jdbcType=VARCHAR}
+    )
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select order_detail_id, order_id, order_detail_name, order_detail_png, order_detail_total,
+    order_detail_num, order_express_name, order_express_phone, order_express_num, order_express_desc
+    from order_detail
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/ProductMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/ProductMapper.xml	(date 1575515193366)
+++ market/src/main/resources/Mapper/ProductMapper.xml	(date 1575515193366)
@@ -0,0 +1,96 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.market.Mapper.ProductMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.Product" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="shop_id" property="shopId" jdbcType="BIGINT" />
+    <result column="tag_id" property="tagId" jdbcType="BIGINT" />
+    <result column="product_total" property="productTotal" jdbcType="DECIMAL" />
+    <result column="product_name" property="productName" jdbcType="VARCHAR" />
+    <result column="product_type" property="productType" jdbcType="VARCHAR" />
+    <result column="product_desc" property="productDesc" jdbcType="VARCHAR" />
+    <result column="status" property="status" jdbcType="INTEGER" />
+    <result column="product_avator" property="productAvator" jdbcType="VARCHAR" />
+    <result column="day_num" property="dayNum" jdbcType="VARCHAR" />
+    <result column="month_num" property="monthNum" jdbcType="VARCHAR" />
+    <result column="dayTotal" property="dayTotal" jdbcType="VARCHAR" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.Product" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="productId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into product (shop_id, tag_id, product_total, 
+      product_name, product_type, product_desc, 
+      `status`, product_avator)
+    values (#{shopId,jdbcType=BIGINT}, #{tagId,jdbcType=BIGINT}, #{productTotal,jdbcType=DECIMAL}, 
+      #{productName,jdbcType=VARCHAR}, #{productType,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, 
+      #{status,jdbcType=INTEGER}, #{productAvator,jdbcType=VARCHAR})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select product_id, shop_id, tag_id, product_total, product_name, product_type, product_desc, 
+    `status`, product_avator
+    from product
+  </select>
+
+<!--  <select id="selectShop" parameterType="java.lang.Long" resultMap="">-->
+<!--    select * from member m inner in shop_tag st on m.member_id=st.shop_id where m.member_id=#{memberId}-->
+<!--  </select>-->
+
+  <select id="selectProductForShop" parameterType="cn.armylife.common.Domain.Product" resultMap="BaseResultMap">
+    select * from product where shop_id=#{shopId} and status=0
+  </select>
+
+  <update id="offShelves">
+    update product set status=1 where product_id=#{productId}
+  </update>
+
+  <select id="selectProductNews" parameterType="java.lang.String" resultMap="BaseResultMap">
+    select * from product where product_id =#{product}
+<!--    <foreach collection="array" index="index" item="product" open="(" separator="," close=")">-->
+<!--      #{product}-->
+<!--    </foreach>-->
+  </select>
+
+  <update id="updateProducts">
+    update product
+    <set>
+      <if test="product_name!=null">
+        product_name=#{productName}
+      </if>
+      <if test="product_type!=null">
+        ,product_type=#{productType}
+      </if>
+      <if test="product_desc!=null">
+        ,product_desc=#{productDesc}
+      </if>
+      <if test="status!=null">
+        status=#{status}
+      </if>
+      <if test="product_avator!=null">
+        product_avator=#{productAvator}
+      </if>
+      <if test="dayNum!=null">
+        day_num=#{dayNum}
+      </if>
+    </set>
+    where product_id=#{productId}
+  </update>
+
+  <select id="rankForProduct" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select product_name,day_num,product_total,product_total*day_num AS dayTotal from product where shop_id=6 order by day_num desc
+  </select>
+
+
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/ProductDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/ProductDetailMapper.xml	(date 1574214330336)
+++ market/src/main/resources/Mapper/ProductDetailMapper.xml	(date 1574214330336)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
+<mapper namespace="cn.armylife.market.Mapper.ProductDetailMapper">
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="product_detail_id" jdbcType="INTEGER" property="productDetailId" />
+    <result column="product_id" jdbcType="INTEGER" property="productId" />
+    <result column="product_tag" jdbcType="INTEGER" property="productTag" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from product_detail
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey keyProperty="productDetailId" order="AFTER" resultType="java.lang.Integer">
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into product_detail (product_id, product_tag)
+    values (#{productId,jdbcType=INTEGER}, #{productTag,jdbcType=INTEGER})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.ProductDetail">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update product_detail
+    set product_id = #{productId,jdbcType=INTEGER},
+      product_tag = #{productTag,jdbcType=INTEGER}
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </update>
+  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select product_detail_id, product_id, product_tag
+    from product_detail
+    where product_detail_id = #{productDetailId,jdbcType=INTEGER}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap">
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select product_detail_id, product_id, product_tag
+    from product_detail
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/AfterOrderDetailMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/AfterOrderDetailMapper.xml	(date 1575807747441)
+++ market/src/main/resources/Mapper/AfterOrderDetailMapper.xml	(date 1575807747441)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.market.Mapper.AfterOrderDetailMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.AfterOrderDetail" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <result column="after_order_detail_id" property="afterOrderDetailId" jdbcType="BIGINT" />
+    <result column="after_order_id" property="afterOrderId" jdbcType="BIGINT" />
+    <result column="after_order_name" property="afterOrderName" jdbcType="VARCHAR" />
+    <result column="after_order_num" property="afterOrderNum" jdbcType="VARCHAR" />
+    <result column="after_order_png" property="afterOrderPng" jdbcType="VARCHAR" />
+    <result column="after_order_total" property="afterOrderTotal" jdbcType="DECIMAL" />
+  </resultMap>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.AfterOrderDetail" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="afterOrderDetailId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into after_order_detail (after_order_id, after_order_name, after_order_num, 
+      after_order_png, after_order_total)
+    values (#{afterOrderId,jdbcType=BIGINT}, #{afterOrderName,jdbcType=VARCHAR}, #{afterOrderNum,jdbcType=VARCHAR}, 
+      #{afterOrderPng,jdbcType=VARCHAR}, #{afterOrderTotal,jdbcType=DECIMAL})
+  </insert>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_detail_id, after_order_id, after_order_name, after_order_num, 
+    after_order_png, after_order_total
+    from after_order_detail
+  </select>
+
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/AfterOrderMapper.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1575797727776)
+++ market/src/main/resources/Mapper/AfterOrderMapper.xml	(date 1575797727776)
@@ -0,0 +1,71 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
+<mapper namespace="cn.armylife.market.Mapper.AfterOrderMapper" >
+  <resultMap id="BaseResultMap" type="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <id column="after_order_id" property="afterOrderId" jdbcType="BIGINT" />
+    <result column="orders_id" property="ordersId" jdbcType="BIGINT" />
+    <result column="product_id" property="productId" jdbcType="BIGINT" />
+    <result column="creat_time" property="creatTime" jdbcType="VARCHAR" />
+    <result column="after_order_total" property="afterOrderTotal" jdbcType="DECIMAL" />
+  </resultMap>
+  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    delete from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </delete>
+  <insert id="insert" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    <selectKey resultType="java.lang.Long" keyProperty="afterOrderId" order="AFTER" >
+      SELECT LAST_INSERT_ID()
+    </selectKey>
+    insert into after_order (orders_id, product_id, creat_time, 
+      after_order_total)
+    values (#{ordersId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{creatTime,jdbcType=VARCHAR}, 
+      #{afterOrderTotal,jdbcType=DECIMAL})
+  </insert>
+  <update id="updateByPrimaryKey" parameterType="cn.armylife.common.Domain.AfterOrder" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    update after_order
+    set orders_id = #{ordersId,jdbcType=BIGINT},
+      product_id = #{productId,jdbcType=BIGINT},
+      creat_time = #{creatTime,jdbcType=VARCHAR},
+      after_order_total = #{afterOrderTotal,jdbcType=DECIMAL}
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </update>
+  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+    where after_order_id = #{afterOrderId,jdbcType=BIGINT}
+  </select>
+  <select id="selectAll" resultMap="BaseResultMap" >
+    <!--
+      WARNING - @mbggenerated
+      This element is automatically generated by MyBatis Generator, do not modify.
+    -->
+    select after_order_id, orders_id, product_id, creat_time, after_order_total
+    from after_order
+  </select>
+
+  <select id="SelectAfterOrder" parameterType="java.lang.Long" resultMap="BaseResultMap">
+    select * from after_order ao
+    left join after_order_detail aod on ao.after_order_id=aod.after_order_id
+    where ao.orders_id=#{ordersId}
+  </select>
+</mapper>
\ No newline at end of file
Index: market/src/main/resources/Mapper/config/sqlMapConfig.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
+++ market/src/main/resources/Mapper/config/sqlMapConfig.xml	(date 1564020878259)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="UTF-8" ?>
+<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
+<configuration>
+
+</configuration>
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Domain/WeChatUsers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Domain/WeChatUsers.java	(date 1574843450107)
+++ payments/src/main/java/cn/armylife/payments/Domain/WeChatUsers.java	(date 1574843450107)
@@ -0,0 +1,101 @@
+package cn.armylife.payments.Domain;++import org.springframework.boot.context.properties.ConfigurationProperties;+import org.springframework.context.annotation.PropertySource;+import org.springframework.stereotype.Component;++/**+ *+ * @author jiony+ *+ * @Description: 微信相关常量+ */+@Component+@ConfigurationProperties(prefix = "wechat.users")+@PropertySource(value = "classpath:application.yml")+public class WeChatUsers {+    /**+     * token+     */+    private String token;+    /**+     * app id+     */+    private String appId;+    /**+     * app secret+     */+    private String appSecret;+    /**+     * 静默授权回调地址+     */+    private String callBackSlientUrl;+    /**+     * 商户id+     */+    private String MCHID;+    /**+     * 异步回调地址+     */+    private String NOTIFYURL;+    /**+     * 微信统一下单地址+     */+    private String wxorder;++    //证书路径+//    public static final String SSLCERT_PATH = "apiclient_cert.p12";+   // public static final String SSLCERT_PATH = "E:\\javaPicture\\yezz\\apiclient_cert.p12";++    /**+     * key+     */+    private String KEY;+    public String getToken() {+        return token;+    }+    public void setToken(String token) {+        this.token = token;+    }+    public String getAppId() {+        return appId;+    }+    public void setAppId(String appId) {+        this.appId = appId;+    }+    public String getAppSecret() {+        return appSecret;+    }+    public void setAppSecret(String appSecret) {+        this.appSecret = appSecret;+    }+    public String getCallBackSlientUrl() {+        return callBackSlientUrl;+    }+    public void setCallBackSlientUrl(String callBackSlientUrl) {+        this.callBackSlientUrl = callBackSlientUrl;+    }+    public String getMCHID() {+        return MCHID;+    }+    public void setMCHID(String MCHID) {+        this.MCHID = MCHID;+    }+    public String getNOTIFYURL() {+        return NOTIFYURL;+    }+    public void setNOTIFYURL(String NOTIFYURL) {+        this.NOTIFYURL = NOTIFYURL;+    }+    public String getWxorder() {+        return wxorder;+    }+    public void setWxorder(String wxorder) {+        this.wxorder = wxorder;+    }+    public String getKEY() {+        return KEY;+    }+    public void setKEY(String KEY) {+        this.KEY = KEY;+    }}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Domain/WXtemplate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Domain/WXtemplate.java	(date 1574843450147)
+++ payments/src/main/java/cn/armylife/payments/Domain/WXtemplate.java	(date 1574843450147)
@@ -0,0 +1,85 @@
+package cn.armylife.payments.Domain;++public class WXtemplate {+    private String openid;+    private String first;+    private String key1;+    private String key2;+    private String key3;+    private String key4;+    private String remark1;+    private String template;+    private String url;++    public String getKey4() {+        return key4;+    }++    public void setKey4(String key4) {+        this.key4 = key4;+    }++    public String getOpenid() {+        return openid;+    }++    public void setOpenid(String openid) {+        this.openid = openid;+    }++    public String getFirst() {+        return first;+    }++    public void setFirst(String first) {+        this.first = first;+    }++    public String getKey1() {+        return key1;+    }++    public void setKey1(String key1) {+        this.key1 = key1;+    }++    public String getKey2() {+        return key2;+    }++    public void setKey2(String key2) {+        this.key2 = key2;+    }++    public String getKey3() {+        return key3;+    }++    public void setKey3(String key3) {+        this.key3 = key3;+    }++    public String getRemark1() {+        return remark1;+    }++    public void setRemark1(String remark1) {+        this.remark1 = remark1;+    }++    public String getTemplate() {+        return template;+    }++    public void setTemplate(String template) {+        this.template = template;+    }++    public String getUrl() {+        return url;+    }++    public void setUrl(String url) {+        this.url = url;+    }+}Index: payments/src/main/java/cn/armylife/payments/Domain/Alipay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Domain/Alipay.java	(date 1575556971321)
+++ payments/src/main/java/cn/armylife/payments/Domain/Alipay.java	(date 1575556971321)
@@ -0,0 +1,14 @@
+package cn.armylife.payments.Domain;
+
+public class Alipay {
+
+    private String num;
+
+    public String getNum() {
+        return num;
+    }
+
+    public void setNum(String num) {
+        this.num = num;
+    }
+}
Index: payments/src/main/java/cn/armylife/payments/Mapper/AfterOrderMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Mapper/AfterOrderMapper.java	(date 1575808042278)
+++ payments/src/main/java/cn/armylife/payments/Mapper/AfterOrderMapper.java	(date 1575808042278)
@@ -0,0 +1,51 @@
+package cn.armylife.payments.Mapper;
+
+import cn.armylife.common.Domain.AfterOrder;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+@Mapper
+public interface AfterOrderMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Long afterOrderId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int insert(AfterOrder record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    AfterOrder selectByPrimaryKey(Long afterOrderId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    List<AfterOrder> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table after_order
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(AfterOrder record);
+
+    int updateafterOrderForPay(AfterOrder afterOrder);
+}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Mapper/PaymentsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Mapper/PaymentsMapper.java	(date 1575465038126)
+++ payments/src/main/java/cn/armylife/payments/Mapper/PaymentsMapper.java	(date 1575465038126)
@@ -0,0 +1,79 @@
+package cn.armylife.payments.Mapper;
+
+import cn.armylife.common.Domain.Payments;
+import org.apache.ibatis.annotations.Mapper;
+
+import java.util.List;
+
+
+@Mapper
+public interface PaymentsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int deleteByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int insert(Payments record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    Payments selectByPrimaryKey(Integer paymentsId);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    List<Payments> selectAll();
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *
+     * @mbggenerated
+     */
+    int updateByPrimaryKey(Payments record);
+
+    /**
+     * 查询商铺收入金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectPayForShop(Long receivName);
+
+    /**
+     * 查询商铺退款金额
+     * @param receivName
+     * @return
+     */
+    Payments SelectRefundForShop(Long receivName);
+
+    /**
+     * 支付完成,更新支付数据
+     * @param payments
+     * @return
+     */
+    int updatePayMentsForCallback(Payments payments);
+
+    /**
+     * 查询支付记录(通过订单号)
+     * @param orderId
+     * @return
+     */
+    Payments selectPaments(Long orderId);
+
+}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Mapper/TransactionsMapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Mapper/TransactionsMapper.java	(date 1574843450134)
+++ payments/src/main/java/cn/armylife/payments/Mapper/TransactionsMapper.java	(date 1574843450134)
@@ -0,0 +1,23 @@
+package cn.armylife.payments.Mapper;
+
+import cn.armylife.common.Domain.Transactions;
+
+import java.util.List;
+
+public interface TransactionsMapper {
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    int insert(Transactions record);
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table transactions
+     *
+     * @mbggenerated
+     */
+    List<Transactions> selectAll();
+}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Hystrix/MarketServiceHystrix.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Hystrix/MarketServiceHystrix.java	(date 1575807142108)
+++ payments/src/main/java/cn/armylife/payments/Hystrix/MarketServiceHystrix.java	(date 1575807142108)
@@ -0,0 +1,26 @@
+package cn.armylife.payments.Hystrix;
+
+import cn.armylife.common.Domain.AfterOrder;
+import cn.armylife.common.Domain.ShopOrder;
+import cn.armylife.payments.FeignService.MarketService;
+import org.springframework.stereotype.Component;
+
+@Component
+public class MarketServiceHystrix implements MarketService {
+
+    @Override
+    public ShopOrder selectOrder(Long orderIds){
+        ShopOrder shopOrder=new ShopOrder();
+        return shopOrder;
+    };
+
+    @Override
+    public int plusVipHairOrder(String out_trade_no){
+        return 0;
+    };
+
+    @Override
+    public AfterOrder SelectAfterOrder(Long orderId){
+        return null;
+    };
+}
\ No newline at end of file
Index: payments/src/main/java/cn/armylife/payments/Controller/PayMentsController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/Controller/PayMentsController.java	(date 1575942379935)
+++ payments/src/main/java/cn/armylife/payments/Controller/PayMentsController.java	(date 1575942379935)
@@ -0,0 +1,451 @@
+package cn.armylife.payments.Controller;
+
+import cn.armylife.common.Config.AlipayConfig;
+import cn.armylife.common.Domain.*;
+import cn.armylife.payments.Domain.Alipay;
+import cn.armylife.payments.FeignService.MarketService;
+import cn.armylife.payments.FeignService.Payservice;
+import cn.armylife.payments.FeignService.integral;
+import cn.armylife.payments.Service.PayMentsService;
+import cn.armylife.payments.Service.TransactionsService;
+import cn.armylife.payments.Utils.MemberWXMyConfigUtil;
+import cn.armylife.payments.Utils.NumberID;
+import cn.armylife.payments.Utils.WXPayUtil;
+import com.alipay.api.AlipayApiException;
+import com.alipay.api.internal.util.AlipaySignature;
+import com.github.wxpay.sdk.WXPay;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Controller;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.ResponseBody;
+
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import javax.servlet.http.HttpSession;
+import java.io.IOException;
+import java.io.InputStream;
+import java.math.BigDecimal;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Iterator;
+import java.util.Map;
+import java.util.logging.Logger;
+
+@Controller
+public class PayMentsController {
+
+    @Autowired
+    MemberWXMyConfigUtil wxMyConfigUtil;
+
+    @Autowired
+    Payservice payservice;
+
+    @Autowired
+    PayMentsService payMentsService;
+
+    @Autowired
+    MarketService marketService;
+
+    @Autowired
+    integral integral;
+    @Autowired
+    TransactionsService transactionsService;
+
+    @Value("${server.port}")
+    int port;
+
+    Logger logger=Logger.getLogger("/PayMentsController.class");
+
+    /**
+     * 生成订单支付状态,向支付表插入支付记录
+     * @param payments
+     * @param request
+     * @return
+     */
+    @RequestMapping("EnableWechatPayForOrder")
+    @ResponseBody
+    public Map<String, String> EnableWechatPayForOrder(Payments payments,Long ordersId,String attach, HttpServletRequest request){
+        HttpSession session=request.getSession();
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd-HH/mm/ss");
+        Date date=new Date();
+        String creatTime=sdf.format(date);
+        Member member=(Member)session.getAttribute("Student");
+        ShopOrder shopOrder=marketService.selectOrder(ordersId);
+        if (shopOrder.getDeliveryTotal()!=null){
+            payments.setPayTotal(shopOrder.getOrderTotal().add(shopOrder.getDeliveryTotal()));
+        }
+        if(!attach.equals("3")){
+            payments.setPayApp("1");
+            payments.setPayTotal(shopOrder.getOrderTotal());
+            payments.setPayName(shopOrder.getStuId());
+            payments.setReceivName(shopOrder.getShopId());
+            payments.setPayName(member.getMemberId());
+            payments.setPayStatus("1");
+            payments.setCreatTime(creatTime);
+            payments.setPayDesc("订单支付");
+        }else {
+            AfterOrder afterOrder= marketService.SelectAfterOrder(ordersId);
+            payments.setPayApp("1");
+            payments.setPayTotal(afterOrder.getAfterOrderTotal());
+            payments.setPayName(shopOrder.getStuId());
+            payments.setReceivName(shopOrder.getShopId());
+            payments.setPayStatus("1");
+            payments.setCreatTime(creatTime);
+            payments.setPayDesc("订单支付");
+        }
+        Long id= NumberID.nextId(port);
+        payments.setPaymentsId(id);
+        String desc=payments.getPayDesc();
+        String total=String.valueOf(payments.getPayTotal());
+        payMentsService.insert(payments);
+        Map<String, String> result=payservice.order(desc,total,String.valueOf(id),attach);//返回调起支付所需数据
+        return result;
+    }
+
+    @RequestMapping("ShopWechatExtract")
+    @ResponseBody
+    public int ShopWechatExtract(HttpServletRequest request,String total){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        if (payservice.WechatExtract(member,total)==1){
+            return 1;
+        };
+        return 0;
+    }
+
+    @RequestMapping("DeliveryWechatExtract")
+    @ResponseBody
+    public int DeliveryWechatExtract(HttpServletRequest request,String total){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Delivery");
+        if (payservice.WechatExtract(member,total)==1){
+            return 1;
+        };
+        return 0;
+    }
+
+    @RequestMapping("/paycallback")
+    @ResponseBody
+    public Map<String, String> paycallback(HttpServletRequest request, HttpServletResponse response)throws Exception{
+        WXPay wxPay=null;
+        InputStream inputStream = null;
+        Map<String, String> notifyMap = new HashMap<String, String>();
+        try {
+            wxPay=new WXPay(wxMyConfigUtil);
+            inputStream = request.getInputStream();
+            String xml = WXPayUtil.inputStream2String(inputStream);
+//            String xml="123";
+            notifyMap = WXPayUtil.xmlToMap(xml);//将微信发的xml转map
+            //logger.info("支付系统返回支付结果"+xml);
+
+            if (wxPay.isPayResultNotifySignatureValid(notifyMap)){
+                if(notifyMap.get("return_code").equals("SUCCESS")){
+                    logger.info("return_code是："+notifyMap.get("return_code"));
+                    // 交易成功
+                    if(notifyMap.get("result_code").equals("SUCCESS")){
+                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd-HH/mm/ss");
+                        Date date=new Date();
+                        String creatTime=sdf.format(date);
+                        String transaction_id=notifyMap.get("transaction_id");
+                        String attach=notifyMap.get("attach");
+                        String out_trade_no=notifyMap.get("out_trade_no");
+                        String total_fee=notifyMap.get("total_fee");
+                        if (attach.equals("2")){
+                            marketService.plusVipHairOrder(out_trade_no);
+                        }
+                        else if(attach.equals("3")){
+                            AfterOrder afterOrder=new AfterOrder();
+                            afterOrder.setAfterOrderId(Long.valueOf(out_trade_no));
+                            afterOrder.setIsPay(1);
+                            payMentsService.updateafterOrderForPay(afterOrder);
+                        }
+                        if (!attach.equals("0")){
+                            integral.integralIncrease(Integer.valueOf(total_fee));
+                        }
+                        Payments payments=new Payments();
+                        payments.setPayNumber(transaction_id);
+                        payments.setPayStatus("2");
+                        payments.setEndTime(creatTime);
+                        payments.setPayApp("Wechat");
+                        payments.setPaymentsId(Long.valueOf(out_trade_no));
+                        payMentsService.updatePayMentsForCallback(payments);
+                    }
+                }else{
+                    // 交易失败的处理
+                    notifyMap.put("0","0");
+                    return notifyMap;
+                }
+            }else {
+                logger.info("签名失败"+notifyMap);
+
+            }
+
+            response.getWriter().write("<xml><return_code><![CDATA[SUCCESS]]></return_code></xml>"); //告知微信支付系统已收到消息
+            inputStream.close();
+        } catch (Exception e) {
+            // 异常的处理
+        }
+        return notifyMap;
+    }
+
+    @RequestMapping("AlipayCallback")
+    @ResponseBody
+    public Map<String, String> AlipayCallback(HttpServletRequest request, HttpServletResponse response) throws IOException, AlipayApiException {
+        response.setContentType("text/html;charset=utf-8");
+        response.reset();
+        //获取支付宝POST过来反馈信息
+        response.getOutputStream();
+
+        Map<String,String> params=new HashMap<>();
+        Map requestParams =request.getParameterMap();
+        for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
+            String name = (String) iter.next();
+            String[] values = (String[]) requestParams.get(name);
+            String valueStr = "";
+            for (int i = 0; i < values.length; i++) {
+                valueStr = (i == values.length - 1) ? valueStr + values[i]
+                        : valueStr + values[i] + ",";
+            }
+            //乱码解决，这段代码在出现乱码时使用。如果mysign和sign不相等也可以使用这段代码转化
+            //valueStr = new String(valueStr.getBytes("ISO-8859-1"), "gbk");
+            params.put(name, valueStr);
+        }
+
+        String trade_no = new String();
+        String total_amount = new String();
+        String trade_status = new String();
+        String out_trade_no = new String();
+        String passback_params=new String();
+        try{
+        //商户订单号
+        out_trade_no = new String(request.getParameter("out_trade_no").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info("商户订单号"+out_trade_no);
+        //支付宝交易号
+
+        trade_no = new String(request.getParameter("trade_no").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info(  "交易号"+trade_no);
+        total_amount = new String(request.getParameter("total_amount").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info(  "支付宝订单资金"+total_amount);
+        //交易状态
+        trade_status = new String(request.getParameter("trade_status").getBytes("ISO-8859-1"),"UTF-8");
+        logger.info("支付状态:"+trade_status);
+
+        passback_params=new String(request.getParameter("passback_params").getBytes("ISO-8859-1"),"UTF-8");
+    }catch (NullPointerException e){
+          logger.info("空指针异常:"+e);
+        }
+        boolean verify_result = AlipaySignature.rsaCheckV1(params, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.CHARSET, "RSA2");
+        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
+        Payments payments=new Payments();//创建支付订单数据
+        payments.setPayNumber(trade_no);
+        payments.setPaymentsId(Long.valueOf(out_trade_no));
+        payments.setPayStatus("2");
+        payments.setPayApp("2");
+        if (!trade_status.equals("TRADE_SUCCESS")){
+            return null;
+        }
+        logger.info("通过");
+        payMentsService.updatePayMentsForCallback(payments);
+        if (passback_params.equals("2")){
+            marketService.plusVipHairOrder(out_trade_no);
+        }
+        else if (passback_params.equals("3")){
+            AfterOrder afterOrder=new AfterOrder();
+            afterOrder.setAfterOrderId(Long.valueOf(out_trade_no));
+            afterOrder.setIsPay(1);
+            payMentsService.updateafterOrderForPay(afterOrder);
+        }
+        if (!passback_params.equals("0")){
+            integral.integralIncrease(Integer.valueOf(total_amount));
+        }
+        if (verify_result){
+            response.getOutputStream().println("success");	//请不要修改或删除
+            response.getOutputStream().close();
+        }else {
+            response.getOutputStream().println("fail");
+            return params;
+        }
+        return params;
+    }
+
+    @RequestMapping("Addtranctions")
+    @ResponseBody
+    public int Addtranctions(Transactions transactions){
+        SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
+        Date date=new Date();
+        String endtime=sdf.format(date);
+        transactions.setEndTime(endtime);
+        return transactionsService.insert(transactions);
+    }
+
+    @RequestMapping("AlipayRefundCallback")
+    @ResponseBody
+    public Map<String, String> AlipayRefundCallback(HttpServletRequest request, HttpServletResponse response) throws IOException, AlipayApiException {
+        response.setContentType("text/html;charset=utf-8");
+        response.reset();
+        //获取支付宝POST过来反馈信息
+        response.getOutputStream();
+
+        Map<String,String> params=new HashMap<>();
+        Map requestParams =request.getParameterMap();
+        for (Iterator iter = requestParams.keySet().iterator(); iter.hasNext();) {
+            String name = (String) iter.next();
+            String[] values = (String[]) requestParams.get(name);
+            String valueStr = "";
+            for (int i = 0; i < values.length; i++) {
+                valueStr = (i == values.length - 1) ? valueStr + values[i]
+                        : valueStr + values[i] + ",";
+            }
+            //乱码解决，这段代码在出现乱码时使用。如果mysign和sign不相等也可以使用这段代码转化
+            //valueStr = new String(valueStr.getBytes("ISO-8859-1"), "gbk");
+            params.put(name, valueStr);
+        }
+
+        String trade_no = new String();
+        String refund_fee = new String();
+        String fund_change = new String();
+        String out_trade_no = new String();
+        String buyer_logon_id=new String();
+        try{
+            //商户订单号
+            out_trade_no = new String(request.getParameter("out_trade_no").getBytes("ISO-8859-1"),"UTF-8");
+            logger.info("商户订单号"+out_trade_no);
+            //支付宝交易号
+            trade_no = new String(request.getParameter("trade_no").getBytes("ISO-8859-1"),"UTF-8");
+            logger.info(  "交易号"+trade_no);
+            //支付宝退款资金
+            refund_fee = new String(request.getParameter("refund_fee").getBytes("ISO-8859-1"),"UTF-8");
+            logger.info(  "支付宝退款资金"+refund_fee);
+            //交易状态
+            fund_change = new String(request.getParameter("fund_change").getBytes("ISO-8859-1"),"UTF-8");
+            //用户的登录id
+            buyer_logon_id=new String(request.getParameter("buyer_logon_id ").getBytes("ISO-8859-1"),"UTF-8");
+            logger.info("登录人Id:"+fund_change);
+
+        }catch (NullPointerException e){
+            logger.info("空指针异常:"+e);
+        }
+        boolean verify_result = AlipaySignature.rsaCheckV1(params, AlipayConfig.ALIPAY_PUBLIC_KEY, AlipayConfig.CHARSET, "RSA2");
+        SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//设置日期格式
+        Payments payments=new Payments();//创建支付订单数据
+        BigDecimal refund=new BigDecimal(refund_fee);
+        payments.setRefundsNumber(trade_no);
+        payments.setPaymentsId(Long.valueOf(out_trade_no));
+        payments.setRefundTotal(refund);
+        payments.setRefundDesc(buyer_logon_id);
+        payments.setPayRefund(1);
+        if (fund_change.equals("Y")){
+            logger.info("通过");
+            payMentsService.updatePayMentsForCallback(payments);
+        }
+        if (verify_result){
+            response.getOutputStream().println("success");	//请不要修改或删除
+            response.getOutputStream().close();
+        }else {
+            response.getOutputStream().println("fail");
+            return params;
+        }
+        return params;
+    }
+
+    @RequestMapping("AlipayTransfer")
+    @ResponseBody
+    public int transfer(String total,String number,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        BigDecimal amount= new BigDecimal(total);
+        return payservice.transfer(amount,number,"商家收入");
+    }
+
+    @RequestMapping("WechatPayTransfer")
+    @ResponseBody
+    public int WechatPayTransfer(Long orderCardId, BigDecimal refundfree,BigDecimal totalfree,String desc,HttpServletRequest request){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Shop");
+        Double total=totalfree.doubleValue();//订单金额
+        Double refund=refundfree.doubleValue();//退款金额
+        return payservice.orderrefund(orderCardId,refund,total,desc);
+    }
+
+    /**
+     * 商品
+     * @param ordersId
+     * @param request
+     * @return
+     */
+    @RequestMapping("AlipayPay")
+    @ResponseBody
+    public String AlipayPay(Long ordersId,HttpServletRequest request,String passback_params){
+        HttpSession session=request.getSession();
+        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd-HH/mm/ss");
+        Date date=new Date();
+        String creatTime=sdf.format(date);
+        Payments payments=new Payments();
+        Member member=(Member)session.getAttribute("Student");
+        ShopOrder shopOrder=marketService.selectOrder(ordersId);
+        logger.info(shopOrder.toString());
+        if (passback_params==null){
+            passback_params="1";
+        }
+        if (shopOrder.getDeliveryTotal()!=null){
+            payments.setPayTotal(shopOrder.getOrderTotal().add(shopOrder.getDeliveryTotal()));
+        }
+        if (!passback_params.equals("3")){
+            payments.setPayApp("2");
+            payments.setPayTotal(shopOrder.getOrderTotal());
+            payments.setPayName(shopOrder.getStuId());
+            payments.setReceivName(shopOrder.getShopId());
+            payments.setPayName(member.getMemberId());
+            payments.setPayStatus("1");
+            payments.setCreatTime(creatTime);
+            payments.setPayDesc("订单支付");
+            payments.setOrderId(ordersId);
+        }
+        else {
+            AfterOrder afterOrder= marketService.SelectAfterOrder(ordersId);
+            payments.setPayApp("2");
+            payments.setPayTotal(afterOrder.getAfterOrderTotal());
+            payments.setPayName(shopOrder.getStuId());
+            payments.setReceivName(shopOrder.getShopId());
+            payments.setPayStatus("1");
+            payments.setCreatTime(creatTime);
+            payments.setPayDesc("订单支付");
+            payments.setOrderId(ordersId);
+        }
+        Long id= NumberID.nextId(port);
+        payments.setPaymentsId(id);
+        String total=String.valueOf(payments.getPayTotal());
+        payMentsService.insert(payments);
+        Alipay alipay=payservice.alipay(String.valueOf(id),"订单支付",total,"订单支付宝支付",passback_params);
+        return alipay.getNum();
+    }
+
+    /**
+     * 通过订单Id查询支付记录
+     * @param orderId
+     * @return
+     */
+    @RequestMapping("selectPaments")
+    @ResponseBody
+    public Payments selectPaments(Long orderId){
+        return payMentsService.selectPaments(orderId);
+    };
+
+    @RequestMapping
+    @ResponseBody
+    public int JoinBarberMember(HttpServletRequest request,Long orderId){
+        HttpSession session=request.getSession();
+        Member member=(Member)session.getAttribute("Student");
+        ShopOrder shopOrder=marketService.selectOrder(orderId);
+        Payments payments=new Payments();
+        payments.setOrderId(orderId);
+        payments.setPayDesc("理发Vip");
+        BigDecimal total=new BigDecimal(100);
+        payments.setPayTotal(total);
+        payments.setPayName(member.getMemberId());
+        payments.setReceivName(shopOrder.getShopId());
+        return 1;
+    }
+}
Index: market/src/test/java/cn/armylife/market/MarketApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/src/test/java/cn/armylife/market/MarketApplicationTests.java	(date 1574213823834)
+++ market/src/test/java/cn/armylife/market/MarketApplicationTests.java	(date 1574213823834)
@@ -0,0 +1,13 @@
+package cn.armylife.market;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class MarketApplicationTests {
+
+    @Test
+    void contextLoads() {
+    }
+
+}
Index: payments/src/main/java/cn/armylife/payments/ServiceImpl/TransactionsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/ServiceImpl/TransactionsServiceImpl.java	(date 1574843449961)
+++ payments/src/main/java/cn/armylife/payments/ServiceImpl/TransactionsServiceImpl.java	(date 1574843449961)
@@ -0,0 +1,14 @@
+package cn.armylife.payments.ServiceImpl;
+
+import cn.armylife.payments.Service.TransactionsService;
+import cn.armylife.common.Domain.Transactions;
+import org.springframework.stereotype.Service;
+
+@Service
+public class TransactionsServiceImpl implements TransactionsService {
+
+    @Override
+    public int insert(Transactions transactions){
+        return insert(transactions);
+    };
+}
Index: payments/src/main/java/cn/armylife/payments/ServiceImpl/PayMemtsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/ServiceImpl/PayMemtsServiceImpl.java	(date 1575808042340)
+++ payments/src/main/java/cn/armylife/payments/ServiceImpl/PayMemtsServiceImpl.java	(date 1575808042340)
@@ -0,0 +1,69 @@
+package cn.armylife.payments.ServiceImpl;
+
+import cn.armylife.common.Domain.AfterOrder;
+import cn.armylife.payments.Mapper.AfterOrderMapper;
+import cn.armylife.payments.Mapper.PaymentsMapper;
+import cn.armylife.payments.Service.PayMentsService;
+import cn.armylife.common.Domain.Payments;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+@Service
+public class PayMemtsServiceImpl implements PayMentsService {
+
+    @Autowired
+    PaymentsMapper paymentsMapper;
+    @Autowired
+    AfterOrderMapper afterOrderMapper;
+
+    /**
+     * 查询商铺收入金额
+     * @param receivName
+     * @return
+     */
+    public Payments SelectPayForShop(Long receivName){
+        return paymentsMapper.SelectPayForShop(receivName);
+    };
+
+    /**
+     * 查询商铺退款金额
+     * @param receivName
+     * @return
+     */
+    public Payments SelectRefundForShop(Long receivName){
+        return paymentsMapper.SelectRefundForShop(receivName);
+    };
+
+    /**
+     * 支付完成,更新支付数据
+     * @param payments
+     * @return
+     */
+    public int updatePayMentsForCallback(Payments payments){
+        return paymentsMapper.updatePayMentsForCallback(payments);
+    };
+
+    /**
+     * 查询支付记录(通过订单号)
+     * @param orderId
+     * @return
+     */
+    public Payments selectPaments(Long orderId){
+        return paymentsMapper.selectPaments(orderId);
+    };
+
+    /**
+     * This method was generated by MyBatis Generator.
+     * This method corresponds to the database table payments
+     *添加支付记录
+     * @mbggenerated
+     */
+    public int insert(Payments record){
+        return paymentsMapper.insert(record);
+    };
+
+
+    public int updateafterOrderForPay(AfterOrder afterOrder){
+        return afterOrderMapper.updateafterOrderForPay(afterOrder);
+    };
+}
Index: market/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
--- market/.mvn/wrapper/maven-wrapper.properties	(date 1574213822028)
+++ market/.mvn/wrapper/maven-wrapper.properties	(date 1574213822028)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.2/apache-maven-3.6.2-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.5/maven-wrapper-0.5.5.jar
Index: market/.mvn/wrapper/MavenWrapperDownloader.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- market/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609896)
+++ market/.mvn/wrapper/MavenWrapperDownloader.java	(date 1576289609896)
@@ -0,0 +1,115 @@
+/*
+ * Copyright 2012-2019 the original author or authors.
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      https://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+import java.util.Properties;
+
+public class MavenWrapperDownloader {
+
+    private static final String WRAPPER_VERSION = "0.5.5";
+    /**
+     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.
+     */
+    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"
+            + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";
+
+    /**
+     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to
+     * use instead of the default one.
+     */
+    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =
+            ".mvn/wrapper/maven-wrapper.properties";
+
+    /**
+     * Path where the maven-wrapper.jar will be saved to.
+     */
+    private static final String MAVEN_WRAPPER_JAR_PATH =
+            ".mvn/wrapper/maven-wrapper.jar";
+
+    /**
+     * Name of the property which should be used to override the default download url for the wrapper.
+     */
+    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";
+
+    public static void main(String args[]) {
+        System.out.println("- Downloader started");
+        File baseDirectory = new File(args[0]);
+        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());
+
+        // If the maven-wrapper.properties exists, read it and check if it contains a custom
+        // wrapperUrl parameter.
+        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);
+        String url = DEFAULT_DOWNLOAD_URL;
+        if (mavenWrapperPropertyFile.exists()) {
+            FileInputStream mavenWrapperPropertyFileInputStream = null;
+            try {
+                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);
+                Properties mavenWrapperProperties = new Properties();
+                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);
+                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);
+            } catch (IOException e) {
+                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");
+            } finally {
+                try {
+                    if (mavenWrapperPropertyFileInputStream != null) {
+                        mavenWrapperPropertyFileInputStream.close();
+                    }
+                } catch (IOException e) {
+                    // Ignore ...
+                }
+            }
+        }
+        System.out.println("- Downloading from: " + url);
+
+        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);
+        if (!outputFile.getParentFile().exists()) {
+            if (!outputFile.getParentFile().mkdirs()) {
+                System.out.println(
+                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");
+            }
+        }
+        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());
+        try {
+            downloadFileFromURL(url, outputFile);
+            System.out.println("Done");
+            System.exit(0);
+        } catch (Throwable e) {
+            System.out.println("- Error downloading");
+            e.printStackTrace();
+            System.exit(1);
+        }
+    }
+
+    private static void downloadFileFromURL(String urlString, File destination) throws Exception {
+        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {
+            String username = System.getenv("MVNW_USERNAME");
+            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();
+            Authenticator.setDefault(new Authenticator() {
+                @Override
+                protected PasswordAuthentication getPasswordAuthentication() {
+                    return new PasswordAuthentication(username, password);
+                }
+            });
+        }
+        URL website = new URL(urlString);
+        ReadableByteChannel rbc;
+        rbc = Channels.newChannel(website.openStream());
+        FileOutputStream fos = new FileOutputStream(destination);
+        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);
+        fos.close();
+        rbc.close();
+    }
+
+}
Index: payments/src/main/java/cn/armylife/payments/FeignService/MarketService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/FeignService/MarketService.java	(date 1575806441115)
+++ payments/src/main/java/cn/armylife/payments/FeignService/MarketService.java	(date 1575806441115)
@@ -0,0 +1,22 @@
+package cn.armylife.payments.FeignService;
+
+import cn.armylife.common.Domain.AfterOrder;
+import cn.armylife.payments.Hystrix.MarketServiceHystrix;
+import cn.armylife.common.Domain.ShopOrder;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+@FeignClient(value = "marketservice",fallback = MarketServiceHystrix.class)
+public interface MarketService {
+
+    @RequestMapping(value = "selectOrder",method = RequestMethod.GET)
+    ShopOrder selectOrder(@RequestParam Long orderIds);
+
+    @RequestMapping(value = "plusVipHairOrder",method = RequestMethod.GET)
+    int plusVipHairOrder(@RequestParam String out_trade_no);
+
+    @RequestMapping(value = "SelectAfterOrder",method = RequestMethod.GET)
+    AfterOrder SelectAfterOrder(@RequestParam Long orderId);
+}
Index: payments/src/main/java/cn/armylife/payments/FeignService/Payservice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- payments/src/main/java/cn/armylife/payments/FeignService/Payservice.java	(date 1575647719191)
+++ payments/src/main/java/cn/armylife/payments/FeignService/Payservice.java	(date 1575647719191)
@@ -0,0 +1,31 @@
+package cn.armylife.payments.FeignService;
+
+import cn.armylife.common.Domain.Member;
+import cn.armylife.payments.Domain.Alipay;
+import cn.armylife.payments.Hystrix.PaySerivceHystrix;
+import org.springframework.cloud.openfeign.FeignClient;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestMethod;
+import org.springframework.web.bind.annotation.RequestParam;
+
+import java.math.BigDecimal;
+import java.util.Map;
+
+@FeignClient(value = "payservice",fallback = PaySerivceHystrix.class)
+public interface Payservice {
+
+    @RequestMapping(value = "/MemberWxpay/pay",method = RequestMethod.GET)
+    Map<String, String> order(@RequestParam String orderDesc, @RequestParam String Total,@RequestParam String orderCardID,@RequestParam String attach);
+
+    @RequestMapping(value = "/MemberWxpay/WechatExtract",method = RequestMethod.GET)
+    int WechatExtract(@RequestParam Member member,@RequestParam String orderfee);
+
+    @RequestMapping(value = "/transfer",method = RequestMethod.GET)
+    int transfer(@RequestParam BigDecimal amount,@RequestParam String identity, @RequestParam String order_title);
+
+    @RequestMapping(value = "/MemberWxpay/orderrefund",method = RequestMethod.GET)
+    int orderrefund(@RequestParam Long orderCardId,@RequestParam double refundfree,@RequestParam double totalfree,@RequestParam String desc);
+
+    @RequestMapping(value = "/alipayOrder",method = RequestMethod.GET)
+    Alipay alipay(@RequestParam String WIDout_trade_no,@RequestParam  String WIDsubject,@RequestParam  String WIDtotal_amount,@RequestParam  String WIDbody,@RequestParam String passback_params);
+}
diff --git payments/src/main/resources/apiclient_cert.p12 payments/src/main/resources/apiclient_cert.p12
new file mode 100644
index 0000000000000000000000000000000000000000..91b1edde586e327ebf41ec41ba1c7dcde2efb95b
GIT binary patch
literal 2876
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
L|H7^D`!W9u)9O)|

diff --git payments/.mvn/wrapper/maven-wrapper.jar payments/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
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

diff --git .mvn/wrapper/maven-wrapper.jar .mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..01e67997377a393fd672c7dcde9dccbedf0cb1e9
GIT binary patch
literal 48337
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

diff --git payservice/src/main/resources/apiclient_cert.p12 payservice/src/main/resources/apiclient_cert.p12
new file mode 100644
index 0000000000000000000000000000000000000000..91b1edde586e327ebf41ec41ba1c7dcde2efb95b
GIT binary patch
literal 2876
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
L|H7^D`!W9u)9O)|

diff --git payservice/.mvn/wrapper/maven-wrapper.jar payservice/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
z$GVu?wm|NeqQ^rYh3?RvOIrFsWZwoYUuF?I7?CyL$UPB*PZF(Y&9)ENLVMDco4t2$
zE#AQ=u(oe_Y?PP_<zQ@@;R8E*+>nU7)S;_GMe%g~O+Qx#3Ri}U`+^X$47|6o7n#n8
zoddgHH^bUeIb_aV8Hh~hJxLs!l3b6o%`dl_Q7I2fK8w<&J!m(CE0Al2$wEIoAYB<s
z+l=(->87`S-N~e3-Mb;7{$LKNZ6F@Eaq3*C5I&FK*<!#k)4NF0)Qqo6usKtEP?29;
zOtSeDxqm2($R-QQ6M(moADl2VR+S`Dn2v-|wCmeW<ELI3q^ow%SiFRf<b%A>Pa5Qf
z#xzwT1Ekr#m_uxzMf`VW_Coq{RC)Yuk8UTr#co?1zCH0y!p3*;4z#RZn!vABk8ev{
zd`Hpl9UB<r*RVfDVSfnva&Sj3zdQ;0O5E#ZLgx#-sq?YzcM#;$N|C;kG4i-YK%5CK
z2~6Z8w;q!|k8$RN9{2}Ot*lk|erwp{G{bYFAt2B{mm9YFEwVC**eb|`#l;t+WI4#O
z|9K(Op$6P%bI=Z=?uQ>)Ag^K*UbH(T98ul}mY+C{%G0S*jxWGZ4$F1G_3RKJ??`q$
zduB;ykYAY)AUS_05Uoo-YY+)$W}rOBSY3b4RNIP=x%`@9zw7)!OUlZ?2+&lUu`wR%
zgh3E+<terne%cUH8)^)<jZILlVyWe?q#R_DR61OGXLOes7)i&~ThJnv(bvAJLc)4I
zt3bkfGk;kM6M1`D2{U=CDo3KeuUHB*tEvVZ9C*45tYOc-4f(tiQZA*)o)ysG$`joW
zTQ5ibu9X`y72fD%zDV5UB>&l3yrS6#b!}kV6#Tj&-rpYZJnbU(!=O|<7FEbB12o(<
zs1sLL2?3~6S8oRG+NX;4D!f9}WV=sTQJI^TM`6z<=TNFw32i9CHK<?{)h<9e<@=Te
z7RZd~{rQh#yC8F5j2-l^Unc1Pl+BR;V>a_&(iq|BKG;4!_~4(s#Q0dZUtnl7EYn>C
zabiS)9~PvIWm_i77i-vDe?ky71I0-geZOr<eh%C_fKqd>@&(Y%9N`&~`r?Mfk1K`r
zjneB86tzo*CSs$YLT00kX@m)u_$#03!7%a=d=LbDTfIKQ8SAuZKV!lhQ$-;@3UK-|
zw1H$A#3~vhNb+8OUL2{K=FpJr+=Wj+2_q%jWqvEkqpk@tFIKr!Ib2$;K40qaUx56r
zhCurl#M-}vJov{m2eN-sgSd^OlfISJ|I$L1n!6tMk@F9?d69b6a7v_A!~hlOTdcDl
zmQiff9X^H-k-A#);JO~;a`fR)2j>KCvQhOPYeeupaPhuiJI-kU;Dy?H1U(HvbH#P0
zGvRe6YxDGN>aLsC9#&5?)p(=<JPmKgosaD=pBwLot(>lJ)ITT=lYC)%aY%R;^#;qm
zxE<sMR}BTy1NM}t4F}R!b3*fwAy=&cF?!F`%RCk2R>C3a&6nLnxMGkN8XGLOr&p`Z
z6-`~H8_Um8T^s8yPFLsKwO1Pa$|JzuvJAN4uvG|?tA}JWX7w|WC04W)uN0)z=n_Oo
zfVQ(3(ZM*BWTjVZ1r}B61f11chAIv-!9xAfm&Nt|MW#F}+G1k`N0x$fat>L!A1Bxp
z@Gi}nDNhhw8JW3Pg5>2=lY?6PXY<D1DDX-dw|NSx57Mcr_^C?>;p^IEqc)t~Qv^WH
zIgENiAC+!mISsVjW8C=dr}2!Iac~&c4={t)l;$n-HU1U8(cWKaKao><W@IQW@%W_e
zCh8<U_$B6!WLA_N&2a#n#hwsAK7E^Eug9*PYD9FLAMNk1*47u>^BqkCA(FMLeAe>c
zkC7ztE`x)JRL0=JmxVZ6q-vc`7UNVI@8cmHi&$zplXF{)bALqq5F{Ff4aVeG4mM!4
zB(k*TOS7!bx7Ka+h_!j&Zikh~CgCYRCZx2YO&Hco%-fCa;%(9%b97ozS_KNci3_;0
z*u8aTljaKpRnyc$D$agA`6Rw=+o`~gp0^E0!1y~W`lq{_jdE35SlMXFKbH4-FV%7)
zTW{ipmtkf|HReYJr8qGF0-sQ2EjN>B?SV*ox>FLe#5M+e_ltdC49abWiCmh^_t0jv
z`ruUyhWN=s&~O=kJF^K2x@-!Sv`-<0!*cLg^*w>MpC!a3HIX#uha3$i&Ns${xRg9H
zD-xT^vw)m->Gbt$887homN>jD(5rYY@}j#E_&mw<fSv`5*RdM{9vT$9+p^XPHrTt6
z)!}nlMUgo4J3WvfaXLGi*fg+8V7<KCF}h&YrrMc;F<IRH(YqO`xo$Y{4TBO4>Mpcq
z35KpEt9~uylDgy%4eh71h8sfGg(OH6#KwCjF!-HGxqa!0B=4-%#-0Bq5N1GPqwK;s
zTD=j@_?0N*ibxWlz7FczUI~r`t6yA6Z!(n7&Yhnmk=W{HUUztQu5xC}Xx~A}X%?am
zptC8y1*uqym@~``dQCFXU`DbI0$WRyjB099M}sjIBDEPYQ!8SQbG3R5ek`TnvE~9Z
z=}mI2s;eYj{%0B9Px|&x*vtX{J%nS-&8pOA!kZDUJH_TAe>roKo7&wo0*U2av<;WV
ze#9#xMsPff;)MQ7R!d{7u;(-P8dvZDC~k?3qN_A^A5!I4DR+D(H1C?h!~Vo2d)2wS
zvojs?iDpPq`M3M}AS0$3^(RaRk_=l?BQx02@re{yO?SnpP?Smqg{ZXG&=rbjr4U+?
z$DJ~Xk!@lwy5hHvSJwM$LbR@Xr`bMn=j5h1d7sc^IHL)H38)T2Ca3<uvJw+U_$r9^
zy>eeQ^gb|D|DmozhT1+Hhf6=6bNn{|X?ml8d=CoF6c%<pQq*^IoEqq#vK>7#%*PGF
zWj+S3b6xtqRFNyA9fmv1d8sviQrx=J4a$-;dd}(k7H=d~vq{->H=F~jYNzJrwrBJF
zA{ozxK}|Mdwb<GOYr<zfiZYzMjc8GUu)t`91tR+#$X67ko^aRGZy~duE0#MK+HI6g
zH<A$Juf$wVY~RBK_lQ?|Iq*3D;+U{9sUCqPkAuMKw4o;I(#XpQSlcE;8Iui)bLdRy
zW+a75|7bqEAku-7+@pj6*0&Dmhh9#{@!XV*UTca&Nf85g1;SK6m|&7q|B=fvy*@J#
zXJ4JWR}RdHsM>FF(q&XhT~SyR?!3IxB&i{BpEFv%67mt4PkS3C=P;JRgXL0%_gg|G
za+S}rFy4U><O1~4l1(nHW<!gYx3I7txyVvzVhu<4{I|Chl5a>~X~il%yZOu%O1$7X
z##0ykzMZsJPh&*{iATnd%)LOgA2CyhMKc2y^jFg5QQ(N{Rz^Ki#5MW;2w(h5=*uuR
ze%kLS231|3w)1B^l5a%>Tb2mB1Qh3d{C7?ucf7rxrn;{ffxGB4&o$9kUL@WD^ZH|N
z{Oe?UeH2q?wF9I$1wl8-Oh)4c<QUX4daI!LjI37Gaf~fo&aw0HrFLEx`AZ)HxriNj
z+NE)K4?_#P+31bFs^(`wL9b4Q<LC8)I;D7u4Hcq>s`k|4$=I|>bq#I4Uh{4}53<!<
z02GFd?O685yLof*Q#g8~YQ(I8#kAk!p~_4t?!xR%YeVye<w{W$HH&nsO=0U~ct>1-
z)tR(vA9Z%ksaKfFW_jdj?S|}0(C1HbLDu(U1Z{({5svSr)SCC!Lx~#P`Hsq@ghnuT
zvxr3}%$9qBm(OHDgNpP5`$D4e9Q<1(q$sfMRit-NfMabs=hEhOqR;x2GN97_C|mj)
z604VbK3(M$s3mSVI8Py<Uj;Jbypt6@`F7z<G*;&7tr3=4;1gR;D;b&KaP^H+<!6Hp
z#o!VK9c#)Z#pX8WBwqEbGg%}t?kcp?P#ncGTwn09VxU=xsQrxyd2#x~e-JOZ#OrQW
z4(qNWd2|kvo~Y1C=Sl^!ZHMdU5~V%Bsu$;&uV*L5<{-@zETPvjJ9bQJW%d?Xjx@|m
zsJpn|ZYV)IJQ$N@)8_HB4pW^tGWDCuf(`fIHN?23BVNW)sZXKB$XhO?*C@C>3Zg-;
z5W2u+Ju8Z2j%4yDm@R4^)8=VeTX7|gVvRA84GiEe^;g+u8H^SX!B5nfSHucInZkoF
z30fdH*}|BOH4|iA!i#cUB~*cmfth7MYXCU_;FZHo=9|qZ3`{dzilD_uW4VPhp}?iu
zgh>}9vZOZpn{{kpAWrBi<ziSMv7R6{g1=9vgba!|&vnoVJezdOZ6Ji{Jc`Qb2!gPe
zrQnQ$Z_gdR4<EPUC62|RF~*+atdJ--pT=s{c*Mu7A)Q((B<~#{&o-ZbJCu;Sj+L;_
zL9^A(5foZy;tJ0UN_~08kb^D4G_YB^a@ccTh_2v;NVTc<L?yul;!G_nxOP7STT5rX
znSx^qcJQ($Oy-=ATw*I0@8M0UeksX*9OAnV#)h~bq{?_IcK?ovpR&tL!3x)EH#GF@
zaEYKDGYtMzzy}tEg5{<OG5?d#GIKv!@4{^_7KEdK9gYeh<_Bfo8Nv5Z{6f57)`I22
zuvQm0s85Zf8<P+Yx4I@z^Yd0CuMW?*Q6O)?x4O?)YB-%}507TgM-K9;8o-eFFt)1*
z(OEhllc=S7Mk?|B;$TZ+a_7pD16Vlc*l<2fS7P&K$yQSR%{<9@jjOYZ`*7P5*CSop
zTg27wPw>n47=3!k{ZEGi{eHEQ9K_1W0pPdps4Fgyb}67FnjC#OK5uFJDKO2og&W)j
z*1VbvuxfMxIbAf0UoesybMTTfwRvTg#!L<qOSHaY$+fcfKvwW%2a*{t=*>M-JA>v%
zt8$Kru1UlV&=l_X_Ntc33-#oIg{q{xv^!=WYC+?g<`ujDI3{6~X7p~b{Uyxly1Ynx
zsHwBq(I8xl(xOsfUC$1RvuGSyJ#R^O@jlUY{tM;fYoCv7gQ~H2b5VYEu>o|B<(;x;
zOm2DmCAi7rtIR%rpFZ}|5}F$fT})oyFc$>L!N%%_!WpD{ynqG8f*Xacjkfd=diIs-
zI2y31jPFblXR(t=aP_(6r@Sx}9LD=T7CZO-JX+*IhF|$XHmf`)S=9}@pDymeYFRs`
z?wNQdnY{4uZLmVm6o(s!<oA{MA;@A)>sbl=!*817n<J?KlgU1duheiAtuV`3f7r?)
z8Z8j43%2iSQAjL%PL@3y1+G6V*dr#9arYgqs68<*pXe+0(>I5O+e7v(83X4}4m{1{
z6pvz1D^;gS+@}fX@5aEaquk)5hO79xebNrtoJZW7m&X?YlUgR)G`ejba69@c)xBJw
zm_AwV>-@kImE%X=<FqBr%|f?WZaHrqs=>DzT1oiCta~lD+}Ara-mlhPIT+q4kGo)-
zPYOShcbs0T{82xkJr~tH{UNX18V3c(P<LQns$p=Yf#PpzU3m2#5|0_MzCW{7UAztx
z56abzu`4kLqJH$BtqJB{6Z(~hJ-iT&i9JhND(jc*!4DSW72K2^YUsW`=t)m7q<0I5
zk9dz_O(pG@YYV((IiXVmDY~)g>y?ZAiw59Ns{s?OIw7?e6&x+cD<_toU6x>)+y|vD
ziMNYX8ZX}WlWTEnANVg4kB<DHI)^|WW&X%`@H*embX+4%^U11TKv3n1?ZbESxu4RD
zAQBbdZKS(p?<?7S7!&6^p2N4g)Y+J_m_Hi|DvHS_)dzr6Pi+dxWt}CEzjur6=>ZQE
z5ah<k>C>1=l&Oyn6mZZJ-l&J^l~&LljrmFJEjzi**;{g&$kBi`I(OK=6qBQ0JEHZo
zDdlPQ>lqrfDo+n*MzvL_RFh|tM80uLnwH!^XC??<ekSUPA~HDXb9(4KK2+XG{My9g
z4e(U-Q<drZEAfb5uScR<qmWx1ok_3tP`CzvMD1AJaeC#k2PfD9Rqbd)iQRBs=1yK1
z190sQ8gsHsY#;33`DmOEn9y#<A*+>IT#bq{#wy_BlpQb#H~jhAw9?bYTJptJCQvqa
zVul=uFUE3VmFt6TJKdmB)|TW|1~uBkO?B;6FIp+)ChVHSHcv%x*nF$CyaiY~DXPrd
zssm`wB_v(PpvWFN)!z3DqwnE6dI!9G0@r!ZH5h3J2rZ|eC*!Sc2r1`oeALAk13iE$
zQaZ}ETe+yavWhOE_4Ttd)Su8QjVus|GPogcjf-e;sgj`1cRZdSL%8aE1;T`xpqS=*
z51jV(`xg<qJpm<eiIVT!iL)J(+NlU>ZuXaK-s%Y#^a0jnY#7;pZep>{_J!%dVQxC6
zu8BcucHUF5HK3EI?j5?>>1a5CCPogArP8lVhC#4oAWQCBjBQEw2t(*~VaiuR$fPAA
z7JQ*qQF;OjYA!6e-br|9$dmi*azjm|L`IB!HLi32bTpY_tHgnkzJExthIET8b@LPJ
z8eDfuHR<*l5Ug43%R=c8-WR8J(bBWZ?BZrR;WW?~N^H}E9WquMIz6egzL*g9y?ya;
z42Q_K>GFuGQV}We{>~{;6b4%uqsc$ut{$*Fak~vxm8|Q|YfQ)FZSBOT)-@9Ky?+#i
zevf-^<f7LX0$tqBl_&vcwPj2%Nfo=X6MJK!>FWT2TscOmP9i;;sP1pNPvokqje$DC
za8HI*?WLTdFUHMgYN$YT*Et%4a!CAn3W$x$STi~N`HvPDblgInO}JmbLh=5oVnF;)
z6$2?-Q`7%dE(lVzmR*oT=XS-iR2}c#lPhL`AGD@;BEEwfM28?D0f}TJ-iv6fSW%d7
zdT7SED|uxc1dhV{1o$R9aO?<13#k+Lw4HIxUU<lC?(z9~h1f;NHY1~BB0N*~>fHj;
ze|nP(T#h>o@QY2xanFv$lz?Uo@fxlA6O!Gu!HI0spUbXkt8?kng1*WV(7gxhb4ogc
z9$wWvAh#a54TY1?C}||oK@RG;v9{)!@`8~%i~_@mHrSD~FZ3wANH-z(EJV<cKVUJz
zBPw2q=W%gmKgx%*!ZfL^G-*LnZJ2F$M}NfsISxfg&f-pmex71}quOgXFbF&jz0iyo
zp4GU6bWeQ)vZ&ZVm;wfy(%nAOcQ3-y<41rhO~t30fcHv25dW1Ex)OFCf|u{xYEOZ@
zR36r0Cf_bEv9}`1#9Oa}M2cU$>kXM3@PT<vKdGa@a`%h!aT^p8QXu|(BpcJ@GR){C
zRMG%_i!7<y?W_WTRMcbz8AlRXF0Pv(I9MXgh4^&#)TnfJ3lmaKw8>;~@}@L<_gs~!
z8(yJTx;;4zY;sQ}m@F%3K_@~*IqTF*@Zl!eW7!}Y+~|O%3Wds$*w#nJO1T2J;0|M$
z{@O`qmPfJ7r1?a=%8y)Nda>MSeS8r&yPSJ!>5(3Xuwkn(4sFK#v<<XiN0J`zf5It{
zl=9#c;MXtff9!9e{U<m{|2<RvpOe4)UjKJffftr4#!t^`ozYSKAx9V^rtwBS^^kZ%
zv3R;lGs?c(vdblhxh2j0nhM1hd5NM3Sdc<)WxXm!kOEmoBZ&H9BY8zo{R^4r4MHxT
zU;oe6SUlCl@TX7M^>)XN_rs6(&By2K0vr!?uK1<Bz8_zfel*BZAST9&zx`8UF_>(I
z1wmd~pG+I36Ka-)l53up-WtSHB4%XSyISqXD+ILxM5PrB9yHF`Dc&_SOkhWF%wv#e
z2%NKPFi0nk`#H}<<hkJo@G@!~%*&(8OQ7dRNbtshAYg<hG`D$KJ9F-^LOK?%Us1D;
zpOOM2(1D0n!KeZ5UNwOGX4DW-PF~17`z$jX7yPyL^)*ySU7*4xj`%#v`QdVXSyi^2
z?v9?TZ3WhLnPb;p_BCM_j*S*kZ765FysoBe3RVR$>NWHwEE7cQQAoDj4?gQMICkou
zlIh$j)g|LXGv-y*@PRzHogfpx%LidyDQ*)ic;eDB40vJ-I$=5#&$`a#!m$z)OMaS-
z6>{k$`&hu#>Un>%IsOG_Mq^{EzjbL5wPE^_A!cN?vx=VO)ui6i)aHF}3@F-pNkdZ)
zxtS1Oud@VbwP#~!Q9$xM)rw(<KglJ0>1s|>dwU`Wkd2mrDlpI;&i$+nNQwa*oOtLt
zAz;))J^lr)=CuyUM{Uk`GxSM8uW%EwQzdXfxgI`6Xiao!wR6$_2y=rjH|_$_bW|uN
zmfTdS)<y<yVxBr?Q#7RJ!CWDq_eiH=l(_=#iK3qHRh>dK{B7WjP-7s9adYb|iCj|2
zxc8mhg$oGIDUr9zvi_3MWwBKxW?#TuYO}0@3*~8_GT=l*qPmq3^SO`xmD4-o$OrP{
z!~x9$UFC8q`3opAw8RU|SUvXaB+-*YK$y-}jgD;0o7IN5`hhnt_COPj7GbTAimfxc
zp<#O2E=O4EeJPKHSS_!jU--e~0avB<lB)DtdVPMK-giXRV<;d@;CXwX1qm}L_dOAq
zG$Ag-$f%Ly7#;HMl@gK>TQm}lP*|P<Ac|HD`dqr0dLFuNXOr;B1!$o}J0K7hfb#jM
zSe*d0jQwv=3Ukh^IABTpw77j+=jg%^4~<0?#e>Cb<mpyBja(O%8IuBdo&sToWd3SX
zdmwH$i`0Oj)Yy3tkMKouJB3jhi8LsuMK9uO$2}6isD}8Ku?~FH1u3*_;@zC2YGo{C
zMf!>*wyF{6rRwOJWOio>-mAW;R%Mf8N08<uGW4SPsi2d(%qfa0(WYU+u|m|6I+knQ
z++CM6rwHqI!pgCb%Xlv=9U@{<u2uxvI9u8#ZMF^!_OF*I87ArWs>=yANK;~46Auz<
z8l$|k2Bn2~jvYS}h*(t$Hx!*IqUFm!bp3M*qdD4XT7Qmn$&3877si!2*UBZtj9}8D
znQVx{dt0g43AI%cWxP@E78d+O>89`sJ54|G4cje>q{6wmV%BSYdDuAl9($C3GgaVT
zLii66=M9C9D0>TSi(h8Sn9H!;2sA+1qJdA2RqR^DRQhtcwG8%YyOsER-qEaM&_B+d
zrdpp&v;WbE&(NN|9`;1;M7v1<p+;qt!JDi3%f#E9oFlHvbBa2XO{p+^{qcv}$Nr%0
zu!9Pe1k;z9X6c9n{Qf9Bd!cmug=YXMgzXC1_zgE;dS8~Y_Szb2!kr2VInpIF3aoLA
z%8=8FlsZ8;bd9+B{ll>u6jT33Eyc=;YvRN1?Z$J(l{!dRAL%Wnw{XeIUmfXj3*j{$
zB&$%Q&P>t#0IwV|w(%{`B?5itkmF8XO}mwatTmbN8tFfB6;HJRw6y3X89z>&qj>AS
zR;YB`J-S6p@fyGBY~LaowE(2Mx8*Ip8)#wUa$sqdQ^MXKV@vi*(k<MRra@3F(ikAm
zD1LjHwu7QrPMtkih0Eo4({`(kTFJ#PDJ5N>@yg?~%NAH&3r>HmSh436g;nB_O+=ZD
z(KHPjVLtjT`WgnsYhugFTI8RzZyLRG2t99FI0=qqa|Mm?R%7%H^*J7-Tko10CDK=O
zhh+*Lx7CoSI-7Eyj&e9DEYdT8r}g@UjNR}7`5nqj|3-ZvX1ft-XbpUu1EO-my__*$
zWu`@G7D>BXgV-uN{$1Pq@^w&bzka43y4-U>j`mHj?ULc|E0b3gbDK2!%34z`k0tH%
zDT)B^FE=Msyr@=h7N3^xAKfmDK^l&#yaF@9nosY3Fv+Vc6wJ~GwKbAGkun8==jpOT
z<|(fmc+FW&!o1T=J!TCMjs%4wkFSL+`razhsjUKNJ0f8w2Wf{^n<WAj^H(Uqugijl
z7`CD9Z}^ZdAo`fKMExW+U4or&(8foTh6~po7^}WQKXT`7)A#1#TFbbJXJK{0kxC6E
zPpG%%=-*(INr41G$V2^;4Nr+&r%>s@kgqDa{u_!o>sU3{=6Nnwxj@=fG5acE%YeCV
z!T8n6ue%dIn5ZZQ*eGR&(?P3Jad60hTacEskt;fU)!qyR>rm-3lIQ+WrDau0k({98
zY~jj$K1Iqb?$k^P>rU8t$DY0TU5Ywi7zs5eS{NW^mBK>XU}JHRRXda5{BW?14v{fF
zUDHl#XVai?)Rbeg_)k)jYz9rJ$Z^2#=XFkp9*PM#<4oq>*?GK8>N};3{#rGSUd9N3
zDZ70bfy)@Lyb@h<x=;8*g(6cXPffd<7OWW0YVU9dG#|0WVeWJbX6q{v-CK9>wysjG
zN~?}St<LyUz5kO#br;A5MKvvjnyO=0zFt@SMY{i!h1+X0>P4#~y=!%C6VS4h!B?!S
zAZP|dX$IeH2V<1Bxz_V9nw}XRHxOTLFF+m!^TDKNn$cqN5vtLWUB^6Mz`V~oNKeNu
zZy|f|S$~xcN_}jiCB|2sY1$Ag7Fl^gw46F<Sl30<*`=|Z?P}=gOX`-T&UDD-L{3N(
zJEnlWE+|XXcgD~{`sGyq&OM*Z$=^*a`NjRbVOSv~_7AZy$?5kHT&9REFvho^5S?~_
zwAq6=f=F)em^Gu8SbAK4t`<we-mmnSX!25A^|5G#fu3)zX=w(0m<}AKr@^c$VA<dI
zncb?a$JjV-Io1`!z;$L?Kn@*n-rrP2bOg~0Wyi;^Bsu|H=dq?L=WGWvS})=Xc+YmM
zE*?-f@W`{{<=0ulI!doMI7sYSb6%X5SqtxAzkOfyyaRZnUP|nD2w!j8GRY}NF~R4u
zrhw(4`sT)0gRGOhVJ9lbZGue!G0Hn5W8c7WiNIp8-x}h$MPwN4oFAWvNQ%I^;G}oG
zK=Dc@8Zy59t2%j8R{ht>KItsxbpH5rY!D)<e6><gnyI1+M3~K#Wcj*#V*hqVsZ}%L
z)Tlols{=PaQ(5OIx>NuD@qd}vt|`8Ig7E4{)wTubNMd)vIi0NU2&qfr<Gn;N_acqL
zE53VR^4ajAMP-CX3qB{kO?g1RW4-B_cYBvv9G#-5%l*Vpgh_h)V956pXr1944;_cd
z%WN>F4pOC>wy0mPhE{d74Si)B|LhFzZcjeNoCdKZA0Jexi>zn@H`*zeBTt5^$=V7S
zEG)Q77)*x#l&>j8R5q92y7q;Z#BQ>{)*cQa8BCA%plEFFmUx{vFf<j6Hc2QnU)7wh
z(X<$!aUL^0cyl=^*x|*;oL0ocW9BtmiAH@thu`76Dlv=$#-{6so~=y{)fvjX-2-l>
zGsR3Jmkw3b4QM2F-`+g~uILrtA0SF03b0yB{xFv$))1DnYWbQaOHZZu=du_C^{@sY
zM|sx^!D-rXlxHl>dvr)>iD$0b`XNK+1f2iUAtrQzZ9=mdOZl*G!@-t<8dv|`{`J-p
zN3l65;mX*&pNwrpAt##`FB7_TU)cKC^LON)eCEER4fX5S#6O;(^ZZlfE~oEg#_#B8
zY;9m=>_8-CYp8D}WbWwXU~b^-WN!PfKt4)ATNX(kp1Xm%Lrzt#`3Z=ZAKV<x>1c|K
z9v?nRynrN~=T*;PLuY-%$~B`y^HVc@HT88DZdVlHSO?R<FQof&GA)hK^m;5i`|Ar#
z4=w{2yT3x}#eg0$t2;7eU#R#Fj#`AU>|iGU6z{MNyBVphC0$*VNR)!M(IN&asR(yG
zQ17>lP-bW&ny&?%QOR#NZQS=_k-($kt8yxz62v!?bq<B}T~zNR+b*KTjE6JEjV;wO
zifzR08R>LxJyd3mz<d4WB*|SxZz_W_e?&k$luAU2Cy@!KavrW$l8ysI02=+GGKDvL
zE-T3|<yvU`#^c676;Rm-;|HPs3wGNs8#-S0%d!2R_$QiD)@n@6J@)3!-=Mnnb=RX%
z@YA84bX@*F_|io@Qot*Ya9Dv?Z_z}RI-E#Ym(pQBrHBHC@TPfn(BOcE<yW`LtwXvw
zbFOS;j+MfkNSo2$dc^Blzaz6{<vxa-!CbFk85fMZ2N|N}h2dUW>us7WT4R`dO++T@
z(&Sk+;BM{8Q5=b)q2_D@d1+HRn%Nqmz9Rh21o{iG#+oV)_d)9eMxH-_W!Y7zym4mu
zPX2}ow(X2~$6pDa(?2G7RR3+5{Hx1A<;@rA1;N`=GMNe$5HfXLk79Z}o;rx65f~_p
zwpL-n#oNywt3Dakoqt=|MHRHgJOh`=dj3O3(qpG&fg~P_HSY!Pt6;rbeJtKuh^LrW
z>|<-|ZMxI_!Q}bl=BM+G<xj$^>Mv<X88sK0GL*(i|7@+rWG6=Vg=I*PEtzP`Yk{1D
z(})N6E!f@?y%%R|amiz5#uV&~o@!Gq5bLw<w7j{Bg#<w))sT^SK~>Tc5`_XZlt9t*
z;e=}I)HWRuPB5wkd*+3#xqD&mP!$k3Yx`WimDj;lML{4%WmW!CNWdjir#-(+7bnkE
zjYV_qFhjL5C=ngg$mE7#^VSm-CeaQP<X6zjN?ZX(T$MX`7slOC{qusMA@{B9`P6j2
zCI$^3kp`Hy8lJ~CsNjO%9QE8j=x(x3jEU80DrBc}bx0lPEF~QQ!Ga{m5!L!>kT#tG
zH<C$|XYD43;mstR9v#hLN2w_@!+Kr#*aAd<Tq#f8b5ki`cj=(;uF4Nh&TSk#2!wqh
zqs!TX4<KEX7_pWLaYgeps5`Eg{H%Op!pYjjBC2RLB;RMLRatRjl9A>-T{lO>wS-wc
zLVKI31ZpY4i?P_;^onop;Q18%+Ut7z&%{w~h6*5Yw-vU0rtsst=01M$7VUex_4vcL
zgpt>+q*=zkwig1rY4v?qseB0&<}6wFEmZ7V5pw0nz)v5H{mNcl96^Djc%Pl2(Ts1#
z?r1IoPtvi~3S2->>^9iAwgmPi0iOmWCJ!b@k=+BblEdGeR0!WFcVgzGRnZtKEktvw
z8lQkiL`VCDSBTs4s7uJ!KUWw|ZclKiOAp!K!<8*>Z$4nCPxVI~q~vF(7;2B<7<eND
zS!?qd+dNUwJKyfxn1w=_{~n-7`u;f0zDU`BO=Abt=<IA(GtLjbUJNX^W}<t2E?*bY
zguh+2Rl-yj#&TK!eg)+<hI8y78l1Yu03mS2VX7XD*@q0*R_?ORIxI3Y+@%}wKt1~D
zakmT}8yP5f11P(#z%;yhkA`%i{lJX<Sy9GS3q`V3Jx!MUrXfL}hV+KEeOSkXILjCX
zuTNAwmFcp+;$dPp!e#0SDmJF<m5rxQDI%!ym?4mtV`YaKsh5-;fNO+E4}Z<}P@%Zu
zq);BmOJm4%P+xKx3bFsejlc1p08d!4UKiI}=J7lJQKfuO?47HJ_Gtu3c!3#}U6Rp*
z-vVb44Fwy!HvG+MuyJz~kUSFIB=1xNdq$8TFy+n|;sXVwPQ<X`+sLA?*=D??PF3Lp
zQ&j3po0_0cm21M)gD?z|V<*lqo<%pW$viqh3_s#S1QYlaW*=6Uw2)*+@y`46&(oA8
zEL7%_?bx9OTd;z`4<QQguq<*T$IzQ|qV=2-p^3Wo!UbeeudW2gUJ8W|@c}*`NTuw;
zPUuKVIS!-siDgOLQw-i0a(Q!2*(=bunE#_`gvRz7pp*8Os=r$R1?9b4!YHPa1coo9
zp7X<~j*FJJ{7}ZcAHlW#hCxQh1Oqf!fLjE=QE65fuzd<D!ax}E6jrhGLZSy8;$r8E
zJEXLRFlWJp*&e>x0=k448;j346FZ++En(A|<4oj$zD$4#E@{RbEU$(e+O9T|e<z%E
z>rNlu48IoGTO=6$_s!l`K_^A$yP<KQ?t|3JJ?|jp>1GJw>PV6Xy#Utp0|o51va_9E
zvH=z%Slug@S&iq~5kIF0?Z{j>Qg%smxbsp%C2;Z|wm$*NIX}d9e%_p@w0RAYglB55
z7^EVG+;<EHre2m}lj9Yl<8D?kC8lj$4dIT)(1Emxbeq=)x)6lMky&>&8#0U5B`xb7
z71!^@$;?{WQB5Bkn&YkY3X&xOwY^BPlpbPy{t!g;e?;vfLfplzTLIgX*R8$KWf_Z9
zxI!v6HwLvO-GVDjG*TZI1uQ^k;i8aV&rC^=+YlwQE6R<uPO$K5LJWjf)dh+pEerGq
zeo)g*GY%3Oy0gcWH`Ue@+7)97qjSTRT~_39?%~O{C2pDL7@#KvmxywbEH*heNjZ`B
z`YA4%+&h@pw-oywE!}*UMX7Qq4xX>YAab<DYxa)TZqd{VXt$oY@QSUv+ryf4zH^Eo
zXXM>a-ku?_hZ1nRM^f<$7H^4fo#Aw$j&5PR78b63yr6bSx(l>={BPXiBbH-%rdSCY
zyY6mXCEcDj`#5h$RQIRABwzKjQfgDC;4Pi}bZFu)647`S)-)q}(0Hq!r(`~%d0!0f
zGPR?O7c@SdVq<g*JA~P5vTuxfuamB2b{L62+i~lrCa9)<<Q=$%Cr82z3<Q-qEaW+F
zH9w>2KfOLYWdSIXe%}>Qa8;@t>=Xwrw$S3jCfD9W`q!<@btA&v++MpxY!1}a<SPxY
zhbIa%;e9h6;iBdBbkW@RY;FNM1~YUG#->1+B}2?upDuS}PV#&%5tcysK0N>6{M-_i
z*yZ^93cTU{?U+NnD06the*M~p{U^uF@=uQWzy3!krf*~Pe_XV(x+an;x=#!+Xn$*7
zDZlVyK0LTQLKCq0l0gwnL~y=b2lQSlGzsH@5y9-#b;Xsk?PLGMJy%zL7kCkuY}ZYU
z#YZ+#EU-aK8=L8LOV*8N&(Y`iNKFp_ThtAc6%w0qM_BD1`duM(Nz}(Y<V;8Kffy^c
z=A;_~_w_oLTk)h8W93?+6Z0#u%M`{-l-+nO;$B@EJH`v}IjGdcBPfUk2L~yLm+GbZ
znJ5gV(_+4ip6O!ap&1J|;TD7;2{A}|zRRYVG-h?#v~d26WIBc)<J`}=s*s+nfJa6f
zpeRSayR9^**OJtjnCV{X)1;Eypk3(-JR?%_-v6NOEraXWnsiNBWRb<p%(TVK%*?dK
z%#0Q@Gcz+YGqYqdGgz`Di>2}TPS12l-{>>9`_4o~{i(g9{^WWx-^^T<%S3mZ|Ne0S
zY+mUQFw0skVoYPgSOAReyG}S}B}pu5A&@n{F(QCB|G|)#x>H2*9eu#ubcqV#peaNc
z)Jxh_3i#}R_zgP->XLz-$(mC$R!@TDN}MK!`Z9JtaavH8`u)VY=>VKaer=?x&p$yS
zJ-y4ChRfNxf_7y@*;UN)6xp0=*oVZ*!&D2NZm9Smy``9_=~@GeKDE)*Qmx|w3Ko~Z
zQFp^8Q(mf4R#)CNvk^&m1JBcAKGrr%4JixB{Q3t><F6_lGne~4Tz}<dARtDe-8`Rb
zwXtnEJ&eggaP;mJqwMh#G%?T3S~cGq5o{tq611NhK3S1Gp@z4XIzw;e0K!$qw2;y6
z(fJ;n`@JoQ2AjSXELpye2E~zx$JRZ^nGTNuC?OEJVL_pfoNq}elADjGNad?J$_j^)
z)#(Tz=T(J1f*}>fzNHpp5rJq?XLOD-j7m#mF?DaDsjC%oYm+GTzX-Ev>krwUSO)m7
zY8a;I+^`jDO+{lPW1wQUI?DhvzLb88wVB27ngr`fVA)LTN=;VNQG@m>$`f&Fy)6l0
zuh`W>oxe>vXW7A9%urnjiNPAu+<;!4;i^~(sU+7Y&fk+8zM;8sCIuoNCN&}JG3|5=
z!n}8KDM{RADa_?Qg?7*;U;__wAWMk}vhcWc>@$|@m?7v@>K_=Y^~KdjeIUN4urL))
zMTS7k%tUV!Y?vGQ;}z%7$`s=z2a4p?Q`SphEXVEeXur#?QEsb`&`&pnRWMaD+Jb|k
zu_wtBe-T8;C{*PklXrq~=>_IXN#76;${H^&{93wegvhq+xNs3YT@y*R99~fHSLHE@
zoOy9tdF;(W7(j1qwADcu;J=Tes1+~Yr#!`8YK`{uwraQJ32ukIZth20`b;u=ZC^PG
zuQordzyNQvJK6q@_d~K=*JEvKBFtULmUouFHs8V$!mF?!H-n(C#meK`S4j?@hL9Di
z?K!q}yotRh<a=KNKRHNm`Q?_N!9pu2x$1ncigGiE(z2b*!RI*`V);x+zy8R=ElwTX
zVH(i)X6ZK6GTmX0PoMnn458z=w!c>)&K=#~k=DUnNV~UcA)0VabMxA1@?2=jIbmuB
zD*9!Mr<eFXoT{zT0k{W!@C&aXGlc|qL6Ss_;ifg>SgU{$udMhM<$Y55Y@I-F#18ui
zD~88AD53y-x%$Pl5v)y;2i~mVQg3JcecYbXA%r3ZWho-hOiE-r+I_t1hbN?;N;xjU
z;_d_lhd!1gVBQk?#6`YAvCr($+D}1jR_473xqD7eWoU;SZvoGqVd&oBwP~@nk(@L?
z-pO-!L!YgEUNQdirCy*0bf@4TAgj>-<Iyeu*1!_Bvo*Cab8!Uzdjg!Cw4;opiaOeh
zA%wgT90Xnw*1TZ3HWWf9)T9;hO_JJ17+Df*;*=3XV{oM|b8V|n<&%uSS!^T*;T`O)
z5O;QKOQ2zs=bp&RH}`eTYvy?8^TPwy0Ad<*1oKzQ){1*7LH6l775}2_)#mY5jjfee
z53T0$tXQX+(`wxmCNW&O`dgG0o^4C>%O1`9m`NIy+G7Mi3xZa&SpEHep3;VignI3-
zj6Z43l{lR8(u_m<+4V0u`B<X_Ah5GdyBzQG3Kb`MVy0h#B1Fa@^}?&!vReba`#=HH
zR&w&i0uJV9*4?VyWRcrzu>Tda%xg`9i>)iIuMFpCh_G=e@2xHBW4P?rvKIGj7#l0*
z&S4C`BWs)20OITN>5E|gbI)l95c?W(uq~swGc2jfh}Yl2J8zeKTY6X68+EWcztg(M
zRp(u$-^N?!!DefDnmNSl{K0BU&yCFfYwnPJs+a@XMpISHj4VX%K7O}#>P8Iy6XvmT
z^dm)o9(CG4)0`trLR!oLpYTHOwOZn}XJwBr(w+%~g~)-sfYX&-bQ``nIKO(Fpo+N_
zjH%BREQC{-Qey@1ym|X9-?sNK6i=5n(q)LdbCWFykAvhoe2>w5*==1Bz&=P7A|~sU
z_btuAnH@L0?A1_Y@jc^Xgp|RFftMxe*W5_a(&f!eSSu}!1aQQTF^jJd-Yn9IIlttC
ze7YimNV$PTIweMFVO@XP9$_alZ}a^FpCU_eFc#cmCU3sU^LPBm65?P+>a?MzJusf$
zB<sV891sgFG9D4n8p5#_{^b?&-TaP+7fYf;QhuSpg9&A9O<=}@Ns{-pv*6^__+89b
ztRe0d=dRuP?Hl^G!7ZqC`+amz&U7(<rvP8-3Vq%FS!Isi)1uWY8ShU-!qYq`U`d_8
z&ZW&SI-y}*+C}z1>mxKN|0#5j##=UF4`~GqF}f&B_V7dK_v7S<;%qrQs=N+5|A?4E
zm*AQaF?Xv#o4N+{tXHn(FTK!AU$r?w^Zo0g{v8RylmSA7B0~8?LTO+eYXwylNIHx_
z#E+!!Ngq)DJV^m6H}}|3(Uqu>nxz?|BmzU|;eoxwDd408kRHSk9w8@8ao(6kGOWo+
zgcd)+Lok%$k{QQRP>ZO)YC;F9l$&~iOOS)Cr36%k2x2S6W#AgK!u?9H)FKfu1&ixI
zEkcBR)`MAy3q&0t<X4)OClNRXjr-Y^k^Oi3y5kE!Fbxa@gz_K3r~lsoU)0^i$mRc;
zypXI8?S-<6#tY_18VN*UGe}VZLN|1k6_J{hZiBFosL>i3LKPcXSR=%<o|^{&nk3hY
zY!XtgwHL^3%(XgJn+)dLpmilPuf6<advhL5Nu!5A_U;}nw!NHIoo2i5-c~;KyukWg
z-`K-MVGK)H)8~F^c}mI4Sef1H7>+Fb^4OBXb;|KEdvKm-t0n}6QOjDHF%Pdw$&`VM
z&Rtn-2}s%gSQ@kUdz_E|$nRGc5B(}f78;u1Ge}|tLky<+oMeO5KF$l1@;j|Pp!(=i
zkxqL_*j%NK#|ZVwv&$UE^tvorwXSBw(oMah){qT6+25VDqdB0)VEXpsuzYE3&R)O!
z%@N|9lO)#=y@N#Cif@h8@dpWhIdksPWjXep%dcttyBKQ@yY!$Lw)=p9Wq2r-WLZ+0
z6L3RK)$_b~6O~C^$w8U0?(ddjjgBHVW#%W5uER+~jgiCSCQS}h?(*wXvY3f5$Y5?2
zX0b`MS{V}26_w;Nk-%`n-`MDWvQ}z>Olmlhy$37Yo-~c2F`&GrVhDyP^S?6Sfsp~P
zR>?;-gIg|YK$ru*&00eoLm7|Sc;?G@7`7cQl~kwdLct+4mgi-nD77ZoL_8SuQ7!R7
z!Z5>6Ifz$px>bx{=yOpCD_~-B1hjIo7b{^LsNaAk&6j1SScX6GVOrX5Xf!4r+kTK)
zof0|vNep+^C$?Xhjn4)|J-H)xN}gIG4i0D8$XxiCEqdxLaRhb4tm|gZQ>V>CYem~`
zX#GH+PTM?|;ikTF4XG#i3B4~M+smy{aVo?PW{|Xqjnz)$%DhPdd0q-0?wF{8**Qn^
z{aShM(nvJP5U?J|QI&U4BY`(U)WqHpgHZY7d$gg8$gpJ<QY8_Z)jY9UY?(&rL%}u`
z8VSe5$7F^U`I*I*ja?)NyhTj8J8G6k<y}h7Ds6YGX%W^C({VxE;?>an-Ul!73<@>=
zprlf9-iF>c2pXg2g@H+;ETvmt^UL*dEf2FQ)?sgdwK%o-FAymT)6rS7J&RvmbA_JL
zdBBx`QcJd~d&d$(uZz_9kC7@e61TouqBHWnZ+x};U_$&d?+0Q%)-8Dh=$3mz)3;b?
z%=l*w@tSBSJPZ3AK?n_ao>PWwBvcHR_}RB-@RM07Tk}+DFF^+9i7@-Eq1MI|OlF%O
z2>XLmH7_*_ak#<1lLS47f0}wz)9T-SkLB!vRc8w(%u%h|p3GXZo>`euBL&CHQNM-m
zUoK9mF(G{-@9hBU^pyrasdxx<zEJa##MzKGP(gChQOuvHc;oBmK?qVd@S1Vw*1?QV
z(vd{@N)D$6haX3TtLVw&ponEuv@kvfL|}*td~1=6&0>IPG%v2q9kQHk+BfMxs=dqH
zV`q6g`)mj+P_ODK-&f7woFZqXdks^hR4Cg-7WD4aVH(-tSNTF0_VWgESGJ0Olz~b2
zbln*<^@g`U_NRJhOIFY6y4st<aO{oIif&vqa}V_)fW(C1pj7Z}2uDO!U>NN-*;2wx
zcK(ux<RnYoUC}I7xwz(0MEXreR8pWj;HTwCNx)S-x8K}FErOt~QqnDEJqlm9gS6NC
zK62Xh`HGEkhwP&1z1Bw<c><XxCA~pMj6UQoEJWtDwcc>;ja7?8M%oWYY8np2&Pg6S
z;s?81Q$%*#N0VQXy2C$jywvIlTVPtAh}A|38pImOIqB4%p-}t=C6iXR;aA?oqF%vW
zHzEt|&^Qo_mVizf&FWkIoZMyOHe$JR5t=6<v);2D?C*Y5r`Rloju_d1%ktBMmntVP
zDh@EgS&`_hpDgq{s$7~ANx1MceHIm&N!g$za;V$UPx^8sT65pM+F%`9p@^;rbKa4!
zQ$2rAw(0M!)gJmLo9zUJwMp3HA+16^ACd|2c`WZL7tea#!dr^8;}l&J^R3beU}^XH
z7~PH?Be&4!xl{$Uv><bx6m4C-q3I2MnjqY`H5UfENfH>6bs;)kmi=JEOpH4Zn?2~q
zsCWI+IYR6OT5ELsW8eK8`*-r3lkQXWYlk-Z7tc5`e8W?2UR&<XrJ)H2SO)^vO=|A4
z`M$)+TV(i!d!mf%-iXJMjaoy(ZCA9w+n7p;7C;%sjj{GCE8J-9jSF<)9S41CJlQ@V
z_A!}}FBba5y4cBdtg*_eWr~yeDE%mlmD5br!}T{Z+a>(i)GT*;YxtBlD4F-^i-}kl
z8o_X*`^2;df6AR30_f?XCBtNUZ2GlXKfFQ%tb;R3JpO$l2F3g+?3my=!N46yl=@BG
zka=h#FJC|@nHUC{R)h|;C2azY|Aygtbw6_x;w}|K=-WHy4kYEfgXTb#H<&dM*X%dM
z2Kk<Fbjd^-%&bu}k6)q-Ciwd4R+Vb>LUe-FkZ|#~u?8qgIp;PGBvyoqJrT9@tHihU
zz2lE*I$)V+R)okIqtfhkj$be&<`tlKDEE>%+dJH4%H7^6w_*Upqd&|jimjFbM;-8y
z7fqvktwn=(;3DRBI(@|e^0zG#o2$F0ezKsi&si63^u7$z3AKm%Ye(G;4=gz)<7;rj
zbLnT`imT%rl4pF>?OpW)8_^BO14<}0hB+yyxARUoCtvtP+lWFXSI@N>Pb8@hONw?`
zY1>|))q4d`S7|VKC%&N_<sP^o;LA%gYeLeMp<1}@yBoRX6;_im#_s6USS@H0d&b0N
zJt8tH5gCBn?IA4agZmBTl0p+dF@FecF`_)t2qLi@6pzaqAnZVu8+6G6ah6MOf<k5c
zBQgm;$ai3cJFLt@xD^*30)$B~qyzET=jH&bGdsWAIlj&eSKPX&e4S=p*i~v7cHFOz
zFt#3XS^#bWR2|y3T`1N3Qk|OOJ>COpklrhktrM<sHwj1k_;EG?jOd86Dmj5JRC+f>
zZTb5SfftJXy~S^S9|(Vmou|=4&Uh#g5L%RfnskZxPh!W&`kzOe{%7UH|Nr(fLBqf1
zT^czH+u7IvZH;9tY)$^8P_8EbKKU|R^+FC?5R;cA@>HrD4aw%BSY4xkS!;uOY3WBs
znt~NE(OED21?p;_P>Se<^u6XKfy{al!d$53%QU@c5?ukmEB%hQ)6DY>+~7}se%~(|
zBVtfKa8_uYWp~u<@WFb=qXP@_)_T=2+U!y#J(^{lZ0uRpQteaKfmIga)e$bV*5W^i
zDB%jl-_kC~Y|$QKgGqoKMEA_JZV(S(MyIoBDQDJ<;QQe`feoshh}58%FeE`=LXgsX
zwHYvivJZk23@~Ta;PfV(Hj?g46&&EFv4y$3E;<(A<|oHWm;Fxd><}`?j}~x(@R+)w
zgn4qh?d?L9NX5D0yDh0~ly>}BMV0|HYIH%TE~P7Cy%rc3CP2>Wceub;)A@b5trAZq
zUt}hmdY@6YYGP>lxHrTSEOf8p?E_cYAJip`MFD$)n9ONpo)w>wn$BnH`&;jq0@4(}
zknQ=RLfwZDt0pK1fBR)!!dw&MHz^hsPf-A)4yXn@t%_W(fAew#Z-{opAo2S+pXk0j
zKd0KBgKg#L$;SX6j+^H!q}kC2=jw+Tjl&c1Dv#|a2|Gy~a<xoeoGi9sgg-`tvfX=J
z^$wIN=m$G~Zk;CAnx&32T3~0F3yag^KJz?-KyGFkY)+~^(zt9OZj^XyA9r@+M<Pe=
zIgz(+LwC+&oj>#GdgLZ~aE*ZY2)@KZDaqS0GzYS56y=PUxxznie*=Y5-uMYQ>JYkK
zm--zTrNHk=#U#d?9?;puAY>G5ijr2ONMK0cPgM<Gmirc7E`QSYC@9TluP;r{!noRZ
z(1?Cimx)eff+B+BQhw4^Eo;f?8N#6mH^=iOTB0b6@<DG!gT|`AI@0%^Zy=$jj#n%G
zRmDcoig3B_*IM$gQr&O(9qS8u$S<&3y^KOO%!bRMKZ_?Hqt#H)jbuq&o0C|G$)Y9n
z3?H-7@~O=v`?D&A?tZtZ3}wiT&C_&|r+iT&<%MpW;5jj*lQ)!=?|Ngsr;6|fr`)&D
zDP_2dVVWMx{8yv?##qty{SRs?Q2#`l<o_;d|6cC>ubHb>v(m;9MfDA}{y}QJf#@GW
z9IRz&8;5=xt$^ykzGPp&L`Y|uY62~txaHzDIJ|*yd-mwN%y1US_xsGuFR)jXw-MUk
zxKM!BBP~6f^JMBZhtq84?RK@c7DQ(>mUtc06pki0K~{53Nm<lGd|A0O#X6%RSqVnV
z(sRp|R?{JcHn0R&w%IJoP;rI5A){sn^95eEA_dBSZ>AiMRoToucgcA=-S9@#h!YYx
z@<T!RhKRC1)-?oH$2VU^N4;A7m#3gfnDIAJ`a@&sgPmo`{<Q_`koHTQ-6Ye~smf5H
z*T|AWEG}VnmXxg&w?h@dmAi72(S>`S@ZX*yW~$;VFz1lM`iZRC^-UGSd4{K%T0O={
z{`IGR!u*iVk}cLkSd-zWrcmsLF#dZ5L3eF^;@!vt-uLv|DD$I?jxD;R_Xo(?35vly
z7(V+hLYGT(G;$K5jA4(WI(%SR5hX!1n1*pJ#$M|asSy>|bLFvO+5&wy{y}or8G=Kk
zL-7V2@~#(h=4>yJKN4PLR@32DXFSKu6w7T^^D8^Cwp@*M^T*D4qBar=(Uk5QB$4|~
z=xQfpa6DSES1G!)x|x+NkPeLBB<^~w?c!abjG&mpq{y-{Q{=*|Q_n^K_-Bx9dQbW7
zyrM2^>%`=89p7Wp`QS1#_y+Gjp?@ZATTYJ>Z4QSLm&i$>B1q)45&(EOyxu%zmYI%?
zrXtdSn0BK21Gv|UyYta$iLhkJ3v5al?wZrC3wUj@Ux}HLA|7av`9xEQ^5)-Zxgm>{
z<g;B%xa85%>qrgbr@Yk3yhB1&Xq{bVExP6~R$EnvCBNQ;`EPy8hvkH(c?uBHTx4JB
z9+nNcHocw#ze)Ror!lBb++)n4?zVv3GonmwXBytph4*lMnr#6Zd7zn^_q{@Dj{cTQ
zEYpd>m`Qd58Dr;g-vhoQ9sDto9EdX;MyTrrTO(Ztg@RG<xUoT@$G5$ix5;8PoUHzH
zWGR|Q`Ed&*ZG)L^xn&DCiiM_%Z;=o-$}qpQXa8qrsOqPfwB&G{72rgkhctv2n%yBX
zwkJ7mfYouVL9qe#A!h`MLhcb9Yp(^XYLVA0Lo>~KoK@KZ7?=0j_Zh%az>e8W>{DD;
z${5Q3f$XnuJ{N-6e06P%5X?`g3SP$l6$;cZpv|Xk-R)P7F|m84<r1ky&)Ra(r<-&2
z%f87yZ7s}Fcel<6_uV)X<Z<G?M|0Ha#C#1B)Y9(*V)}dpFw6qt86-HBDpka`Leh|D
zuQ1o^Q78-8H-)m^>ve1w#i)fa5`?#q`sLKNTPLtin$aH+6)jl&rt4R1(GV{k%FSu6
zbRTD2@EX$gVkR;v0H5#jnB+kiY3FG0jI%e`y0C*t`_Ip^eyyLJ1LJ#R=U;N3>VAQC
zj|25vd*M9VHW+y5gsW-om+3-sKYWu9DShZCCWBzYkY6#I9SpMwttDmV%)?FbQH*8`
zvJ{X?GTc@a1m;beA@Lyd2?!-ocH*`u-)Vmo?Jc!Al_ReYEDrgE7R9zX%{VOVZzBw&
zjIV0Y7`4vFPKnM#2AQ3q;;R`Ml%Z>wTz*!<y!)NB?5N|t5Ay%zBrQ(}#cIGoKxW|n
zkL1XIaEXGBW-c}+w$7sNMke<EUd_#p6O<odL>>JU{o!0d2qT6Zy$K!_DIQ1!5J5>C
z4n({*VJS4dNU;U$O`$+W@CD&ds>cJ5Mn?EO*Yo)D^XI$%4!_<Gh|d0;NX#yEQjRRi
zxm+6F92LrMnFUJ21y>*2#{t4T!%O>q+oDuR8Pe8S`bcDa7!;3y7nE$JjnaWe0_FId
z@734PQC9Ts3uI+EocbNU#O*g+(?o(j7%}O=->lITzY8iXWaBRw3>|)t@fK5X5K4U!
zrf#1}9rkA00|<^jw?4!BW7Tn#=&c;2atEwn&+bqMhQpbyM`Me~E6k%LLBr6?8Vy&~
zEF){YGbYn_9(cx#=%X{RfP6y~U8N}{evq_eS6xx{kjoaU<Q+YhcC{<tny3($(j0Ax
zu!Kd6_%Tii>8hv%H%-l;`B)Kn4QyFIak_jD!mAXgz`ArM((a!klM#RA7^78dTy2*B
z%Yd&oY)L9#KtRku|H**t{|y8Fr<j(kr2CiQy0iPhdvCZuz<%c?BchlD4ds!OOSAaj
z=#99fSZ^tf+_ygOBHV~$NdqK`=IcXCy3HQ5oHp)mpMS%HxNx-e6D!1;2xtzxnH3>T
zD$HSwCxDYZ2+MIhpaKB*ZGCdIOi5HyI56N9Bq;!FCZxI0eyI1P?^m-QgbI}&{5Rc}
zz(7RZ(bug5<g(44m$V`tbR(Pz@S0!i?J51FLh&=N&`F&<h_u-fr1q8#b6RCC%HyKD
zExM(v%6u7Olan#g!dWNi%393bnHi5KMX@q54sDFJn$LzV*mOJk?F=WXIyEvpy$KBy
zvnUAncdQ@znuK#v3ob9zGF$G%K3xa-1snjAM{7$>h^A#L`c6BBR4H(%s{VVLiY1JE
zaP%MNDhdxSWo6kAIM{0}gxc6^Y=qp{<=An$!I%9#+XSZ%H#nRx|2kuVmm@bx=8wTT
z|8Zj&%YVaQ^8XPtRc&<?b<_`d42mGhK9zQjN(~WV;-OA8fy%sO<UVw8!F>2}3rrc)
zh4CTjSLyZ89!-63^G+E03oTurU-?!KX7_eY?=!|@+0B;fD^uxCGuu0VU7XJcKlS~<
z>>+o|&5<yhvt<UxaLQ%V$FO3Hlil|*pSzrq%d67Unw&TXr6^>jXHIk%TUeT)o$at<
zqeWKgn8Kf<>Czn`ST;83p`6LOw+gIGQD7JFP);=%nN#-A@u(OzI=OSI1nAmgEKEjf
z7KGWeWB?R&Znv5_a<7$D<c(ta0*PP`RtJEiwe*zWBqPspC=u*Eh=AaIv5KKcbc=L1
z;|Yb|lOaa)LFgsP)VB7rvO^VpJr0XZTa}>Q^VCBY>RcmYYBAp!pocQASc*%lHps7<
z;0n;Xxrk3u%%kBMEI34Jl3zC2U^1%|5#LX*zW06QTCcAK6L*jq{4UT2+GCt)fk!|r
zaXOsL&7S=1fQJX=x({A}Etg<v<jWO;gaVajdA%MZAn)8(A-wqUqCp`CR2dwjmzu7L
z0heR0Bg<8S{_2WUaStfjvyQfw8a^HJ&{?t<BvdJc!ArGIX9X-=&h?v<Y~EBzokqj}
zqLjTd#eg%B)6_N85K1*p!<!+_=xEZ#VB99gsc@qzPJZ>%TP)?Pi{ozGUtHE{BEM7D
z`>Z`Ig%pOo$9-y&EE$M(+;y5+`pK$Gm0Fhh+92e~shxEAWr5EuTx36=t0F>t8`nMa
zh)*>2ZzC${RB)-WRNXBtRPhiO$0Uj%GCPEgbZwqhX_`OsGp<bjGALtN;YeV<JAP4(
z;8198y0`$nZ+n(heL9DvwD`(}ZxHRHdW*U(u?YSMa{t3OzpxVA^z?^7gn_1o$)>D)
z<)Wo<1*JX=Zj9V@G#Uu+z@r-jO*%d%7L-9`>tY5>;_`g-`xgbTm-mUI=8~H`uATv0
zgm$Y`#`HiE*kRhvm0mLeF{8y&OL}FsJ5M$%{&I7{T?G$^lrU31no737WN(j{Zc~<a
zYmCc+#DrEE7XeRfY_1BXAwYulQSS=hc1jl*=OTxd;CBRu_Fr9z2%RTBq3`vR1e!!K
zMC)QV_$OqsU>sw&5c3-xdXe2i@|WLU)b;k>ZE$1WqewO|qk2c;`Zi(jqr1d(cHOel
zqu&DtOZ5(PU{l(k;``h_-yTqiv;h5&NC>`hdEGL31iTzEm?8H52dY_zU~uk9HMfs|
zU7zLyuEogsk#FSd0g^T6I#gG(x6-@hw#kW~L(+VE)nHfD#RT2a(6wrofa73l|EAY`
za9g7cyCd)T6-x%h$Sk5ojbZ*VBup~70vHm7k*6lC5gFzvry-6VR3mgJJ~7ttXHVqR
z%!DVn+}D{^^J-9w`X{zyoc-8Ei-EvXs`O;(8eqS2P@f@ZBEJvgGo%|;;1MZv$0NF@
zPBgcM?s3}(`ur0-zHh8SmzTlUvm<xX!rw{r9gj!=pAGSyg4%7ill05Jnj+8O0Ekxt
zgP)y0p7~r~D7}0Fbn$`ZvyHnbY56dw&p9NI9#wUa2$K0ivM)=Z8i9cU;?p*IrC#4$
zv`n+FuM{b^YL(-cY5jG7cjA+e3g#r9nA>@+y)@LgAXI2!(6?SYU>zmIA}dkGrxRoZ
z@Kk|9Cky7VoHTFu(a7pKBIxPz)m}GbFg#&d)VJ91Sb{J^x2Pt^s?D5OC<AI&BiAgc
zkIizHS3m#da@o}Dq>&&%KyqOJk21mk;Bpm!j!q_yq=Ke@!lammqm#3;i{Zch{I?&T
zR@44#_x48#9WCvoYP)-{Dm`7@u5N?`-D9O>a?t2tL&~sg>l*!y^cw=7VSykSpeOyN
zFv@8ibQm3oghH^+X?8qy>CNn9I<q}ny8{AeC?@zl&VDnAzF|Ov`622Di;d4D+FI4w
zx!C#wiX1t~<ud0an?4M?S;yWJ&a5*9E&B->yIO=H1kpg7yl|xEtmEZVihX2O5d}}8
z!d10q`wa-tU?z7M^8#MG<tQ34%C>jHk1v<MNvi<uLX$WMd8R@WRwz4!TBQ=IKrb)=
zTd0tysV-g<u%&KDHr=Lmj4ND}8e}!@6OWZ(!0F1@U7ZFoqHl(q!vpw!lm_(>Gi_nt
zE#wGgwdHhSsC;SxEWIx}(Q>6$n>o9^@a^}OTsNX#caRkPn!l4v_bt^SSb+p?aO!9v
zFsSY4<|8Vhjk}swF2<S$Ud>)ezy)qB3Fx;!Nd%%yI(~j53ri%;MakY34z&qY+X0v|
z5hKhsGP%#lee?T@Ys+QB+{DY}!dw6>^}uQT0~XPxs#Mji<89`{g7@n(FFf9kFhuu9
z=d87;70e5CJu{jUQ3&-5Bcbq=OPgm!r&CL1qu*_ciim^0@68v*Us;*k&;<O=j)E7x
z^tBU5ady81_ezW(=_hexaY}!XXGZVLzhLPPKOt^^-j%!1JBg{`wTcB~IJ4;tX4M^1
zTG1?CrxKBvFSgipgg1>H$>g|T(5x9hOi&pJ9)$)3fCKOCPT)&xK;>zwogfl}@*7u)
z<&Q`@V-B>i5HM=kd@~f46TRhbsKdT{%Q5z*xG8s~I?^G(gR>%EZTbK9fBeF7;}@8u
z2&&2w!i6nPa<{HAaxx!eO4z#(=;N6I)rwTxseeaYbU!3nnl-<852*a&J$e<~Ltwrp
z>drZlFavd!=jDYlZ{lH#;WIg}XL{!II^ebOwWdiTkR{qQLy%^gSmw^djW`$quMK5X
zn8%R)@ElMJIz`Zj!XsJ-4d-2UYKS46m?4GlbcyKHtYSJ9?Gf|#?c_5T7<7i1N$9K2
zV<wk$M!871=uY_^LuOQ{LATWimzq3HF8DCWdX!~J|1U<5dnc{v{zxLSe`Hkff5_<H
z63OXrHj9)0b>hV6rxRVZ4lD#3H~|up1r2W4i;y?DlniwOi0oms=6Z8hi`Vo6$h%xm
zoCw+c5JF!l)68~u@ej~;mekGbnVC0NQ&-o=-Pze4kYjrW=)k(&HZ<uaQ447;)_RiU
z=8FhV-43;KOYKOxYI2o!1DbZ?Kk=I)r~9$!wd8s&#*!3?f+q|LDnnJ?Jt2-7ZwAE_
zmZHIX(h=6dKhE8pX2VM+EjPk4iw=1|Qcg1?j3`+Q*<v73nUP{-a7+*JW${!nAZ}i3
za-&)HtR{S#`m1}(ZjwkdrH*#2FmQ9D0VhaY5yN&1dS*yK)_XhYGV}sMXkbodFYpJF
znrc}@^Lcwq1+6hV6kt!SiP<JGh)*0((Aq`7`McNyZ(nN(eRyP0aafwmgCb{VMYO3Q
zYU)Fb9ucl{1fgNMvoeaJO>E?N?P?Ipwe*DIWXwyeG)*>J2TrMMlo4?_PEfjexzqtU
zd3%&d``dovNkl=J?W7TP{6V=mU$bs@g7y62UHWpeLx@2Q*M_ZRPtyYxt}S!+JU+@o
zZBoLup(+b@f?ZeoqSC?$aA;oIDdwhW<4y?kl295CD;if_3iE(==m}|8T0mcQ^TIzr
zaUektpYC>Smo2%_C$0U>?f&X^P9Ws-eLZPqPWXbcJnT!#x3A}z#)NM<BglRy_IyFx
zCu&w$^$fBpD_?Ay7^BDs`w%Bt4nW0(Myy)qV$6Jj_cnZw-+a~wrS(6-dhYy<{4G(^
zp#3}Cmi1%or)Pu3_z{fQSXn>8R-HmslxG#vBgI<UEZN3Q1&+%}ZG*ccSLQD$9G`t;
zuHH}fGG?JcXP!TKY@N7cIA-Ms4UcJC-S%HxGDf_0b}Sa#VDA|IA^-<Rn<DW~7T5pv
zp9qlp?-L+oVru7T@?V6hD`gZj#7`SXdv{K<1)*Y596A`%Ad(0M#9~8mt7rk7;^^Nd
zF$WeLnVW#r$b0>>+&Mef5<Kg4wO*GIhWA*mEecN3G-b{v=J&Wu-dESo-YqZJ-1ocJ
zToA`6HPI;htq1CmcA(b9Kv_CMu#vUr@kq!GT%{!rM5`Kec5}g1n8{)#tld+_)6BzA
zz}51*k`ZfMr2^C)5-*+2Q_IDaO@>|{)pH30)YeCbE<p~d40@r*RO6M&M*X{H04w(L
z)AEaKaWh-x+YcB)sy3^AL?~!H-P0AsQ6L_*CsenRMZKan+BTk3^MuC(n(ky(O<E4!
z>=)(uab$F2F&sTeNJ8LMMGt!aOc7M5Zs^7CbM-mmig+Z#RA`AJYj%X<FW!yvLvBtZ
z#RI!`yGk#;VXvS!|IMa=ImYjT;UBL-%|4<&b$M<|dh?7yDAX}1<OQ4yw?s-o_=^o9
z-F#UjQ=+!3^=e$-c51L&r=z_=OBt*7NoscS{bLq6gu~Q><T)1MCl}7afY019>zdSJ
zB!^2vq5<(M@%>M>hGx(w1r)CG!{B>jL+hI^J#L$_rG>SJtDNP92tUoo_Ny*qor27O
z??|`W;p@Ct)A-B3P1YPRDmdiRwrhJiYZuC(M{_^>k!8(z+ax%!p5!4~#akvSs9MY8
zusL-J(iH%*5<Netuz$4`?Ek`7gq6c<d`e?5?kTY(Z{2o=+JDsFiuO+lp_&@+&?UJK
zb&p5XiRJUP4F;{q{|@oofFn}e$|J1jlz+L=X7bQ`y=rft$;@o)iN*=XeLgn54=F6}
zw(*@v$Ad%%TD%&gKe9mw+#bdEW!5dCwGm=$e8}i~Uh-y$S-p-eHW=P9N&`6DZ`n~K
zy?o1+ivacb4~0@|0zGB)AO=V39#S2j#pdsk7z2wNuvPms15^E(nW-hbrA7>$*71fK
z2VLCCOjN79z7ZtktGveq`->FbDUQ6^&uCg)%smkAW_+XeL7%Y_SXie8lBATOddJ`D
zq8{Rh6!V^k0wX+v+~x_~-!tFc0B9SSlx8Cqu%qaUy#iiQ2qS)j<Cr;y#$s41A3`<5
z_^(Jl8)GTV-Yg4Mxn51t<&HZLM+iF9qm9L*X=?+^6dROD#iFhXYx7xt_dJ^@S(v9h
zp`QNgS&<x~sqQWEB=R1#i`L9<<!T1AgBWoAvhdn`J`?f)QhS6}g~O%T#!EKzeA51$
z)PO@VjRHp1Omn)Q1<Q0>j9T5YF>gLAZ=bkiCCrxr?gwpyS)hxZG6yp1NtitbT55-E
z977DN_PJ-P5m_I?Pmt^XYJyy%zU*xM39BIA{>iDR{P&%TFwn_F($>ku*2%)z!qr6C
z+0nw*?9boqfsX&-ARXmDDp(Np!?e}8*t)podxV;TqGuqQzH~+!Ik_x0Db?AlLI{&F
z_r{d%h21Ux{V;}%HzVI`ZdcaYmOvh+(ZJwk`xNKSpR1AI*XJG50D&8xHY890ftT+%
zka;iqNrm!f;qgKJ+;(589yexm8`qf>8GJi@@V4chg0l*x3MC0ATDOEWYf&9wl?SFN
z5Kee6OTPWYiS?cjH#bu7kZ`gN*^46nzPr*r<g!PF$rA7**)o@C5nfINo-IX(qiwX#
zI)Xq(Y*dKg)<~ZbwX^^Gt4~dFy|NiOS0d3M@X_{}1uIL?S~2=c>M=qSc`fTvg_|>}
z?%d#Loisrk!^(Y3K?)EXFrxsWl}3-LX4fx2hu^8e?h%>lv82uzW1RPUO5k{bzIJE9
zT<-9U3hZLjAnvk+^Cy56ORtS`_lt0?<0^CY?{6Q-!ZjE&_X1t1rh!&Y0-Yty#9N8N
z!-e6R{U19oy|*>LPsA4r^4su=gKS@U;6zXJX6j!3HZj>g`r+-uGG)#DKN{d@?;^&v
zNGD0gCFqxW2p`i?Vd;GuN5*}L<vTLLcllBznHv3Bo|6igNh2RdAR?-NQP3utiTSZ~
zicn`j{l?LR9h;xM(sGT`l4ep?Ddg>6Y*RuqS)e`dA7-}hqwgxr$h4ToBQ{K&T0P%U
zw47`2yIXr0IXg5$I6_)YwK%6qP@8bMaIHCBFA*s09&x3mDNC3d4y?%cfB07|dbj9R
zocd1yto_H6cBKFNYgO9T&dv633HbLDWoMwX$=^%#O5@B8RTcfSyGWRI8qA1f{=0Pf
zmxP&xyf8yXVelbyD1$WP0A};zP8k?(RU1_o(6*QjT54MdqWzh%Qw}2onNUoJotT`1
zul%nBPs6<e-K`ZJjm}PWDEyur&fO1gKi{{Gx>IZYJb!|LSlzY<F!@)fY+<Y}Xcg$k
zBA5quU=cJlJ8QKbgeM{GSbu{vH*MHre8|qYI(40nE@3skmgo#Ic_GQJIX;IG0?m{P
zq831kOJQF*TMt>Iu$O(!B7DD^28H$J@MrDC9uv>&jzm@tGy}gGqA2Z06bL@pXsTBs
zDFF<y!C96^T|=p~{9J@=b{}C?x^*3Nu&@P|&YM}<j*tUb8%x+<-jhs!4}%G5Va{B!
zXJxP!E9_qkda+}d?6p7<SxIm4Fo>s|cPaU>5`0~DfevERmh>S4pGoGxnTMKCq^n1r
zr0SM3sbHj$2nx7^NRfMPU2bUxyF7$a+Z950i5Kv&(Z!%~s2?(<-CHR}M$_o4PDX|q
z*wmt{M?|t+mZS|p<%kS+GlukZ@oHVkEKrDO(T1j5E?$Ft4D3hz8q?RJbVa4dNSQ&L
zvS#^c0_nVn_Cr$}v&QA_Ryv4QhsFVm9z$cHv~$&JCW)oMGB$t)ob62uy1iTbk-~X4
zg|P;;jYnfXt$?gT-+F18CVSa(VF7QsNoRT4c2#v+r5PkovLABdh|0+A{(2GRaLiPv
z(BL47D)(zR`kQ~kPqs<?If>_QqGcWJK5T^b>UGosF6Kw(?P>;^fPqepXgXwV2Rvw*
zGt=CSpY_Y=BM&O$TC%DH5}jXvt&|C86qeXn%}Ja~CbOuZlmd$^kZc7y18~Oim|>HL
zT%F@k>C&@`)n*cSFQ>ARJM9xO*oHj0ik)n1%Cptupn{sc6+~d6iFDhcELt}5f4WgY
z5}%622Jl0(B&#Ko{<bF-qe9kJrm~_Wh=RZSWftCh(`3k@ovshj3S~_-Uw0L95Vz37
z6YwY#Wx&AV>QUQA(kn<ujh0`gglZ0qYg~2Ha0)MivK8(H?I2*8Jy3~ftcwLBjGx0R
zHLdQe;rx}zpe~9`524)Omp)LuE0ItaS8|u_Xee$U%&9>Nl;*{pjiZII1mEBgv4IY)
z6dD7-E2)?;78xiQZ0UfI{XPKE6d#{M)3GgRc4@3-&$4op+8hqA=gDQ?V5VBlyPQ3d
z$9z=48~b*0Fs>Nttj&<mwncHPzA66&*w#_qo<gU<DqP-Tkag;gh(O~W)<mC`{Dku%
z$C9qX2tHF@O;cqywarh4zsJ-S#*@Vy>_Cvnai|*LJH3}NNXkQWOPW)#E<tKNzu1y9
zr}1Dr&DO2`ONQuq4rinhCWk6t=~<BO7B?q%0(QYfd%U$<fM77<C#lJ%Z6>FU8l#YU
z(OQOHCO}DY3;qDAzNJ%NorEJw?ZZQJAFWI3D^es=xgHBTH!h3}0!ZedyY6mRR_-@(
zS;$RA78XyXk73a5v|z7w>zTb@Gk(%t<Mhy-Dg0RdemD9Mb|*C!%(AIZ1l-z^cM226
zr7=>tW<kS;OEWTdh#5$41V%91Xl<U?qZuOT4ls0+mvvJ*&v6zE7*1OcPL<&I6}LGg
zLe3u_;At1>?io0MogVP*lff6<j$>ynEbe@Lvzx8X3Xr1k!l<rw(~OR8&SFk@_4$hZ
zITfymoIy}C46i_Wikt!SbyAguI@~@`k!K6RYD#|EE(TtjKR5NCTgd!DbBSKq#DuIj
zsw>;XnsA!7aJw;Rgz{Vc3qWOfh+`&F)=+eogB~*w+X{1#tbPQrG*lsMq=8mhgDHIF
zfB+Ed#YnIYLlPOf(;(N&dt5>KqshaP_sNzbQx)Z{R^oGl<Ug^$)T-{C_0g?#ZCce|
z6V(o{tH-&@hMl;mbUonJ)2>7r43n-rh^&Un?N#Lb`q9}|bVpi)KU#ut(fA`Pb6br=
z)~4AP)W+nLJP)tXgC>O;Y~O`)pVHzJQZ3xb9LcUgw(Ce!;YfN`d(L0(l6(vNBP<gX
zuT#=Xa3`6xm^`v(u*}p0rA<?zS&JvUn^)$#x{z6v0eCmeU4~q!Fbpl9b?*=A5TLK%
zA2-R9FTjEL%N5`3ODxLA(uck8XH8auAp_Dl>F1aT{>Zrn_DdC6L_<r&D@FdRlAYaS
z>lTqfP^aF(%G`X`(N`z@w$8S%<o2}!qW}>cikt6!;^y0WJ8{GOWv^v@W3&8EjIn<H
z9L*JS`)884*Wo>kF&J3Xk*Ni>CJrnbqSdr9Cbua&ekZUZ<*GRM4IF@pEvlYXWhH^G
z*y4Ruh*R;y<Jhy3Pw0>#GY(R|(ZzdS;+`VrGa7G-o{`6WoHxRr2Y1zOg?GSiGXw==
zOybZb5zHzyOjv`If?+qtQ-!~GK^?o{!?)<={PPG08T{O%S|o(lsaL;=*LM(t1@>dI
zKE`-uvD#3eH{3_$2qPc#?X(wWZa{1~&>KDC?O)YaF)u1Mxj#9qEb9Nqd9193lhYrO
z`F9`}bTs=9QM@|&UqW;Ab1@}_UYj1Kj4}e|2W-PW>laa^eoUG;1Izu5CYgzhtu<3u
z|FoxqT3<8*Qbh^x8?dMRC^Oeotvm)<$;E8WL?_?79Vd&=xAzB}K3sg$I0N^+@{VDg
zt`<7l)SoaGS5({PP$tW`8(P10QYWh$=!PNHdlVAwtan;Xe7cc-<mf0pOn?7M9EdvT
z9a>}#eSo!~2W9N8ca4ZbW#LbUcvVk#We^V}+u^NI07}q#X%7e>`;ap+V&%BP@x@F9
z<nM?eEWm-STiJ|O!#t#@<4ugTH>e-T1=DD6+ybe8wD^Q9%Q4t$1Ed!6Ci&GMG^sUW
z6ZsPu{B}Dx9owq3GyMzdf(N_;n_@EBz5_$_HuxRo99379<V6_|c|4*zw?a0KORlX<
z3~*PO+9qzQv{S;Nb<7xfBxk;fpVI42xmDe^b&%R-U=Esu@X6PB{Gt@ZxkBFAQaxxh
zA&xD-K`XoDu8I4i%Ilq5IEL0P8a#D@{^<!>=*U*BS#}!JSxr%$x@70cT|us9!wXhe
zirL6z2X{<E6|Cjj_7j#ruoJE^+amwit}+C8y5yzwphbI*GC}lSw7_`kU!sc*O_w9r
zVBAegBWR@`k2gS>;!E5rZwd-_f4Q1JC5YezWDFPN!inAlhzJC6N1NPp#_nNq5eP31
zFMJW}Vf9!?kZHDGkd?#6aG*L=fE~$Nb?!yarTGxJ22qz{{@Ql?4sOdZBr6glt3y9>
zri*Ze+>|?{0_TeiJ7vjek;Mo7zEl9%2r|vYhNT=S6VJyhlsM@8JY#m|c$JC%MK+Wk
zZxmD*2qy(F&frN@9DoNj`Uyp$h*1puw0>%`4_yI70PoE_5IhTx?fHvC-Qf|GM*byi
zVf-t8X8aMhlK)uQ`5y?|e?!3y=xFl42-{{=-M^6FU0gv=Nk#`BVi2ejk~YbIl2jDN
zW+eZXu*Bludge+iy}o7Y3j3n`2Jx~RNM0a@?Dw62!o8HXS+a8a<#u6>`!UDqXI8u0
z%hhXYElA2OVF==22uUTRoxPJhri(A3^?|}KF=2_pDowHN^3`@-Dvg#O#|vmo&rN%p
zG2Omn#l6b+Z4`!Kj8%|D=Y7m@>HP0-(!o29&2h=_Be=p#8;zTXO8VC7crcx&YblR$
z{aFYw@LJ{-Lx|(tXaJ~?MlM6lIYcp?Q9@+6*Z}moa^iTJ6-7KVM3b<}vTD<A+Cyf&
zn)s?hh|$Al<kXag_vtX?m_3KNp>A&fC7Gq?$p%7cPYM9s!CkPAZ(lTaYo*wHVv6o`
zu`4U}?}8ZVG-J%V&Ba~DR8>_gjDU`z`c~Xm7W+<&i=ETbJ?ffa#>qO&ODz{thwSS_
zb!r?2o^k1}71Ul1SII$KCBW3<<brBt3=6shwQa_L&BKe-uCMIXh<zdvfkN@aNlsj5
zigUMN<7FqSu|Zi+vC#J0V?VTKZ8tUft<f0M;YZL#(S=TQ&W!f?QY#j=kKB8#+@6_j
zH=fqKg_N?jmZdXA2S{Ya4(2^Y3!QP#h_3pab?gIjU;)=!c=e;m;*yI-JQnsk<GX(l
zV@VDcVZ1^t=2Z|9k>-*DLcD4o6k4hT1FoQaqdcaZSq$T^o?u?_-oc64lDvA0p*6VM
zFDQp3a3g21)eOlbB3UPZGv?Za>Vkr^;MlgCmT3$!evO7eiuL30eWseYTp-LM-z=X)
zWtsI0m{^!)h}t`|ZP&mMfQfrT3BSVomUVwrWBYbG+3hMT!_a^VuFhF}+nU>MWfo^3
z8~vF6dY(&K%H$NSO`dzQsis9GQ<%PhC38?q<n>=4ly%PWhE)7Pr1T#V5&fSc@}CP6
z#VY@Id#)<Uk&bW|0?ksJUN<64Dn3#*F#}S@QsVwfL2e?!wRLT4f9EFjW*-()5^nZ`
zps)w?#G0Lu4rVyCk=e}EbY{w}hg09r=L3{5+6)^s2yK%7tbjU#Td6jT*W&!AjbgQw
zHbcrcUMp4Vfz2755^p+d@pTj&)zvzg7WH5{oyiqM;`{3e-u%>H%?0)rSCjeWIXTRm
zD%MrXi_(vv-(-U<n<hex@tdSU4J$2hBw;g9EIK6jWs56T$#fRINZKZnr?c9kirc6y
z`M-Mrhu4_!K)TP|Z^lqs^BWEehWiU==N?SeFBDEd5kML6dz>X5TL6&`MUeDDHBQ@m
zj|h_=jFVso);E$M40X`r-SrSnu3+*g;HE;WW8%&Eudz2~GxBz<5u43<MlsB{M4}@m
z6mb`{e%(zYPZhYtx{R^hlce!n@tP=v5ds-w9`YH)CcU_j*PsV<?g<$2V;S*`m_2N-
z2CN!PWSAP#{5d8a4AMvYNFa59o(#%<xVMpXx~VkN=wVBjmjsHb_R+cI4Q?#Xj+j=o
z;Udw4pVK$i=Tmm=B@jgX3ceSp*;<K8NCT*B9!!WzQ;Z{NVO|7b*?1~dnEXP6B$>UH
zrMBKz?f!3FT9#<-CSqg>%(50{lLHP#g~0Y;k6H{F%+BwqGM8c;ZFhHH5gMbE;?!|^
zKZwAWj3ztbx6f$9O*RgR1_(5v2?usuO^WPJ4SAK^1lT<_5;}PJpTH=TsW3|5=lp{9
zTAjn@<=b4MZXeFb7Y$FL0L`(pQ9<yG?S770>=<8PVkqAQvV1*DXI7bCOQ~%jscI7-
z=(&dD6{DPtEMlS?XK}6aw^?hh{q?utKKHs#GqSkEoHJIx96!#sj8#rH+T#{B?1qkL
zKzgg-XU9go;0+ncdj*Kfo7N3ECS3t|hGDFR9Fvb2Ct0IDAphb=8Z-rC`VT+;|HzNn
z|CFEqCAt(V$=WRnAo?7%NnV7o$mV-5;tNQ5mJKJXp&|MUM662*a@udSk+{)#*;KO!
z^Y<Z~Lx+R$e<x4{T!>MJ=}D=r``n2&+PUQ%uO7wbg6J7`27kZlsI#b&O3rf3s&rzz
z#i*P}u*ov!!bkV0nHrbC;Ztide0?i(?qF0mzDznm7ZQ4u$*$y3CXbFSG0Wl*a?;1S
zf`^L!Fc5+Y9flS+Hz<xKV}Z8PySGn~U-MO3jDqe~j4!h;sQT@l1GiOP17#;3`Qa2h
zM->&cg7-`Paik<D@ME{7!;eNR7%5+KMvRN^I=03Jle<#3qczW$!sJm<b=58`J@>-w
z$TYnkC3O1%<I$8cTtEZq$N|s@-MhN|I_+0;{Q?Pn6+2RgXIfFwX1NCdKDz1?R_!oK
z%tF<E?9dOK6VPs^gkaxPhWEv0-K5lM#DS-}_82`21%N2(l1jdWsD^K-Lj<_(mUad<
zV|QxQ)`v!8|9tUYRo~8x>_vn--p^!@{QA(NpNnv#P)C8Zhm;e9lmlZMJa6|esgakw
zkn{xvr1&3qm;DdgsDH16zstP;wgi;_9#E&O)ly|u4gvEN4zobtMB}?FzWfzHP7cnJ
zhVA{Up_@v&rE~f^;I{M$);n25svw-duh&@Q#8w?VB0MB?JKO7z4^3}hwDZdC1x*u{
z6^>B23oId9AJ9uxleU(e^~4Et)rL&D;#vvVv4pOzKXw1r4kd&oL*Gg=`lwdWcbkE|
z5cC%E1387JtE9QBh3G15jv|0OzwT*tF}fD%<vne71Z>o)Ks@M7$xeqssRm^M)>rua
zG!RG_xu{dBQiJfF(VQ^Q*CZQ|m!FGN>~7K6OdgnOIGrpNZ3o**4=TQe!iZPRO|-YS
z4;|7cdz8WCxgTVs-ldI9H^Z$%{n!#W%t54De##LFi#<btt;;^rC#pky3M37n^ga@~
z2#Pm4R`#vlV*=in9o&{2uo>qWfvPV@k$(!+R)$$YmMHG0Dr9?p6FO>}!>24)RHl*v
zW5y&iCh5JHDi9*HjW@ueq}D&k-F_5d$a^8$RKP>1!vt<H!BLz*F-TENdTl~p(0rI0
zOqRxI<r&I{R1_dandMLfLZ}Dj!?A9XsC>#pmvWQ^hfcrFd~Tq^Sgx&6m#LoEg#c``
z-nn+vo=f&2r**TK%v|G`&D`R4<jNvaj_<zadda+m<9-p2l5w`c9DzdAu7Dd(p-wW)
zBw(Ss3n@&t+kOku0agVz{seqLpi~Ce>*@d*cluSn9wAVUoL&;$AM|9jfj$hwMA?pr
zd?{a+s?dB>?TK0we4ym?`kr-`aJL(-BR{rCtJ++Z&Rk_^`^uP20YD`gGjl*`MP69)
z6-D<cBJTMtx%uhpJ#zr>_mJj{@tFVjejfB9%thBf&dwC#{}(;|U-U9mWdG=COkdLu
z6BA9!9bzp7L31ish^SO#<b|?wi@u@|5j)}ZCh3;O>1%X9*sLy(It+$5b3>m0tG2I<
zs$<Kx1_A_k4esu)2_8JSyAwFLySqCCcMa~ro#1XExNC6za=ZJz2D)FmZ+E^r<BW0Y
z$C`7WT3f1C?KRhJcIc5A6@*_TsUZ{B(M<CX?vbyDpO=^2fs{KNA%~C0;Z4JhgH1I!
zVXcVcelQ>m<-vR^+Ts*y9Yfg7*r&W!1kHp&b4ZEWD;7hkFA|>1gAiPQO$y^bCSXO3
zEnSdY)#O2592ErY-_JfDtUl6EV1zMi8;51iK+HJD1D?H&_Z}J&W{%z}fFSpB(S+r~
z;8<$kC0eI>U&*hI3`FU6DFbn8DRRZ`x^<MCK5=R`dwMYG6f9H9Ad@YcMkTQ=HmF}5
z#I}+(&nltbS#~PR`D=~-DsHD#x@8DqED5R@YGafO@#ocAdY@a>`qwaV60NF><IRyv
z6ZczYp}L`<r+PcnXI^IoR%x1K(>hD=ghhII51e~S@(1cM{1$@61N6Pec^0f}pGrvE
z>ASQQ?i4@7eO7mK%X69DVnOq74_1>SG~Ed)cS2sJN^q`HilCA0qNO15$s+6c;7^L}
z@9GhYv1!3UNNCMt&P_B9`9}0+9oF*RJc{jongCNaM}zgx5rT=$`sKB4WC{l9!Xb(_
zC`ED-@8jVr-K2co;&7_&;uYw`6%0{D&CTb_j`w(-$&6Bw>j!5+tPxSn^UDlB(o%I;
zMW%Kxu6t~JVO<f37WtFmb%GZ9juA^vP*|^&VYZ!&CTQ`^ht_mptg#~cR%7Sd^r#V<
znbCGsJQ*4#+tO{l-sVbpZ?42GN=uZCvv<qhGP=C!wDO%sEZ8`dUGjDS8&s!Dlp>1^
zD@9#jb&9(H?debEOB>dU-~DlRn|lB1kABaVv*qORv)>2(vfsb^^ZouGm-m<<z{EQg
zzY)nrPCL11@HYb<nI57<x)mg-_(J#uLgu;hD&;Bc*<Eow;XMGvqb`5g_tcI+xKLKT
zaFNV&vC7E}HU}<m)0vX5ulH`@f#@vti9{SRcQUDZI<Q39P?TgF@M<t3a_zsgIV{Lv
zK(TCJiKRi}h<{1&0}vvabP~qWb;Vh}%Je@pdE|G7)H$D3az71@{5<6XT8smm<HJ22
ztlUnSsc%V^prf^GGX_tbIUdA~c;<T{$?If7LiCmt+u=b=C*<63RZhz~FJ{7ORV27v
zVebxkNwWI0f9cI@{`QEfXb?*32dAo)?{Gz|wT5PfI6{j;LD~U?IyxmxbZ4XNNdm~M
zge*kb)$iIsMA=x<R*Vili|i81dbqpR_FYHcViguf*O|U^)KCLgIpV-CLHq=;E#$c#
zW(&yVoS9^ng6O^!6J3H6#2%dO;awT3TrgaV9Bsz*E9dB4SxO%$!KsZ4aJpJeN@;5t
zN*at}FT-{dSb?Uqwsd4o=MyUV(U^#8x#-zoTlYbX&mbH#r(1)=2O!Vdx_YtoG0{4>
z(2xX^RKt7?H_+?y1Rv~e7m>TP<DHTQ(U6n6QY}wzD5L(Iu`8p=;#OkH?7WH@RYG|F
z&K*n>HdXU{C$MQe2k7epwc)?qHr(3E`RxC^Z7Bcct2fC%-?J0|AAj-kty|%5k6}v6
zXyosyR$)<VG@zir(fPiIpoHW@s)ldDnUATQKV)5?Io^Fd;X|Sgf`0&d0M^8HJ?Tcj
zf7QdW04oob92^9{lw>pfm5pinE639H$pwz5)nX8lpyPVIkes}ryGpV_1);gk6lz?s
z?T~9fV}7c&%B&y9U_5k3shGod(*3x-;sF`zi1q%>w=6PlOcCGX454yT6#i<}1Y{c;
zU6zbRGG9M6;<Mo|2vi-^kWI$4&SeJZ*9AnaN8%W_ZrFG=qX=QZy2$b7PBFepJBD|P
zE8%j6q#}V5TwsL+p#U75_XvjLrTnaRUS13B`#XWzk|u7P^O+PhxkSMjnQGS~GXvt|
zZj|w2vQ`J{LKI}`;-x-AfpumIkX5C5wv(|8w;Dn_JZMuCb;?xY3u}t`Oe0PU6>}Zu
zn;Xe&xz2BshOq<G!a{H+t$?>6lJ%;ra*3z3Pj%m3bPyn0mX!OlB4&K7_qN4Wg3K-*
ziVcT>;m;>WF`VXBS{E$r2_l0Zj3YDNdMkbMHYH3#ip5-T=~e1&_4edqv#W6-hXhM|
zXi+lcO^La<LnCpKf=bxhe0m?CgWwGN6zv=F;;oC=RoIQel!tsj#=3XsU2?!!@gd2_
zFT2Ax(H7K$82rKTwR`IdNlJ+EqCT}_1~3*`y?uaHUxvz{bxu5A%ji}L@K*<fVn>-{
zuWctp&c?{jek94fZliz!YRLnM{#+PIpe5Ju>vYLH44PR*9j8Ek>P#mkaWHCxr}Q};
zyxzBp9o;e6%V=`8<C^XDr&eZmk;_kXtFqr+6AZS=w?4Pn6amVWWKaa$g>nEMKurCt
zl!6_z+O@2sRepoi(YJx_8)vXMXI}_%1#wt_0Uef}afaYYTGg1Hb5Z8{Gw}K~d$$31
z%LR`t3_aGKn6N+aF3$t~v8XMCCYvMHSgX_j7(vq9yJNjS=jN$jK7jq1w2r@ymcPx%
zs?e_TQ%R2={rZPr*P#d!`|#g`5)!Ouk{5^q2>^vfdWP}8@?Ion>u=L19hUICa?cp2
z{7{POJv~s%TBC{@=bH!>uS#`jU)Qt*&{z^FJOoUYy44@fPx;-ab2(`C<HKCtCfOWu
zEZ@2=Ke}$gS>U={<9mkafA**56QZA#F|oxeO*J$~sOX202f$%2Eg2S6P8}7OK-=44
zdes`Vcs6uE_zgvZ2jE-yRP+~|VR?lQY|vnRoetDCE9Y8;2Je7&Ng*WA%J5+tq%KMe
z9MPK7wpD^&lxzw2MBIT)^3I!_N;ZIuk^!C?l$t8vh~M13o}?c>zV%7La#j0UyKSb7
zUktWZdc6mN^{Rcy>q^W$We$f?4fedzo0G`!{Rf1aF7%S>JVig(PkGxX6JhlCb;{`1
z9l{~YX2|uX#u9DlNpyX*Ne!~!3!rP0a6?7B{Hrj1ebwyTp+;o_Z9x6Z4QJ6A7fkgC
zQwT%FXOSxBVZD@kF&yO)cC_`Rl|nEZ6$^952E9xDJ#rCG3msg>RrD}3SGe1|67L6H
z2$y&eg(sLBvjFunzJ+gwrRUo7zFBtdk2And6uzBB#zgfg2sDK!T?4_1q4&9nqZZH4
zbKVq#FHJ8j5W}njjl&V45{#0<)A({6%f_DUG?^X-MZzK7>9@Ei2%=%&%atUEE1$(L
zbfk;JVQHEufIPmR_c}p4FRMu+AiN4AEXokdx-m|+eKndTTh3+^Jq0kg5Wfzz;e=*k
z!jc`7?=@$AUC610wY$B;_$rFM^|g|ArvLmbsVZUttY4_6p%M-n16JrUqgLXr@+V!_
zYIze^Z^<ZyVjQ)sY$zpbYEj(+BXW87)bQ4Z(jcWn{$zY8#eBJVaL7#~fTzC!nNO{Z
z#G5xF1`08l{oPQmqMa<>RkHZvBFJS1<!qP_xG~q<nZz8Gc6_brV~TC-e6JLXnl<7I
zQlglP0P$HWGKgivqOH(WEb4U1u_|*CTE?}n1vZhi$gxd!O)6%1lzr^P7GS;e#TZMw
zBpiqYu6HE!9vkRKi!%Ml**SSR=iB6M3PD&2`S_i52Er#7eoQrNdrAu!Nr(*;g~QIi
z4~0rpQ+{XEOH7O&>0c%fR8u+WgAbS-r70K~UD(c$0=hu}k)!xLxNXkBfgCIdPsML7
z`UXSwfIkAixOwr_Th_f<Z%xu1C%uRj_z3MF)JIcTHs~TI=8D?Xm5LEbctA%fr5ym-
zHl5gRm>V^kh3S=gy+B4>!e<pWiv#M7a}CZzMS_XOPzVG6sYM>n!)~{IwhkT|ohB>_
z^1^fuPH)qRmaMhn`t&LD)Q+G)hrA%i9+7tAfUMP+i%-I4y;87Tph}+#sd2PAeY_cJ
zslp_5)9}2nNiY|Z%rc?1wjd2f+%$y>p-$OsxxF=Dn(0Oj0V>~ylXU|3rexEDA8{2t
z&UbuTa3XfDNOAK=wejuSAQf{4PnfE1Awj$iSWE3!=;RMeRFqn3v*bG+Am$+LPNdAN
z$WinIj?LxCzaPz<@F>W04}&0fqC?QJxUjgUBk+um`|<F4q+nXFVAg)3?#n+ep^V;=
z`p`&)+RckY_g%<Ndm<BPq5rfRk=?7vlti~R92jPN@IC#sW4^bd>}Y^(b4lX}1CF6@
zfEx9&=}rKrrc6@jz4rU2d&4eyE~ods#aD>1XDMFc@AIe9r;CSodO59EWHx>v<9seo
z{R#{I#>d{G6yX9EM<kZ9bONH7TfW+(aP4!Xh-+1K7b~FR^lsml3^!u!FbcwYyobU3
z(jcfJn*W0hDMdE|Mp4%31PinC<UEEqHMfn~2TNSzDpTd%YouzSk7EHL><2`nLd(Xl
zLuk+4M;CCKh(1|Ykt9af3!mK8a5Y$(<69Lbr!r*77guu>b(WT~qyeVFw9r{OzY0pD
zlnN9ht=<o}c5^!JMQS3!Aa0hzJ@DKGP=0n`X-*%n*1%$vWHo=oi$cv_dR%<RR-)PF
z1AokwyFp~Hk;E#Rouk6?sCLH(dAC*|MIS_oj<<#k`xrNFIZlT281^WmJvOblcj>`L
z*U$7Y!r)uEaMvbWMdL1hBd@d2TNHEC3Ul}<<H3x*mAhTdk0@EbevFH(!%Qr0d2ZtG
zkRw6WmmVUJfNjM%5@>t!2`6D3jxl2@xnA~kuu-UxD@ug9=e_j?wWKYG;cl2{0>iFE
z-==WAuVuV~Vi#BJ`W~aE<CcRN#Eo(m3)yU%9N(4chF~V`7P+yK<(EE~I)B%AGTIZU
zz!s`?bq&&f{Ws&Kv<C^fCYMr<x8iBCS$W&CIUt*h#uto?xJi@~EJ<iKON18mgsF`v
zgJ6@h24*WbDyc{3!CwRul7g4I*NAgKjTxy(D!(@EgiNWH#fml1q89brk5$C&UaTX1
z+rsHyS@l#+D;?}Mo$EKitt+uh${tj2h?P4)10nWK!LEu~v|IZwa}Yh)VA8!C8E=Z)
zE=!acTlO{-r<!&pOamGnl>#}AM`>HO7_Rb@y@zzYoEJb9l!&pex4NgbD3o5<?jr%E
z=#4Imy<oCzM0!yA7#s3!HU|7O%8pEHZ1`d1901tWjMQS?0XWU5otX5HGsdS@8C^4c
zS~I^9b=i<{CePVwHy<#5*~~%qD3*8ul)@_Opjxy;#LWw=V#oPfdM*}hM<*lC_Mwo#
zi&V?dJ#6^vg*~oMrC9sq8~z6Mky5GrK;}v*5)O+SgZx=d%DL&S+Iz81_i2qBretEj
z9R|sz8VM|K(Is6`Z4WoXxgzVygS2cCj+*q!kOZ<tNC5|DyiH-UB+}+VX-U)2f}GCd
zh@0)rX#9mNa=Ee4)#Fe?t@^&>0Ez6<x`MDc6#50qS%$$dsKV`=4NPEpsIw5f5lR`J
zMl)F@HEHFgjgDg1D5(Sl`{Lcucla0-t0!_O5|w=!LSC~HA7guTY33!SvoJT9j90dd
z!yO`G4;WR|hAbU9PcBzO-@Y1BPeo{xs%EtT&UPmZ3`$9LY*x11*b&1$M_ryk*@vu2
z7I!ToqQ&l3%B&A`Irs9!tmK`gnjEU2)Qq_Wwafo;t=knqjb?gd!gH<n+Kc7Dh+YyG
zf!WYlI2Dm~@0AV{!iA7)%GW3jWVu^nl;r)d%?E19S2ZL%Ql0hrTBGZkUt0mJR~<U4
zZ%}(GYZOp&QfJn&@)w$?0j&InMd)OzeOPnXRp%0G`)Oa_cG5_5gr85&be!QZSZq?5
zwsu<&d@vt4GNdSzVjn{q-ZH1ddIwiIX~Ez+aTO1S{<wuY>O5T2<9dz-6UoMRzuJAt
zkb@b*Z5=B2R?b@fF>Ejac>Tz0b31_OR!CyjC@8V7RVpM0YD<;r`$7);EjN3~R7GxQ
z;^G}h9!!=a0tuvHM0aJND!LlT899ex=2tWY(~!orER=(salTkNb%P)HwDS>juFW}4
z)A*Z*y}6JL*E!&2>&vEMO~I9WG}nGIn6<9wIcwIY^)YbrHl_YH1M5z;*D7dVnrx?m
zsWIACw?rJ5Vu>el(0B7XoXbLPWC9i<5#B8M7RMd$r!FR{-(1bn$Fss`XEvOXe8ugs
zZpSaf>Po=!ugGhtmH@A)wVFnlmQ$5#ZQdQi<Zt?}a8-=Gq1g)r;&zJjndmK}r=(jS
zR*&RR@K$_}yHnys9sKuUUJ2sdnJ6aD(pR&J8)uxakAWaNh#mU~3ywKYH(|f8Gz^m)
z08`jgsSXu8;ebi?I)_}!Fb<JT)KTaCpiw2UucMjXv+UV{(rWYNA;&-0ls)1*q;DDG
zaXCd$c`v^q|KOY|a0NiS`B0$GVICH5ca=-iBvwVvl5)Cvs>40?>G2HTJ%c<QuT9)^
zQE}t65!^BZ{#sM%tJ1s|j;V7!gHc&ix-2%>AxPb+p+g**Xk;(idJyy*z~XK^NL}!8
z`<LG3{az$hEB3h$DJ6IYTE<aX$I4vis@e0+=};Hg#T0mLDF&3Om8G_vfnpCD0g&~;
z6Xj_^dKqvu#_y;UGbQh9y%FXsz;Nncr_KW7;r4>x0b!jm-m!br-XQ@u`{6%$0$hW!
zx`QIuD|{#f1)H~{3TLU&bweh9T)4slqHF3^rq|F+dQ11605O`2wD2o%b3>P8R&}oM
zY8xDjR08$Va5^d2J@=<@xRKe8AHH=8oD$faB6AaZ^w1W=q{*1jq<0T^N-M1xN!&u7
z(muTL=<G@-wOHA@QoB(nxjlBc0vjaklD%=6Kg^MqJBGhPO~*AFD&h!p-?`Y$cTE3w
z4<dDgvN5_nMsP>8#e8Gy!?KlC1GwG6Nf{>LjsLz7yPp>!cMQkDeU*<fuWbKNrBL?h
z?NKvk2v@2ARu;#3u{M(%)EEIWon5lj8x15L@=6ilj2Ivi<mgR!k%xMM)r^H2#S?-{
z9>~rZdWq6=&&9A(*A)z(tg`aR5xC42-^-^5;W5xrq~kj9=2nZp6M>gVm;LqxSwRm?
z*HtqPdE>3HI~Y@I-2j)-yGnDwSn})cq2{Tq{WN!GM;@y-E0?7b@LuG^RXY;dZ#a_I
z1ScN^-;&OKjFR~%7CrE=HsYkQX0Q*8DH1fP`C;S4SyQB}sKv*ntp@UwmE)3rWYC<x
z?R;p0;mFVlr~f+l#%IP4d%X<<$_wv|_`-{Zd|t1+BAK$z$aFIj1?5up5avSF_~(4p
zt*e%%#G;D}SBhNvRH`_u%m&*>a<*5=xH0Y65bBOPx?6O@NVlsY1!Y&&8E<^j9X6}N
ziVuC!4gElia&mN;R3hCuIG)rmn-*r|1mF&sa!fO5i7>bWsa+A`4orC8kdE@oG1ca+
zQGaWg4t6*E38H3uFY^O?8Y&xHNI2f0L^G)kJ8j#ZHBZg$iT|P>kv06c*aVKtH}0es
z<-`i72j9mAK||0F5Ycw{^U~Ec<2Y5i<j)6wR4T`h9?n&Ym+6af8gBr7i!M&=C_c%V
zv{A^e;o2}&8Mx5F+8ks=OG;5h6Zbi{McER~rsP(=3P!2IurbaDpk~J?mc?vTdRHo_
zX!1A6l+JWj4<r<@6ctmH?WxAw$Nu27cAngNJO44YqH?^bUF&42-)g74MAwjwjeT?E
zhJu-NwsM@{oG!*ON4Ll=N0Ec{$g9b0+OtGMLAW{oe3!z-9i}>>b%=%;DN!TSG{$(7
zFxn}QSuc>~x~l*>P&C)}o}W`rNWXAp5vil2q4p!Qh-%K1DQdhJ)~mJ!wB0UZBqJHw
zQrmY+4|MM`ZIPO=AxkRR*({r5R+ce@ATgyA;$qyYl8de3hVAr6loV2!oa}u-0vK;+
z&)`DR=dc3v>{TX!cW`5mGb``%UlSu~edE@3`dBMLYq`(!uu9Ksp(r_;amE^};+bh0
zwDesNEkVOQOiaruNuvsm%e0k3{GArF{?Wufyd^HLKD&Ew**4LI%u!YQEfIX}+p(I6
ziqth)*JzZ=7DtCEGB%Z^DR$~=IA3aO4SfSWG^cFLxYVualnpejpb#2MBPNMk_xrDb
zXaLO;E0V!dYqdA=b3{!oyTtJe6Q&&8vV-2l@m%Y}%+v|tld@Px1y#ylc8``S<Mbf(
za!{z&ar4y<{rXtP7rRcVK0Fo)t{3Mtr?1&d#NuGL_FTT^a8E@&rSBENRtatCqure!
zwyNtSa>K?Wd1MHWu;T4IN%`dQX$|@K?l1eESY~hUDiMHys>%PWn8;rOA^J}uBmX0|
zW%7qsu={7U!9Jh%a0YTnVePicNSfM6ZLGRlAD=?>;6e@Las5ber@#`#>?ohA8p(zI
zj|tSaT05_KiAUrzV)F;<c%^Ugk}a+=O_p7Zh{dPbA(^$99XKu*FPpb`L@u?`A2uw2
z;J!y7f`Z=Aa3xHKI2(?=r`s76Cb*9+MGx^$9bO+gqgbNFoMZTCB1)%EHsp=S_g?#l
zkeiD1);T{dkIh3?locqeicoJgRPI=uN-rxkN0|g=ai!kogq*Y02kp+1B&uzxIaW}#
zU55ZtC5=WnaIzzq+0aH0%f!oSH1lkI6l{k=d3b|qOXG2k)>WG?*81x9W^P@>aS7Yu
z;jA;*Da_*I6NfC~d-bMo7@_l+sLNSo^ypVGYTbD)U@nFsC9V!&+*o1VLEmd-GEjXK
zL=+70mz*U;kT@F_Dp$xbM?Hl6QvLogdt0y<9AdGUAT$r+(4w4BNM><M^<cCdcnrcG
zYO%_cMR(yQIP`6B{l_{rAOA3#*$_cc9*~2uc9U%(*^IeZo8C$=PUJ5vu2PPBJ~Zz$
z-+H$MCp2onn(Q0(ff<TtWUpolr}-da-*M-%(POsjcy&4ub&$hl5)DAPeCQNlr$iXS
zEY>wEhL#zq0P~5?Ch!Wg!$O3anM$V0M{`BZMhu-)VG4WGb4-t{K^@~4fD}f|Ty{lI
zl7u^R3?T&}h;}|+O&GV!K{XgiAeE3XjCFyT#A~QGKCpewvBbKus0PCkLb|r-5dij;
zFi06Sn)5E$S7H5)YuS&UN`%qi-5$)5&Zwq6x_w<*a8iMu<q!LlmOK<x-B1i`T2gLR
z+StY8274QaI>z8tHJwB@_$~Rd!7~nw4QK{oX%oj7EkXd=IGSDz3Vmr+(gxA1%YvSe
zEOvh~=56+oMfLK1l2l!eWMgL6v#M^T4M1P(>ziu%^fkoD_0o?CB7=s!A7^Fs$Hqd1
zyxvjLlA*J32XR}8*Fvj!@!~Cp)j1yaF$5v;j3bL%;4bI5iVtKF+o{^i<Md4PNZV8~
z1LjFoA@hn0*A32~nch)UzN2#fwi@tIB5}&}#_+hLO?3I{un0=O*IBc(?gS^8K@Sys
zDORDWJAbdQClhh&y-qF&OMHQer=B9OG}n$o^2PPhwfJ{4Xm@<Bt&oyet#XVv2`uV8
zP$^2^1|;7M3b)J$a^1^75Vx{}&V??I9+Q64jnPj)pWW;AT7Emu1=3{7IP}rlxkWa!
zm(B>ruL|=m((I;g_~kyuc^7m%^2i(X#85L26pJ;oQ@n>IJJ7cLcUU?&T0g=~KHtKh
zYBIWDq0K}s3G<{V;BK9{&Kb9l9EU)-4{yodo4~fl-aw42;x|*9Q>YA6ayrhxK1r?Z
zd=zMFoj7)B#>aZc$`x%y7C5YGz@-<OQmNv=ihYovT@jNEb$X92*yKuMg|<TNX*hgM
zTQsc3zIB_=X|X|@SU7~;L}gy>85zOM;lb;Kd`WDPZL>mJt05BFdCR`&j-!Fy!?9?G
zvvdp4iD)}h__W>R=LYiF=2f`B-nH}^oWBr@-5UB8$SX;u3ZCh86>KaBvPWNKYHaAG
z4khoz1g>7Nvb)PQUJJ{6BGfTZkJ}*ZP{yvyZ=`0uUuL~{X8p3ad&uqAu#M2K?dmVE
zk=RA|I`zE~zkf^woiv7;2)!d$No%L*;SBb<;*^@$<6vY6Vd6f4RW+@)KG<SMs*E^I
zXdbnQnGdO>^L-5d&QITu-w0S8oAZmrwjW$cKe-AB77tpik){wVTdofv$A8=?YBq{}
ze6*bGI@($2i*A9I%hX9&^g33+4)iNt_p8<7W1dQD0=D6uYRTcP_%KAxPF;!`@n{HD
z0zYHfkUr1;&H$UZIH2#FjxKk{m=DJHAC|t<VOAEw>ZR6BjRPAd>ayyrHZ#IO1=;L;
z7lX}uWH#jzv;r*ZVz>Dy31%+13CP^2-|J`^j=<B>5(F8iw?OI@N$84T!egSXz_KTJ
zKKPCG2&TyZT0_u_<lUtkJp8f|TEE!dxaAI)qT1o6h($*y@V;ZWEhVg#_MRz%u`4o`
z&h*)>PoHgKKh$9+Q@GGiJy#?+JIzvp%<$1BNqi?cX??^37U5y1IZ5IzkDGG?d2kK{
zjFT*OkGud_JMg=}^N%gN5Jg?;ig-*@jgxH(-m(%qhYYvlA1Ha%Z;%_;O}K&c{fehq
zYh&vb7;&j5a3xIB%r1*k_KfA!32O76&`Eg$mn5zs%3E0Nhin!TmuSwxnH<UDo3Udm
zFoY`>_cbSK$DQ4xH3QY6jsyJG4OF*cb~S}jv{s?b?dV3b9p{2?6S=0U1yO1zrTezg
z(fCS_8Lk@lf2ms(NU-&84;%={8R1upDd(SFOrNPo$^C85a6EuQ+zUjZB?p3Et(q$M
zJR4Q0%QpuxCi#sc*1Twwev^5v8p>l3Z_3rG4=E)d()k>oL3348wVyw_mc9MqqRU}}
z(eT~%?HZXUY6;abL&<b$a1U0qJgRCK9)z5W`H8TAvTFZm4f>*K@Tu?@#Wh2Y&ndc1
zI(v3<e4aXv>3Ehy-wlNpzAd1Wq!2i^g~c0>t9;`yn`_M6IL}Kp*rwY?jai@(r>FkJ
zHN3&447M;nBxWBb=FPD*dB6hhL8zh+VKzBP2=f+P;f$z6J5Z<kRW(56?n9OzV!QTR
zj4a9<1bvL?ujzHBE*;MOmoS6~Lo?!w<ksQ|E_4{>#hg|n>yIKxSy)97P2^zO7~;e(
zB2dV=qNs9-d5e@5&JE0qW!_XURjI)=od~D^6f;1`5F5!#H3Wf_D4@x)fi~Hy3ea2J
zML#^$S)c938H%YMck`7gl+0O_IOJ8mKM7a}OjK1}2B8;m|LEj$V|6XRvSH#WC(@c@
zsllvsCjy|#P*r#7LzKTT7<0>h!xT^BUTBGT9FxCQe<Xzz3DHt^ezIMYVFj6^mlC*R
zLo+}@l|^ShdP)QJ(lT9H=I#>`ZvHy0#;Z%Q91>?sl3@YVkEb0dUm8?C&IZ7&@P9Fg
z>tfPyHoO7h$|1qn-0rzQn}yKej8gQo=k+!2%?a4ydKX0&+ii>^g~KPAieG8tyJCTH
zy{aEE&bInJl*kjq-xw!5b$5D{cJr*>cMw;zvvV+~MQ@b{T$;WLIhChl@$;loD7Ky#
z;MxaWD%JnKxBjrxV)1VA@C{K~8)!vZ7et<w-`BV{Go?$3rdyiDJW7Wag#bTcnWPD_
zF|G_gGWKP#@fq+20V@aJ{MdsS%u2^=3`{&tyLAXIBk|ZIOG{lqSpd-^F8*G1{>&!9
zCO4;yk`Hz#7x_a31SoInTJ2&t&HUy?U%&I+Uqqb0^AHHkfB*r#`{mw=_y2PESX-DH
z{Ci@sxlxkRgnS78%SfPtcl;W5YdXzdkP_UtQRIfw`Xud+7XH@8OiVl`Z(tt9q)Bn_
zfFH>9Mm&4UV>Dt81inngT^35&eQDuo1!C_QAw+{f7rQMB^kdUzL(vOgbfH;Itl0w_
zKQOlIO{>tQ5<V@@?f4*gUmIGVn^i$mNlPegd|xx-WMN!=r9{NPA}Bom3DLUd29{u1
z){T}ZAQuWv2ET;lVL7|J_eS*$gj9ZE0J%MEl(AtX*oi4ppu^zyF@THI?CMS@S-o4h
zD6m|ixbCP+x!x<#weDke=-nC;E5szh{ym?1B_iW@cSto~F>bd89Tw7kqxyifcoWr*
za1GgnFeV=)$<pD{@o>!Y39SB%BMHd-9?8}nX3iDjlT`nh3J76!3#0)JmT}z2=ze${
z_m5YGjD&F7mtO1Z=7yKrdSl<zi}meJjv;eJQm8Y`^ayAGx^q1PliGG9-AWa#K3Gib
zN*W%C0uC)14bs)gUV!23+oWxK@Ebi`p1yaGO@$wiaQ^WA5x;prATSUR%P+S@iu^0@
zzbyRrE9VbNVKJciKML?8fzU)+=ZEaj7RH7)>b48<2PtP*M#&l+Nl1~E8TJrGAjj5G
zQW2wZzr%xC!35#ofgqR)vH9_cb35yScZ3IY*QSXH?JJk-rqtDeRe==@DRLNwX7zRc
z9AxJrFKFdhl}e31I;Iv%01>u{akVy>w6?D?lrZxikTSuiTYdcXHVh({2vgLCpL`O_
zjlZJQUtI`ToJv_Rs62U>u6M=rT$%wQ@xvaaG^ksqLGnnj5L0x}7rDz;BQD~S+dJ!{
z9R;(TU<j;p;mf*22sVVMql?h^C=ca!PA^X1C67QjEP_|KisgLDQk6a_6>$hHn}NvE
zgVZJ3DVC#pYurpy+;W_|33|f&pDyV>an{|%Pwe|n*j}=Kk`kof6b|`tP*`zsC6N~~
ze%04pYD?+ra}S(TY)o`}IvsDmsVY59=iVx?F%1q~psF?y%tEc!bV^<RAm{JVvkL<l
z{?2cHFoNB94o=gYRfByt$laJ80@%z@`%w_%gJjP*b%^|j_dnb3RtEj_KIvb)4-A3=
z^jyOIfArWPfnFYxLh^hxqEf<iFU@Wu1|<r9{-XK`i}K8b<Efb>pOmPukeocNr0}nZ
z;h!N80Y5?bYbX4bG3GO4-G4MTv7oip`KV)U@=F-9XE4RTg89oi&Ht7uegQf+5W>m%
zw+q4Y3={<9-v+g`FsHTr-*NV<c7r~nNC)}r5dM_~^fQYIkY|JbSB8ks4B=k=liA|m
zca-!$Gk<nXU;TZS8lS!E;s3dEX+!<BoZ9~!)xe3rg5kHYu>C{5+)`4<1R!Ut^Y{7b
zB>~I6Ko-)^hHm_XV|+%y1^EjCK?6e_J2P8B3kQIig^s>~H8I0K#~;Mff`a^sZ~4<*
za?kKfq5l;A%PIKhFGnXnJ6mG|fUSw%-?!_&Y=8iZZ-gZb5Rf4T5D@*d2C%{XnFjoG
zbYH7Wr1GC=Yd^mf&(OiJeue%oU@>rWG#7tP4uN<;K;+M0VX%JzD+;i&)iE>sKO0L%
zwRZP&e4GCvxAqK`m--i|5*9{A{}*KZj?=QnPe%^^yt;JHAj4>X0V(;%+20C*{n17L
zIr!63>b%duML7T6^6A797J52nf+jylgNd%)-=BD1ay_jMOZ|)s!2Rb+wZBAuS}T$D
z8S-nv|FqWZOOB^y*`7}ma-#oH4aS!QPfMZDJ|mEj{Ij**el=C%06jf86#vy-`HN;g
zE&cHJSu_3r71X~jtn!lVsf4=dGqPiq-&kAXCGAt;@8|y!RqMZ2Ykx`hRJ5Ay8QHY<
zf2=J2lH{pOEAumw0Nwvg4f`d-Q<2H%uDUV$jpDB_X`d?l@jatW`}iC5EML++)%+5B
zMwbEjo#KHnd7tVx$v@*gxBma5FZQwpPo*cspS2*<?zgH&y(E5`;s5-S8@v5Zor{;e
zPt&HK|6ym(->N3?lK5%9sn9dxRG;6Jqx}!p_(^J`@H5IK|KF9?`jYc$rrGn6yAk*s
zQYc^2Jx%a=?#_Xb-<r(!4~xl@{Ev6fh&#gn`)s0@Y)|*fOFm=6j{40RCjao9^W>HE
z^EE~@_CMR2|B~Tpoc=k3b?$%mqWd4_*(ae)&Swm*CI3zI|0U1UpxOIpJP)6LUzqeI
j>(gM3$TQZvir*HV`ydVm{s$=C&kr~f5YSE4A7}p$)Oxd-

diff --git out/production/integralmall/cn/armylife/integralmall/Feign/payservice.class out/production/integralmall/cn/armylife/integralmall/Feign/payservice.class
new file mode 100644
index 0000000000000000000000000000000000000000..b7b7bf8947b9add36d1181a19b64531730a03532
GIT binary patch
literal 1305
zc$~FUZBG+H5T30qg`yTz)cS^^CiaUPzbK~0giukE5)2TD@k6tBH!TZ$yXW3sp<ncW
z`N1FHk220~krx9-61-$??`C$M=h@krA3wi+2Y`8aT!j*YW~{le=}^fYa;Y8mtx%~@
ziZ7w;Yo3W=j&>kptU{T=)V3H1u7vLM)o2@I$6!n-NxK+)dD1zIt~)Drzja=oX6LBR
z*rch^ylqk;HD3t)EfTkaZp$R^g%v3}v^j(N=5pH<uIsEwu&WJ&8hP?!U%L-G<Amyp
z)D)ULRq{k8q2tsuk>`<!ce<GeB(TOBZILN{khzQ$E@(}uP8v<I`Hr!Do@ZWd&-3pZ
zyTf-e;*rz|7YBR!8h$P?cPk>x{K*(p20|6cU~*K*RhyutvZmoM3|^cWIV2MBg|}}u
z7|b14eNdfa@}HlTB*1v_W+eCHxm|v9<SLw0oQgyo6M>_Rc}#p8{<^4G!M7-EvfTDP
z=$weRXzMyPt#E~<dVc+1l3x8w&TA50U%@m&ySYc#%EOG*)=gn!T#^byhy5O|r#_#-
zvlFi&R;Ea}$x!#gOoqu^R1&o#lG-5(gYh1Xu5VffFFSu9?RUeRl<pmw@O@8fi~%(d
z_@_iOUx6|DtJ2?01;%NaAghs0l3gUbM0S%>E<*|GpMd2s1=F-5T!E`_jiR#^3eV8T
zDQ{xA4mY42Sf<N_2GAh8MRuF)j+X*=Phh(D2UDYbDpLt&!~1@KnIi8450k?jJdEMd
EFVV1hNdN!<

diff --git out/production/integralmall/cn/armylife/integralmall/FeignHystrix/payserviceHystrix.class out/production/integralmall/cn/armylife/integralmall/FeignHystrix/payserviceHystrix.class
new file mode 100644
index 0000000000000000000000000000000000000000..b94f04c3759172fb45e85df7fe54617d99216b75
GIT binary patch
literal 1205
zc$~FU%We}f6ur)~O#>l?miMEuX;?5DBtWSmp+*&zQb0;n#D?f*ViK2`apdt-WCOnh
zD<l?t03U@ocA^l`3ZV)%zQ^~TV;^7J-+z4lMnsS4UWIa$FH@mPMJfrpaKy(PM4XI*
z7lR`iT0x~9l_=X1l;3U~mT5)Mqc92B#M4N<m4QmE92t&cj-p^ss!{T6np&gY2NRyA
z(j2Q$&NF4I2x|OUyrdFT*wsUXT1O@Fc@__(>G2>!X1$|Bjt<!<H=id9cC1oCPdaC`
z*A!ILW+;uI*V~<6jp(A7jGAZ5G-j#Hswg<%3HDg^d$eU5x^tWmz(h}5js&fF;x3!v
zejC@o)^a$;6&*-B*29-<IF?o#9C@{ibFs|~y72LTS>O2^O{?jgMheXp^x>abInCVi
zEr&XebrQ67%qj_<`u*Xg_G-VaGuyX@hq9k&K^0`uZ2q!c*}7i$Io4T%Oc|Mh9>RNV
z!f86-@Lhl68jU7bx;itV+*9tYZJu~N51d8XqB1@dZUnz8kBCo&aSgKoQ6LuYe<AT1
zAV*b<C7)cOa~P{L0-dKCB5s=MSj35Yeko|gr{9!SuY5SG&Xo?W(?ws;(IudqM;kzS
zk2Zk{bQ!o_0F^)@lnDi*E1q%{@@sS*$QgKpS?N>*b#I_Gt1cP1u`qCRVc^!nz-@29
ap*uiDZ)Kwh5rIx15-5bC>%*2O-u($FvMD(L

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/MallProductsDetailMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/MallProductsDetailMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..e6c28d649f13b05039fd9ab44a3771370faafeb5
GIT binary patch
literal 731
zc$}3|O-}+b5S=O?f*&BF#DiA@7aMORYm68|Lb606iTARUrKH<#+OCOz&4WL{A7z}~
zC0UGmpoezm&C7djXFk8)KLDT)ohs}R=m&~26TL~X<WwlfL&Idmq@)uT$K2o{<<#g!
z5;!~LjtQ9;s!$@(T(eh3B~u}Nny-1_2vmf!++c9q^|!SH9YtEvp^lhPf2exBG3rgY
zTj|A=85VKJjYU1f18o)rYL-iM7)VK=)$RG2b>f7izOc?i!c2sUxx{b+kG}|ayWQp<
z1=~xZ78`t|O<p1J(DjRF`&xxwZ#QiMjW|bgV2rQp{PfyHX=OLNsm3PSZPWB;;zF)I
z(}@ZANJ#vqtN*%tlUfqEd`^@T5q}X@%q1Tvr5$rZD{RcQuT4l<%z_n8&KzM&SwYy$
zk5?f;U?0*|!igzE1@kIqWda9~4p9y22puA{2S=D6!%0DDWRxbH7Emi=o@IL*&hbno
HF95y)58l{Z

diff --git admin/.mvn/wrapper/maven-wrapper.jar admin/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
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

diff --git integralmall/.mvn/wrapper/maven-wrapper.jar integralmall/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
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

diff --git common/.mvn/wrapper/maven-wrapper.jar common/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..01e67997377a393fd672c7dcde9dccbedf0cb1e9
GIT binary patch
literal 48337
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

diff --git hystrixturbine/.mvn/wrapper/maven-wrapper.jar hystrixturbine/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
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

diff --git out/production/integralmall/cn/armylife/integralmall/Controller/payController.class out/production/integralmall/cn/armylife/integralmall/Controller/payController.class
new file mode 100644
index 0000000000000000000000000000000000000000..0c23ca8d07bf7d6e02eaf2c15b8f110049f99c0f
GIT binary patch
literal 4622
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

diff --git out/production/integralmall/cn/armylife/integralmall/Service/IntegralMallService.class out/production/integralmall/cn/armylife/integralmall/Service/IntegralMallService.class
new file mode 100644
index 0000000000000000000000000000000000000000..dd2a4b35b34dd6e94eb8d0eb4c01e920851bc94e
GIT binary patch
literal 1811
zc$}@2TT|396vt0cz(uYra`AqJMU?p90|SmD3^KDb%di9Lqhq$4?FQSVlcp$N%?Ce#
zAIkA0ZMR)^2gR`uP4YV@|8q{0o}a(I{{VnZcsULu1YUWPG98`;qQj|>hWnZYAqxU}
z%=M}8IIU;!0Aa?);VOaI6L!jIz@$$PTPNHz1gg2fhnQ<2@r7``)+opDR2V8r_f*J)
z?1|eA+iP`HJ>aIR+D)ce$PL#qfyuHedgRNx^fYHNC$Lg$6v;SAR4bu|lD<>FmhUAn
zmY`a_O<*o(N4%YQMkt9fIzqN>xO&fjt2Q9`w{>ND_5(JxvO%z_x0ljuD$Fu2E1>Fp
zG(c@Z^Zc9FMOA*pJ*C_EIqY6^4ypdTzKxjBxeW2EX=lP9wxTTRzS4W#FcDm~s&eM3
z0*080Qj!99LiRo~ch&*kvz-6~Rcl#xi4g&9h}huP%CYbzGl|AKu{q%I`VX1xV1(^A
zC{yjP&2j=8!zxoD^@ZssEgCVOcX<$TO`AAHm1)i62-6j(JXQE~DTRx&9da9bdH0_o
zfzSUr>bW~&<1Y4puWV*dt`ZgV#lh^**;;o0;a51927!fW2)F9f5jzVxn(`lE^}-(^
zb57euzLmhlu}ZYZ_eFqrYiUSN+^{7OSUyUm5h4F5V$lltj+DwU+f-1a)==7~afGeW
z@7VtKRp~D@#xBQ|Ig5DSa<Q7Np{_<V88g?TDC;TH_XTFb_80*ISHM0~*rrEe4A<kh
z8pVRZcJ2yHWT-L%*KwG1cxpJFhM7VjMYAwhpsGVRV7@>%9a@0J0xdbT47U*7Ml=F<
zaD5l<;Vg5xk3(vDfTo9K(`3)|2u+X6;h#9+r?66>RflS@R-k8Y^SXOKhZi_b;A{g&
G3h*02Z4;yb

diff --git out/production/integralmall/cn/armylife/integralmall/ServiceImpl/IntegralMallServiceImpl.class out/production/integralmall/cn/armylife/integralmall/ServiceImpl/IntegralMallServiceImpl.class
new file mode 100644
index 0000000000000000000000000000000000000000..835b20cdab450d4776d66fc95a9c7616a7974be6
GIT binary patch
literal 6654
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
K<Dd99LjMDT)h$i{

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/PaymentsMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/PaymentsMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..f7a7a684604bbad3ee609b00f827a7754a4c6210
GIT binary patch
literal 910
zc$|$=O>fgc5S=YFA%Q}gLZN*12I-}HtBQ({3aC<q15qP!pV(7p%YInvbtV5b4*URq
z6k=?LCT%#xhqdPE&3kWW=l7qVzX0GE_S>)_;4roly(zW2AgOGi)T1`2wH#rVk(XmE
z4cU-4WgG4a=w0F!N{u#^-=>!o2Lb(rGzI!tj=eJI%P&+4*d0U*=CINxe{wKnff0q7
zOUCHYaF@>obhEk7FcHvFHYd-rZwJwGzStS#to-Z@Dtn!*mTY;7o#)<u&Pn2MGs(OE
zCRs;YK&KHr)tbcz2aQk>l$MdoLq(XV)M6++2{>LMykE!V1IzS_EWz6&>`iKOCZ0Jz
znYm2B(ehm)XVY~r(&Z76y86m97qHU^pVLKQlWXn0CIdH(swT!i@hVI){vqJrzZVj)
zmCsYn>o!lGeD!kOi7R|eXG&KdH+Sc-ip?J9g$>Hkca^KDrc-NOz@VIEp*NB9sl*K9
z8E@m1;auW^FyG0OmH+{Fp!zzzkDJiqy3N%l$AoG{JJ4M~_iN|@Y~5x(ghveZ7}|hs
ouKTN9JMee`J*lDHRp{w*<FgvtTV_44End{;OL)cqD)DQ8zjod76aWAK

diff --git out/production/integralmall/META-INF/integralmall.kotlin_module out/production/integralmall/META-INF/integralmall.kotlin_module
new file mode 100644
index 0000000000000000000000000000000000000000..2983af70661ad375cc499ebc4da5a68ca46c532e
GIT binary patch
literal 16
Rc${NkU|?ooU|@t|egFVe02KfL

diff --git member/src/main/resources/apiclient_cert.p12 member/src/main/resources/apiclient_cert.p12
new file mode 100644
index 0000000000000000000000000000000000000000..91b1edde586e327ebf41ec41ba1c7dcde2efb95b
GIT binary patch
literal 2876
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
L|H7^D`!W9u)9O)|

diff --git out/production/integralmall/cn/armylife/integralmall/Controller/IntegralMallContreoller.class out/production/integralmall/cn/armylife/integralmall/Controller/IntegralMallContreoller.class
new file mode 100644
index 0000000000000000000000000000000000000000..eb8d277dbeb51aaf625f5453758871c850c14007
GIT binary patch
literal 7333
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
E7k?WGf&c&j

diff --git out/production/integralmall/cn/armylife/integralmall/IntegralmallApplication.class out/production/integralmall/cn/armylife/integralmall/IntegralmallApplication.class
new file mode 100644
index 0000000000000000000000000000000000000000..dbe5ed52f6fd0669b5003d832753e7a48705b57b
GIT binary patch
literal 2959
zc$}?Pe^(nt6unbYlExG;E!37;+iKfDLI%<PK(Mw15Nv2Gp;TJ+oXPGGrfha|b|)14
z&u^svfJcsg06&z+H@h1Mn9%lU&e@sFn|b%$x%1xa{`L3oe*(CNAJaI6o+J_(oJKFh
zz$>vOxFg&ee^PxVEzQt7tz4z=GxX#}R+C6Ej9V@jetpML>yj&1%bG8ox^Nu6*fx0B
zXgJCeT6u07X}p(2CWEu+V;J@P8V?%2a%=0psLR)$zsakfr+Fnbws}%ize#O1S3YD`
zazqeJy==2owDFr7DR)A)JYu!2dC7CvRjuiZsw3M%l%naWBnBArod90TDz_XZUCoze
zpjTwQ;Rr3$=r_`xV|ZkFb?!>N?x=0Pu@exR?J%sbs=O|#vjQ%+2!N)fsPlzr%~CW~
z35^x$Z#hz@ku|784AWg@GK7L?Igj0zWla%gxT6^<+$26Ya+;AsX$<0$IqG4Cu}ISG
z<47HaT{WH`W^e@`5o{oJ*%S5?x1xown+=9UZgFHag=-A`Edh$rUXA0&8GM2p41L13
zpZU&`Xfy~lU>M4E43@$zhT#)M8pKEjqsTKPiOpk@hhZ?+2`q`RE?NdM2uQ9_&JC>_
zd{(ZDrlU)qx2YtBQo>O`Nk5GOdQuo?I1{@p+Qv4K!DoiSSz-|R7#=CyW?<YbxSOF8
zJF?)Z&>N&y$+L-Xe_6TmakE~P{)$OThHTlhgtICrGL2(nLT@P2YNGtEWj95>b)l$y
z62dofpX;DD9VaQg;n`1x5k^a&7WUUnMjfU)1J89Xt}eAfuost`u2yxqssd#y&UHN<
z(jxq^6AM)wEafJZ32VCZddF+pt>_LVWL414Ea`KToiowECigULC(ay(2VHjZwv{zy
z&a*uk8J5cb;{{+&#6K33;r@T+JYXHmYKF-!O8l!Xju!;MU9daXN;jr&TWjXDDqhpK
z<h(M;f4NI;7fm9cD2r%n&x)^n8NXR(XyRyr+&dw&yoPkwrK-7n&NZbtZ~m9UbPLFJ
z=FLfItHAQMq`wm*%(li63W2;hQ7v0&!F@?EJlaZoZ5&7$VK19y3pB1o&ICSr0>k6k
z8iB-lNxtQG@U=y-QT2pxA4QpMnF((G&0<-~x0*^<sTMY=h9js_WSohN1hmi*h;rQx
zgca)2CQ*d3ayYppTv3ztNc+(cs=iaD#X$_&?rq*v(yv%y{bZ^lpzGV(B!9ZWhAp?)
zx{Qmh%eWYM;2M(jS!I5w!OVvhwUadB)H7op-2?lT{+z-W)b@tPE104-6D`0rzNG#P
z?&AinGR}9XH*=|Ma`ZQxd4A}h4uhGX*V`~s_zDlGe`xR+4M64@lw!Dv7TiAi*Y@!K
zFURQIJOUNbnT><ZQ9mEzeT{_}?`I<2WA?a@Ea9Cm?_+Q+-}479?BU{4A+d|gg#?Y(
zda_q5ySQG+-rPm5a2WOy1qSjItUzz~F&Y<fizFMvcu3`H1RqnOPXsLD8=^p8G<bwE
zq0GkQ=R#^rcpOt(rQRqsw2uN&E0*(FzKc)u+0S=zCx6Hwiv+c|3HvVkDCT*JWg-tn
y-UpHU@B~jOLVLVZ_%>{pLu-*vu0s6^J<mc0z;k-Oqi2nt7xcU&&+n-T@WVeGIBiq_

diff --git out/production/integralmall/cn/armylife/integralmall/Config/FeignRequestIntercepter.class out/production/integralmall/cn/armylife/integralmall/Config/FeignRequestIntercepter.class
new file mode 100644
index 0000000000000000000000000000000000000000..8fe23f4c0f9c1d3093c31f04b3ea1fe6e2ad6651
GIT binary patch
literal 1808
zc$}qGT~kv>7=G5Aa3mazAP7OUwp2|JSgTblK`K&cXansShfdq8O<0oE^VQ8p<)`!)
zc<qgfGdkWm<F$Xl|Iw=N9)gO58ES9dJ!kj*c=mZe_T`%=&j5Ufas~&Ga^ZMLql@A2
zEpbP1Uxao3OZAql8HTPI6)H2!kjfWUGdPHD7a0#d@EB$yUFXeMtFXSVMIi4+`Zm8S
ztGpJ4M&2`A%fDK(Y50w;b$)BR6!~jXGYr(FX`jp)qgAzKWRu})zEJ*;jz5?eT^wS#
zwqN^-)OY+2C^G29VGn)iXUKej$xtA0mZW>Uxn;^5#>BitVyCZS4+b#k;;4rq3^SbC
zmleYyidK?>2wEZFL`SY2k++QU`9jzVq!va+Aw?L$F&CpAj^hNwU`H*6Y(q4cBP|zv
z8OYEylT`j;jZb>`5??X&gv3evn9{Nx@S{2)TEE^=9u;HBwRb%2;SBN&-S2@joX(d&
zRV@~FZ)Gr!vo0n)Ok#>Iur5_S+|KDu8N|LYl1i}Ac01d_?Vp_@b#z2`ILC0g7ILA3
z4PUKGuBaO7TKIwReNNT6uIhZz+O|!X=v>!iOwz@9hT$EK-=9W=&6$tZ2y3>iLb=ik
zs#4z+RiAeH%TZ1Et3oUL-`;dgLs25Gls^+qks&SO*xz6n$?tL9!YaiHsfa9wT_h1y
z{VCBydw62#)4Th$_&>Uo!PVOpe`cQzMRnTvxG{$IXbXnkiV?Nj%OXzLcCkoIe>PSs
z`(<ew(b})V8WQ=mm8nE6O2wkG$sFAyNmCXdHSmpAXjC9qRZ|h1xiE}Of|UG>cjT~1
z#xgP+v7|Bx;wYrPEK;j-n$`^8(CD@+O>B}E=#SINXibkl0(+1ge@n6}+05c1NpDL5
zmvEU@MzjA4X<6gfa7hzbdJK1Y;su-s6VK865ZRT<O&npEc5==patwbXZ@<1^c#g5@
z^x0h6d5W>$Q<J&$CQcnd<sk~c-GBSa0!SqQ#*ra;1P+afgBV0NhH0dZActcZ!zkfC
zjs=`R2`3Yfvjl|WD5g;)s067E*M805D#3P0e-_^p^gg=6HOx_@9M0i7=IQJQ((Fg-
hANxiv{EMuM0T&}v_|aaSo~wkJQX-e|Q=6fmfp=5*17-jK

diff --git out/production/integralmall/cn/armylife/integralmall/Config/RedisConfig.class out/production/integralmall/cn/armylife/integralmall/Config/RedisConfig.class
new file mode 100644
index 0000000000000000000000000000000000000000..d0187ad525df02ac637e2cd28d06aaa4e64f0838
GIT binary patch
literal 3053
zc$~#ndsh=j6#os0MB<_pteX0^XoDoIC|V^H2`>wVfIy-2Wrr{cgPYx)*-171F70P%
z{Ue+s=kx>gJM^pc^v)(?cr`?OPIFFXcW37Q?(g2YkNNZOH-7+l2p&ZnLJ@>5oIpE6
z*B1YY+YWaN_Wb&m$Z3Z55$Q@j$`Fe8tweB=VbD_r+b=2U7V?T0#Y<1Uus68owh|lC
zw{xBn_M&-R7R8dowTL2ukQq){u+YhH))#uhb6wIPJ$IVtw5KWzQ}Ikw?6*QS4F^C{
zhU6K7Y69d7CAlMi7RsLGxfj0Y-kqf(0A1Q$i{dmsGQR01&hgAU?@Tz{_XAyL8TxZx
z(av*U3-zk#*jqKcK-;=>H|nmO<E4^8>_Mml=W!u|n1xSpksNxsJa=7B^T5^x<&mte
zq;omp`<|lHNM|w(_cASuraEvLS0cD-;To<p3^zqEeo2?LHz_ok(Yqpjxh@^4D~3gO
zjbWrYiz6{o#vz|t=*3NjP6~@g_+R7iVc&<4={rLB(4!<zeuj7ieHLz`pW#spvb~cc
z&&!Tpu9PT389K7_+2_+U*)$#MQ5GBnDDY;|!T@ZB9^vwJN9@zIb(Bw!1K*l|O!f>~
zxQlxXXXt1f7a8ufL?p<y`wWkdpVv#;>^hLqL$y-$(841OQ^_M@PetY34u;XDWvD^R
zK78V7&_^tMVbHrxM02Ms8W}|J*ut2px7|EX#@9nw3c}G5jGKx=0jr7?N9KhsT`dZV
zJ4Nm|HWj?QEbJCPdS?hvcpHLToRO}`mW%5`Et`WU_>7n1&I%{h^j)6}>rLr1Br`4O
zNKtO8#){7H^1rCn%^~);5@K>r9g4;<{^5*FNqrwq7q^aXA`DMjh^K$)Mx@8`_T*5q
zr4%C9?G1=Z>1|M~wQluDX8&a&b#P{sly=Ptz3FW%aDz)kDfl{;WWnXStVs1Q|4$$t
zn|^Gu>}pvQL7Q+ydbf`RNpzTA;;Y3g-Pm%*1$PN6y5yBrPE1SV^R9*j8!)OF9vm01
zCRJ9!7Xc3)F35A6qET!r=m--uZK^qi(+qi11(zA&NALrK-D3A7n;JWI=bnCn>qyfD
z)BM`N%oUTy3Hq|>$>@3F_BPn>!SW=H?ZIRhrf9Tk8!(M0^kn!FGYAL5e<4Kkz_T4h
z*0#|xm*}q|x`Wee-EG_G%I=_travAI$HK31?lmq|abwlI->M?9nv8|3xRcny5N&!;
z#pj7+6{$oOqlw=LG!zgSz$qFp;3Q(`#3j0}U7_33RU~M<j~htgCK0=Zr*s3DM?4@r
zR3lX<Y~E&Roe{<ik<XBc=P`^qWJ$+043gXe8T71fYHimd?OHNsGZF@t1J8VgmAY?M
m1A<=%vunYuxxary&u{7f9sRrM`!c@A^RXCF>%os>v3~$*M!-}6

diff --git out/production/integralmall/cn/armylife/integralmall/Config/RedisDao.class out/production/integralmall/cn/armylife/integralmall/Config/RedisDao.class
new file mode 100644
index 0000000000000000000000000000000000000000..5930cbb7bc66a0db60bbffc12aed85683db91ec1
GIT binary patch
literal 1506
zc$}S7O;6iE5Pj=>l7tcnrKO+H4~P@MZ7G5(2nkVfX@Ck)E<J6MO;~Wek?nx;uZmQ)
zqKB&I{-~<6j)@A%0Y#Q}c4ueaym=n&pT9qU0ocG=3I-wxL^FsX&X7Ij=iIWn)3gq%
zr=sRF#5biQ{Vj$_-mHuviLnGy8KjY6$k!Z;yREJ*8^V%~FPbj5Timv-9pyA+(>fG&
z>3!siA?b@&+vdJt_)u1E)AHJ`beav9x5R~V&#XH4x#jA3tEOCG9r^k`05}d)ODWvL
zL;~3iCNagZJ|Yf7TD84h<yN@eq0@Tayc4A${Gcsd?n~u(r8K5-KY^JH9^fIv>IfJl
zt0ze1#eDg;^rb<MS<xjQW$+kJD6^?E7lve-gRTUg-T1vdSr}#yJB}|~q9Q$6wZ*pM
zDF2$;#!ywNf;*no;5A>lU5ob<tnH4kE+q9@Vu<djIw?C*mX6r(w5q~A<^<0$RaP}_
zSGX(nIdn$-6G`<7<-5)kRfv;rpG5bTbiKApgC4U&f}QF3sliKz*m-XhA~YBbYa@*V
z!_3X*y6x)*zl;L7d6&MnsBCsm_$R9VnQLTUxYR+CW+R;Lg(3Qw!!$@8sg7F{yHYbA
zzm|GMM=}(LcHmJpp?qqTeob3>QqM#Q^Yly@^uRD$>7gL|oKA7Fb7UiAW5H>jP8L~4
zHdgonc1arpFT!A83@>TT^aAh-uLIBpEK-zC_6RIWcCzpdiSHQSUoI|PAs4}AP)7sZ
zBdgaWCXl610~UHoA)wynVFpDe>CPl@dgf5X66G$31bUto@>rUfK`9zY^Lc}}A)lsx
zPRZs%K6^{WE6f`Bji+Dxj8cI%IYOKc*v$1(`fPF`n<QzcIT-(ONCzB@fJ2N091Oe*
K*44hq?}2|(LW6?<

diff --git out/production/integralmall/cn/armylife/integralmall/Config/SessionConfig.class out/production/integralmall/cn/armylife/integralmall/Config/SessionConfig.class
new file mode 100644
index 0000000000000000000000000000000000000000..6fba714f1453c1c325a9fd6f9baacb21b5e1d78b
GIT binary patch
literal 563
zc$}3{O-lnY5S`dhYqhoNLGa?q57691Py{K83yVT4J$RelO}DALNlDTVe}q5Ali<N0
z;Exh#w?!1Zn7~Zl%*%Td^6~lh4gjaHRf8ocRG?Ug5|kM<hd4o=po;ljFchI<P(GJR
zx(fz{{exZwstk@o#nGfsiR=q5l@qbSB*i4*ZLRt;=3QZ})M}0x6x%uy3>v;v;&z+{
z!rWt!P^IPT5R)Dnnc+pT=myd<;Qqf{&KT6XdTc^*EpzE#-Q(<847NLC<zy;)(n|8W
zR7yK^#3H{FUz?cQk&!Cy8%)Jin@1jMGM+h(-_(Ws*yM<8AO5^(=k`28hunxr+Dt1O
z`-jw21bpD!h+nDf?VXHvLwGSeiSML1^Av_oPJ~CJm<cAH>I%||YytM30d}E6f0!*s
zn|_hvG9jL0fYRYBuopTkL5*TLFIHiNVtr1ayqfpd^4NeT<p!PBDYuBT;lbt?MJ1ks

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/PointsMallProductsMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/PointsMallProductsMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..338e1ba17e3fe014cfcbb6d68a5abffbc88aff8b
GIT binary patch
literal 819
zc$}S*O-lnY5QZmyv|7Jv{XTe=_R`?3P!TIqC~UDPcoe4FahsA&mTb1*U-RG(@JETW
zZJ`D0p)Q2Xym@&hnVqlik52$-z<CkY1T;b;(Z%mty^&PLQ{+&`sI}~3l8}=<%WB$X
zrRVG*3-dTXD8hz-@(9N$HJV61_D2+Y0R?4JavWS&gGF{|<JcPcU}IEf3AI`4Ft1B~
zXa_xX7?UTLGS5+H-9W&0N}4OQv=&gQ)`Cgt%quMemHH+do>gSfXO0Bi|1#XHcAHxU
zmfw^aEUE(Ts=@rpfi+RHwi;K!aq>&;@bfBpv6;}euH^^?)R&dBv5b@-W__7pL_^Y(
z-^3xq_Z_7PcS((DN_bs~@Q)^yo^9qrYAelczx-=j>iH!ETs&pQtC(I?s`{E*##oPD
zS;MWp3apDHCKwKR68kKt66c25JT?mg1gt~;ZSVwcLV@!lXPW}HARo$YD6zD|(i-e?
hz6bkr%fZA_hC@D_Nfq9v?jv5uljsCadC$>j06$@2^_Tzv

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/IntegralRecordMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/IntegralRecordMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..e91036f7d1e9bc6a085a0fc5703ef1a6d9bb5c67
GIT binary patch
literal 464
zc$|%p&q~8U5XNV#O>F&Fz4-#t9&|4rgh-(vLLo(I!TTf~(=GcaY&L?g=AjSZLy41E
zP}GA9%g%iJ@!Q$&?frEF0M~F5Lr1_>ZY6s2qSX^gWdju+wLz`r49k+doNl!_<<2iZ
z#Ta%44A%IJQll;8eYU1N2#A!e$a8TqOuut;XN<G*))`dx2Qe8<nKh%Za?1zwXef}c
znC07R0lkVe(<fRBI314C_SrfpEmKv6gbfQ-SPZo%0pnkWoBvNTW>|mWYM;}c(o8%1
z>+_clpYP_i4a(4?s#K<FVyz1pl(RhhdFp&2vBZ4Ep=K;s62A=FXp=~QfE{R7hXd_G
g#C^<NSHK=L8TX*i(tcxr1Kx*ibp*$JHs%4q2XzsKY5)KL

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/IntegralUserMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/IntegralUserMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..f2042ebda8eb35905ae0d4f0a8ceb1bbdaab0822
GIT binary patch
literal 615
zc$|%q+e!m55QZnU2U}~c^@J}VErJ2B#4SQmgu)iZqW9Bnx=qQUWV3>==7kU7Ly5C%
zODnx;E|Sd8mwz%d-#?#U0B{4R6(}&cjtobqKa`vZE{zwlL#0tEKEU~0INo1quZeJf
zQU!_(nlpSyuF%B%X*3g&XHb@g7`j}x!*$olYHbaFuo|WL=NEMP<TMa|YRAv$Pzx_y
zLQYOZ){Pld6QRhvrxb%$yA$R~Q!f<{W#R(@hB7wjQzsa7H-PT8|F|Qo#<KeRDOE*&
zb-9MnKPS?Rv+MFDgWGnvYC~vE9CWtLNJXZZ7Zq6>+SEnjQ7TG$w%PBiEC+-0m(+Nv
z#hXmzNQs^?)}xo!P{S@l>tc>`jHWcj5y=V16|k6PP-ehj2eMV98J3_-afPB1gI&nR
jT7?=(dn6U0PVxRa(#VkmXs)EgoNVR$5ggN*@h1Skws5Tj

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/MallAreaMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/MallAreaMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..1ab2fb53c12e148e3c8af4b2f98d06f03a4e426e
GIT binary patch
literal 440
zc$|%p-AV&75QQhzZf*UmdgTjfd(+$&Dnda7VT)qH``PWdO_?N1HY@mQUi1NcC~>xm
zKX_vx%$(uyWpZBMUe*9GhNBL&6pV7GG1zA|kED%@R0L#;%zB1pNkIzpG!TBs4s0vv
zukZ;qqbu}nwxT>LNQ|o}NOL|&e-d+Vt#|s$TQu&AH5uLrWkzx77k3!YQlwA`B~b3e
zLP5787VeZ;!SP_2ZXT?oVV#;PPQ)-bg~M0}QZW8wxcJWwmxAfdeI0VTHY}Wz-(MXy
zOa-U+wTs5mgQ-l$G<D8LjK(|J_bm0H&{$%=l<+bcR~o+!pAk+H1q!yHIW38=4T<QE
dsJ4O~XcFy0Pe!|q0ruqXZ@L3Gl-ij40Poqhd-?zX

diff --git out/production/integralmall/cn/armylife/integralmall/Mapper/PointsExchangeRecordMapper.class out/production/integralmall/cn/armylife/integralmall/Mapper/PointsExchangeRecordMapper.class
new file mode 100644
index 0000000000000000000000000000000000000000..a9fc4e9341a0600bb5db3d40dab7fce897fa3af9
GIT binary patch
literal 832
zc$}S5O;5ux40T{^d^5)Pi5uE3%Yh4G2x(|cLh8gcB+jIr*JetSDoqjmH4gj$eiXv(
zCJn?mj2s&KJ^R^p{PFqr4geQ$T!AG9mx1QO#;;0_kW1|_v_i!~Dc%!Ff|mCUq3P{Q
z5D6XP00U!(6RH9w2Gy~67F-d>@BJ|bjzL-K6fGI&b?>`+VB*+l-Z8O|daiD(aYu?h
zbdeeMg%vS6v?(dtf@ZLmqM{mYr5M!e4X-GkIjOiOQ`e$^2N`PNGK&m4zXGln?dO^#
zYa^+LKXC@lx;OiA&*-q#@JNq`(nXoi6A@yBs+b>{q*BgkCU=ziv{2^1IzIZ{an}^Z
zZ{`(WtN??<WDcIIuRoZ~2H2H~rhoeP;xzLf7@Q0;?PQFPGL^o<w${c8Cyk~TKl6+Y
zxkyA1(OUWhr(DberpwtXGhna``6<ydu0Wam3VACGRw3WdHCQKTgP<kYB!3IG$(n}j
b&^4i|MD0Rtmc3WN`^EPF4(ZONj{v>^ZT9(d

diff --git member/.mvn/wrapper/maven-wrapper.jar member/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..01e67997377a393fd672c7dcde9dccbedf0cb1e9
GIT binary patch
literal 48337
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

diff --git out/test/integralmall/cn/armylife/integralmall/IntegralmallApplicationTests.class out/test/integralmall/cn/armylife/integralmall/IntegralmallApplicationTests.class
new file mode 100644
index 0000000000000000000000000000000000000000..4a1e87499b4afb40d6865dd45e48215db8a8e16c
GIT binary patch
literal 571
zc$}S4%Sr<=6uoI{N84&^btAaYoewZ8AD{?T5QIU&mhLmtbi6f_44I6N&vGTW@B{oP
z@lG5>5L`HrljPiU&P^uoAFpo!a0II@s6jn|MhE7g$)GnA_kt^-6Mh}dWb7C;Pf(*f
zWl-PR9tSYbU_aJe*z`%^RC3f#CRV6aD8(;-YzA4TFcuDt9?9J03>xQVA{lf;)bgrG
zBWXt>QpEH_6ALvK7R!A_Hry?e=`j3Pw_^sK*pT4Sg+@#$XzixZ4pTYC9I3%TYva70
zYU`n~37-{oQNj$Jv|MD!%P2}}4NYNVd4c7*Hvek7SN=Z+2R<*)Eb3%xMJgYRz2lKF
zjysa^>STQA6=%fzPOt$1y+`?#NG}2m7HGw3W+k)p0_@qBTZBzd2GAz#d<ke?^Z`p$
et$Fh<jk5O3*#2Q;m9bk@dtSTjvH#7k0DJ-;aE$i=

diff --git market/.mvn/wrapper/maven-wrapper.jar market/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0d5e649888a4843c1520054d9672f80c62ebbb48
GIT binary patch
literal 50710
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%0DCb8ZLT?0Nf4bEO
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

