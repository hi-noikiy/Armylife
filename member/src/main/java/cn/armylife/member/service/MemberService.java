package cn.armylife.member.service;//import Users;import cn.armylife.common.domain.Member;import cn.armylife.common.domain.MemberDeliveryaddress;import cn.armylife.common.domain.Product;import cn.armylife.common.domain.Transactions;import com.github.pagehelper.Page;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.List;@Service@Transactionalpublic interface MemberService {    Long insert(Member record);    /**     * 用户登录     * @param users     * @return     */    Member loginUser(Member users);    /**     * 登录商铺     * @param member     * @return     */    Member loginShop(Member member);    /**     * 重载登录信息     * @param memberId     * @return     */    Member reloadSession(Long memberId);    /**     * 更新用户信息     * @param member     * @return     */    int updateMember(Member member);    /**     * 检查用户openid是否注册     * @param openid     * @return     */    boolean inspectMemberForOpenId(String openid,String type);    /**     * 检查用户phone是否注册     * @param phone     * @return     */    Boolean inspectMemberForPhone(String phone,String type);    /**     * 检验授权码     * @param alid     * @return     */    Boolean inspectShopForALID(String alid);    /**     * 更新跑腿手机号码     * @param member     * @return     */    int updateDeliveryPhone(Member member);    /**     * 添加跑腿提现记录     * @param record     * @return     */    int deliveryinsert(Transactions record);    /**     * 查询零钱明细     * @param payUser     * @return     */    Page<Transactions> selectForDelivery(Long payUser);    /**     * 通过memberId查询member     * @param memberId     * @return     */    Member selectMemberforId(Long memberId);    /**     * 通过appId查询商户信息     * @param appId     * @return     */    Member ShopNewForAppId(String appId);    /**     * 通过tagId查找商品     * @param shopId     * @return     */    List<Product> productForTag(long shopId);    /**     * 设置商家的器送价格(total)     * @param shopId     * @param total     * @return     */    int isdeliver(Long shopId,String total);    Member loginDev(String code);    /**     * 添加用户收货地址     * @param memberDeliveryaddress     * @return     */    int addressInsert(MemberDeliveryaddress memberDeliveryaddress);    /**     * 删除收货地址     * @param addressId     * @return     */    int removeAddress(Long addressId);    /**     * 查询用户收货地址     * @param memberId     * @return     */    List<MemberDeliveryaddress> searchAddress(Long memberId);    /**     * 修改地址     * @param memberDeliveryaddress     * @return     */    int updateAddress(MemberDeliveryaddress memberDeliveryaddress);}