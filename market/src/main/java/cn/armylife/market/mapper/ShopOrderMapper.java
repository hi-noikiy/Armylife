package cn.armylife.market.mapper;

import cn.armylife.common.domain.DeliveryOrder;
import cn.armylife.common.domain.Payments;
import cn.armylife.common.domain.ShopOrder;
import com.github.pagehelper.Page;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.List;

@Mapper
public interface ShopOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer ordersId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated
     */
    int insert(ShopOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated
     */
    ShopOrder selectByPrimaryKey(Integer ordersId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated
     */
    List<ShopOrder> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shop_order
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(ShopOrder record);




    /**
     * 查询用户的订单(可查询用户,商铺)
     * @param shopOrder
     * @return
     */
    Page<ShopOrder> selectAllForMember(ShopOrder shopOrder);

    /**
     * 可查询跑腿订单
     * @param deliveryOrder
     * @return
     */
    Page<DeliveryOrder> selectAlldeliveryForMember(DeliveryOrder deliveryOrder);

    /**
     * 可查询跑腿订单
     * @return
     */
    List<DeliveryOrder> selectAlldelivery();

    DeliveryOrder selectdeliveryForOrder(Long ordersId);

    /**
     * 更新订单状态
     * @param shopOrder
     * @return
     */
    int updateShopOrder(ShopOrder shopOrder);

    /**
     * 通过orderid查找订单
     * @param orderId
     * @return
     */
    ShopOrder selectOrder(Long orderId);

    /**
     * 月销
     * @param shopId
     * @return
     */
    String rankMonthPayForShop(Long shopId);

    /**
     * 日销
     * @param shopId
     * @return
     */
    String rankDayPayForShop(Long shopId);

    /**
     * 确认接单
     * @param orderId
     * @return
     */
    int confirmOrder(Long orderId);

    /**
     * 拒绝退款
     * @param orderId
     * @return
     */
    int rejectRefund(Long orderId);

    /**
     * 确认退款
     * @param orderId
     * @return
     */
    int confirmRefund(Long orderId);

    /**
     * 完成订单
     * @param shopOrder
     * @return
     */
    int endOrder(ShopOrder shopOrder);

    /**
     * 查询已结束订单
     * @param stuId
     * @return
     */
    Page<ShopOrder> selectEndOrder(Long stuId);

    /**
     * 更新用户金额
     * @param memberTotal
     * @param memberId
     * @return
     */
    int orderFulfillment(@Param("memberTotal" )BigDecimal memberTotal,@Param("memberId")Long memberId);

    /**
     * 查询子订单
     * @return
     */
    List<ShopOrder> selectAfterOrder();

    /**
     * 查询当前订单的排队人数
     * @param ordersId
     * @return
     */
    int shopPeople(Long ordersId);

    /**
     * 更新退款信息
     * @param payments
     * @return
     */
    int updatePayments(Payments payments);

    /**
     * 更新到店用餐人数
     * @param shopOrder
     * @return
     */
    int updatePeopleForOrder(ShopOrder shopOrder);


    /**
     * 查询正在排队的理发店订单
     * @return
     */
    List<ShopOrder> selectOrderForHair();
}